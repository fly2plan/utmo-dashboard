The development server has disconnected.
Refresh the page if necessary. webpackHotDevClient.js:76
[HMR] Waiting for update signal from WDS... log.js:24
Array [ "operatingAirline", "icaoCode" ]
 
Array [ "icaoCode" ]
 
Array [ "operatingAirline" ]
flight-plan.tsx:112
updateToFlightPlan {
  "operatingAirline": {
    "icaoCode": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "iataCode": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "icaoCode": "harry's test"
}
flight-plan.tsx:122
Array [ "operatingAirline", "name" ]
 
Array [ "name" ]
 
Array [ "operatingAirline" ]
flight-plan.tsx:112
updateToFlightPlan {
  "operatingAirline": {
    "name": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "iataCode": "harry's test",
  "icaoCode": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "name": "harry's test"
}
flight-plan.tsx:122
Array [ "flightNumber", "airlineCode" ]
 
Array [ "flightNumber", "airlineCode" ]
 
Array []
flight-plan.tsx:112
updateToFlightPlan {
  "flightNumber": {
    "airlineCode": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "operatingAirline": {
    "iataCode": "harry's test",
    "icaoCode": "harry's test",
    "name": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "flightNumber": {
    "airlineCode": "harry's test"
  }
}
flight-plan.tsx:122
Array [ "flightNumber", "trackNumber" ]
 
Array [ "trackNumber" ]
 
Array [ "flightNumber" ]
flight-plan.tsx:112
updateToFlightPlan {
  "flightNumber": {
    "trackNumber": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "airlineCode": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "trackNumber": "harry's test"
}
flight-plan.tsx:122
Array [ "flightNumber", "suffix" ]
 
Array [ "suffix" ]
 
Array [ "flightNumber" ]
flight-plan.tsx:112
updateToFlightPlan {
  "flightNumber": {
    "suffix": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "airlineCode": "harry's test",
  "trackNumber": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "suffix": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "AircraftMovementStatus", "Cancelled" ]
 
Array(3) [ "AircraftMovement", "AircraftMovementStatus", "Cancelled" ]
 
Array []
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "AircraftMovementStatus": {
      "Cancelled": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "operatingAirline": {
    "iataCode": "harry's test",
    "icaoCode": "harry's test",
    "name": "harry's test"
  },
  "flightNumber": {
    "airlineCode": "harry's test",
    "trackNumber": "harry's test",
    "suffix": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "AircraftMovement": {
    "AircraftMovementStatus": {
      "Cancelled": "harry's test"
    }
  }
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "AircraftMovementStatus", "Cleared" ]
 
Array [ "Cleared" ]
 
Array [ "AircraftMovement", "AircraftMovementStatus" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "AircraftMovementStatus": {
      "Cleared": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Cancelled": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Cleared": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "AircraftMovementStatus", "Code" ]
 
Array [ "Code" ]
 
Array [ "AircraftMovement", "AircraftMovementStatus" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "AircraftMovementStatus": {
      "Code": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Cancelled": "harry's test",
  "Cleared": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Code": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "AircraftMovementStatus", "DeicingStatus" ]
 
Array [ "DeicingStatus" ]
 
Array [ "AircraftMovement", "AircraftMovementStatus" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "AircraftMovementStatus": {
      "DeicingStatus": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Cancelled": "harry's test",
  "Cleared": "harry's test",
  "Code": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "DeicingStatus": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "AircraftMovementStatus", "Deleted" ]
 
Array [ "Deleted" ]
 
Array [ "AircraftMovement", "AircraftMovementStatus" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "AircraftMovementStatus": {
      "Deleted": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Cancelled": "harry's test",
  "Cleared": "harry's test",
  "Code": "harry's test",
  "DeicingStatus": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Deleted": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "AircraftMovementStatus", "OperationalStatus" ]
 
Array [ "OperationalStatus" ]
 
Array [ "AircraftMovement", "AircraftMovementStatus" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "AircraftMovementStatus": {
      "OperationalStatus": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Cancelled": "harry's test",
  "Cleared": "harry's test",
  "Code": "harry's test",
  "DeicingStatus": "harry's test",
  "Deleted": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "OperationalStatus": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "AircraftMovementStatus", "PublicStatus" ]
 
Array [ "PublicStatus" ]
 
Array [ "AircraftMovement", "AircraftMovementStatus" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "AircraftMovementStatus": {
      "PublicStatus": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Cancelled": "harry's test",
  "Cleared": "harry's test",
  "Code": "harry's test",
  "DeicingStatus": "harry's test",
  "Deleted": "harry's test",
  "OperationalStatus": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "PublicStatus": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "AircraftMovementStatus", "Regulated" ]
 
Array [ "Regulated" ]
 
Array [ "AircraftMovement", "AircraftMovementStatus" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "AircraftMovementStatus": {
      "Regulated": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Cancelled": "harry's test",
  "Cleared": "harry's test",
  "Code": "harry's test",
  "DeicingStatus": "harry's test",
  "Deleted": "harry's test",
  "OperationalStatus": "harry's test",
  "PublicStatus": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Regulated": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "AircraftMovement", "AircraftMovementIdentification", "AircraftMovementCodeShare", "Number" ]
 
Array(3) [ "AircraftMovementIdentification", "AircraftMovementCodeShare", "Number" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "AircraftMovementIdentification": {
      "AircraftMovementCodeShare": {
        "Number": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test"
    }
  }
}
flight-plan.tsx:122
Array(4) [ "AircraftMovement", "AircraftMovementIdentification", "AircraftMovementCodeShare", "ShowToPublic" ]
 
Array [ "ShowToPublic" ]
 
Array(3) [ "AircraftMovement", "AircraftMovementIdentification", "AircraftMovementCodeShare" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "AircraftMovementIdentification": {
      "AircraftMovementCodeShare": {
        "ShowToPublic": ""
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Number": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ShowToPublic": ""
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "AircraftMovementIdentification", "AirTrafficControlCallsign" ]
 
Array [ "AirTrafficControlCallsign" ]
 
Array [ "AircraftMovement", "AircraftMovementIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "AircraftMovementIdentification": {
      "AirTrafficControlCallsign": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementCodeShare": {
    "Number": "harry's test",
    "ShowToPublic": ""
  }
}
flight-plan.tsx:121
objectToAdd {
  "AirTrafficControlCallsign": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "AircraftMovementIdentification", "DisplayedIdentifier" ]
 
Array [ "DisplayedIdentifier" ]
 
Array [ "AircraftMovement", "AircraftMovementIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "AircraftMovementIdentification": {
      "DisplayedIdentifier": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementCodeShare": {
    "Number": "harry's test",
    "ShowToPublic": ""
  },
  "AirTrafficControlCallsign": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "DisplayedIdentifier": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "AircraftMovementIdentification", "IATAFlightNumber" ]
 
Array [ "IATAFlightNumber" ]
 
Array [ "AircraftMovement", "AircraftMovementIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "AircraftMovementIdentification": {
      "IATAFlightNumber": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementCodeShare": {
    "Number": "harry's test",
    "ShowToPublic": ""
  },
  "AirTrafficControlCallsign": "harry's test",
  "DisplayedIdentifier": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "IATAFlightNumber": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "AircraftMovementIdentification", "IATAOperatorIdentifier" ]
 
Array [ "IATAOperatorIdentifier" ]
 
Array [ "AircraftMovement", "AircraftMovementIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "AircraftMovementIdentification": {
      "IATAOperatorIdentifier": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementCodeShare": {
    "Number": "harry's test",
    "ShowToPublic": ""
  },
  "AirTrafficControlCallsign": "harry's test",
  "DisplayedIdentifier": "harry's test",
  "IATAFlightNumber": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "IATAOperatorIdentifier": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "AircraftMovementIdentification", "ICAOIdentifier" ]
 
Array [ "ICAOIdentifier" ]
 
Array [ "AircraftMovement", "AircraftMovementIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "AircraftMovementIdentification": {
      "ICAOIdentifier": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementCodeShare": {
    "Number": "harry's test",
    "ShowToPublic": ""
  },
  "AirTrafficControlCallsign": "harry's test",
  "DisplayedIdentifier": "harry's test",
  "IATAFlightNumber": "harry's test",
  "IATAOperatorIdentifier": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ICAOIdentifier": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "AircraftMovementIdentification", "ICAONumber" ]
 
Array [ "ICAONumber" ]
 
Array [ "AircraftMovement", "AircraftMovementIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "AircraftMovementIdentification": {
      "ICAONumber": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementCodeShare": {
    "Number": "harry's test",
    "ShowToPublic": ""
  },
  "AirTrafficControlCallsign": "harry's test",
  "DisplayedIdentifier": "harry's test",
  "IATAFlightNumber": "harry's test",
  "IATAOperatorIdentifier": "harry's test",
  "ICAOIdentifier": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ICAONumber": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "AircraftMovementIdentification", "Number" ]
 
Array [ "Number" ]
 
Array [ "AircraftMovement", "AircraftMovementIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "AircraftMovementIdentification": {
      "Number": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementCodeShare": {
    "Number": "harry's test",
    "ShowToPublic": ""
  },
  "AirTrafficControlCallsign": "harry's test",
  "DisplayedIdentifier": "harry's test",
  "IATAFlightNumber": "harry's test",
  "IATAOperatorIdentifier": "harry's test",
  "ICAOIdentifier": "harry's test",
  "ICAONumber": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Number": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "AircraftMovementIdentification", "ScheduledDateTime" ]
 
Array [ "ScheduledDateTime" ]
 
Array [ "AircraftMovement", "AircraftMovementIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "AircraftMovementIdentification": {
      "ScheduledDateTime": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementCodeShare": {
    "Number": "harry's test",
    "ShowToPublic": ""
  },
  "AirTrafficControlCallsign": "harry's test",
  "DisplayedIdentifier": "harry's test",
  "IATAFlightNumber": "harry's test",
  "IATAOperatorIdentifier": "harry's test",
  "ICAOIdentifier": "harry's test",
  "ICAONumber": "harry's test",
  "Number": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ScheduledDateTime": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "AircraftMovementIdentification", "Suffix" ]
 
Array [ "Suffix" ]
 
Array [ "AircraftMovement", "AircraftMovementIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "AircraftMovementIdentification": {
      "Suffix": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementCodeShare": {
    "Number": "harry's test",
    "ShowToPublic": ""
  },
  "AirTrafficControlCallsign": "harry's test",
  "DisplayedIdentifier": "harry's test",
  "IATAFlightNumber": "harry's test",
  "IATAOperatorIdentifier": "harry's test",
  "ICAOIdentifier": "harry's test",
  "ICAONumber": "harry's test",
  "Number": "harry's test",
  "ScheduledDateTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Suffix": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "AircraftMovementIdentification", "SystemIdentifier" ]
 
Array [ "SystemIdentifier" ]
 
Array [ "AircraftMovement", "AircraftMovementIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "AircraftMovementIdentification": {
      "SystemIdentifier": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementCodeShare": {
    "Number": "harry's test",
    "ShowToPublic": ""
  },
  "AirTrafficControlCallsign": "harry's test",
  "DisplayedIdentifier": "harry's test",
  "IATAFlightNumber": "harry's test",
  "IATAOperatorIdentifier": "harry's test",
  "ICAOIdentifier": "harry's test",
  "ICAONumber": "harry's test",
  "Number": "harry's test",
  "ScheduledDateTime": "harry's test",
  "Suffix": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "SystemIdentifier": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "AircraftMovementIdentification", "TurnRoundIdentifier" ]
 
Array [ "TurnRoundIdentifier" ]
 
Array [ "AircraftMovement", "AircraftMovementIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "AircraftMovementIdentification": {
      "TurnRoundIdentifier": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementCodeShare": {
    "Number": "harry's test",
    "ShowToPublic": ""
  },
  "AirTrafficControlCallsign": "harry's test",
  "DisplayedIdentifier": "harry's test",
  "IATAFlightNumber": "harry's test",
  "IATAOperatorIdentifier": "harry's test",
  "ICAOIdentifier": "harry's test",
  "ICAONumber": "harry's test",
  "Number": "harry's test",
  "ScheduledDateTime": "harry's test",
  "Suffix": "harry's test",
  "SystemIdentifier": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "TurnRoundIdentifier": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "BillingInformation", "RebatePassengerNumbers" ]
 
Array [ "BillingInformation", "RebatePassengerNumbers" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "BillingInformation": {
      "RebatePassengerNumbers": 1.1
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1
  }
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "BillingInformation", "RebatePassengerReasonCode" ]
 
Array [ "RebatePassengerReasonCode" ]
 
Array [ "AircraftMovement", "BillingInformation" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "BillingInformation": {
      "RebatePassengerReasonCode": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "RebatePassengerNumbers": 1.1
}
flight-plan.tsx:121
objectToAdd {
  "RebatePassengerReasonCode": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "BillingInformation", "AircraftFEGPEquipped" ]
 
Array [ "AircraftFEGPEquipped" ]
 
Array [ "AircraftMovement", "BillingInformation" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "BillingInformation": {
      "AircraftFEGPEquipped": ""
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "RebatePassengerNumbers": 1.1,
  "RebatePassengerReasonCode": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "AircraftFEGPEquipped": ""
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "BillingInformation", "AircraftPCAEquipped" ]
 
Array [ "AircraftPCAEquipped" ]
 
Array [ "AircraftMovement", "BillingInformation" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "BillingInformation": {
      "AircraftPCAEquipped": ""
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "RebatePassengerNumbers": 1.1,
  "RebatePassengerReasonCode": "harry's test",
  "AircraftFEGPEquipped": ""
}
flight-plan.tsx:121
objectToAdd {
  "AircraftPCAEquipped": ""
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "ConnectionAircraftMovement", "Order" ]
 
Array [ "ConnectionAircraftMovement", "Order" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "ConnectionAircraftMovement": {
      "Order": 1.1
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  }
}
flight-plan.tsx:121
objectToAdd {
  "ConnectionAircraftMovement": {
    "Order": 1.1
  }
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "ConnectionAircraftMovement", "TransferBagCount" ]
 
Array [ "TransferBagCount" ]
 
Array [ "AircraftMovement", "ConnectionAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "ConnectionAircraftMovement": {
      "TransferBagCount": 1.1
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Order": 1.1
}
flight-plan.tsx:121
objectToAdd {
  "TransferBagCount": 1.1
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "ConnectionAircraftMovement", "TransferPassengerCount" ]
 
Array [ "TransferPassengerCount" ]
 
Array [ "AircraftMovement", "ConnectionAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "ConnectionAircraftMovement": {
      "TransferPassengerCount": 1.1
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Order": 1.1,
  "TransferBagCount": 1.1
}
flight-plan.tsx:121
objectToAdd {
  "TransferPassengerCount": 1.1
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "ConnectionAircraftMovement", "CheckinZone" ]
 
Array [ "CheckinZone" ]
 
Array [ "AircraftMovement", "ConnectionAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "ConnectionAircraftMovement": {
      "CheckinZone": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Order": 1.1,
  "TransferBagCount": 1.1,
  "TransferPassengerCount": 1.1
}
flight-plan.tsx:121
objectToAdd {
  "CheckinZone": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "ConnectionAircraftMovement", "ConnectingFlightDestination" ]
 
Array [ "ConnectingFlightDestination" ]
 
Array [ "AircraftMovement", "ConnectionAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "ConnectionAircraftMovement": {
      "ConnectingFlightDestination": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Order": 1.1,
  "TransferBagCount": 1.1,
  "TransferPassengerCount": 1.1,
  "CheckinZone": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ConnectingFlightDestination": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "ConnectionAircraftMovement", "ConnectingFlightNumber" ]
 
Array [ "ConnectingFlightNumber" ]
 
Array [ "AircraftMovement", "ConnectionAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "ConnectionAircraftMovement": {
      "ConnectingFlightNumber": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Order": 1.1,
  "TransferBagCount": 1.1,
  "TransferPassengerCount": 1.1,
  "CheckinZone": "harry's test",
  "ConnectingFlightDestination": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ConnectingFlightNumber": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "ConnectionAircraftMovement", "EstimatedDateTime" ]
 
Array [ "EstimatedDateTime" ]
 
Array [ "AircraftMovement", "ConnectionAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "ConnectionAircraftMovement": {
      "EstimatedDateTime": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Order": 1.1,
  "TransferBagCount": 1.1,
  "TransferPassengerCount": 1.1,
  "CheckinZone": "harry's test",
  "ConnectingFlightDestination": "harry's test",
  "ConnectingFlightNumber": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedDateTime": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "ConnectionAircraftMovement", "Gate" ]
 
Array [ "Gate" ]
 
Array [ "AircraftMovement", "ConnectionAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "ConnectionAircraftMovement": {
      "Gate": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Order": 1.1,
  "TransferBagCount": 1.1,
  "TransferPassengerCount": 1.1,
  "CheckinZone": "harry's test",
  "ConnectingFlightDestination": "harry's test",
  "ConnectingFlightNumber": "harry's test",
  "EstimatedDateTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Gate": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "ConnectionAircraftMovement", "OperatedDateTime" ]
 
Array [ "OperatedDateTime" ]
 
Array [ "AircraftMovement", "ConnectionAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "ConnectionAircraftMovement": {
      "OperatedDateTime": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Order": 1.1,
  "TransferBagCount": 1.1,
  "TransferPassengerCount": 1.1,
  "CheckinZone": "harry's test",
  "ConnectingFlightDestination": "harry's test",
  "ConnectingFlightNumber": "harry's test",
  "EstimatedDateTime": "harry's test",
  "Gate": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "OperatedDateTime": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "ConnectionAircraftMovement", "ScheduledDateTime" ]
 
Array [ "ScheduledDateTime" ]
 
Array [ "AircraftMovement", "ConnectionAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "ConnectionAircraftMovement": {
      "ScheduledDateTime": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Order": 1.1,
  "TransferBagCount": 1.1,
  "TransferPassengerCount": 1.1,
  "CheckinZone": "harry's test",
  "ConnectingFlightDestination": "harry's test",
  "ConnectingFlightNumber": "harry's test",
  "EstimatedDateTime": "harry's test",
  "Gate": "harry's test",
  "OperatedDateTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ScheduledDateTime": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "ConnectionAircraftMovement", "Terminal" ]
 
Array [ "Terminal" ]
 
Array [ "AircraftMovement", "ConnectionAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "ConnectionAircraftMovement": {
      "Terminal": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Order": 1.1,
  "TransferBagCount": 1.1,
  "TransferPassengerCount": 1.1,
  "CheckinZone": "harry's test",
  "ConnectingFlightDestination": "harry's test",
  "ConnectingFlightNumber": "harry's test",
  "EstimatedDateTime": "harry's test",
  "Gate": "harry's test",
  "OperatedDateTime": "harry's test",
  "ScheduledDateTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Terminal": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "HandlingAgentParty", "CateringLoaderNumber" ]
 
Array [ "HandlingAgentParty", "CateringLoaderNumber" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "HandlingAgentParty": {
      "CateringLoaderNumber": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test"
  }
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "HandlingAgentParty", "Code" ]
 
Array [ "Code" ]
 
Array [ "AircraftMovement", "HandlingAgentParty" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "HandlingAgentParty": {
      "Code": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "CateringLoaderNumber": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Code": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "HandlingAgentParty", "HandlingCrewNumber" ]
 
Array [ "HandlingCrewNumber" ]
 
Array [ "AircraftMovement", "HandlingAgentParty" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "HandlingAgentParty": {
      "HandlingCrewNumber": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "CateringLoaderNumber": "harry's test",
  "Code": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "HandlingCrewNumber": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "HandlingAgentParty", "Name" ]
 
Array [ "Name" ]
 
Array [ "AircraftMovement", "HandlingAgentParty" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "HandlingAgentParty": {
      "Name": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "CateringLoaderNumber": "harry's test",
  "Code": "harry's test",
  "HandlingCrewNumber": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Name": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "HandlingAgentParty", "PassengerHandlingTeamIdentifier" ]
 
Array [ "PassengerHandlingTeamIdentifier" ]
 
Array [ "AircraftMovement", "HandlingAgentParty" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "HandlingAgentParty": {
      "PassengerHandlingTeamIdentifier": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "CateringLoaderNumber": "harry's test",
  "Code": "harry's test",
  "HandlingCrewNumber": "harry's test",
  "Name": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "PassengerHandlingTeamIdentifier": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "HandlingAgentParty", "Type" ]
 
Array [ "Type" ]
 
Array [ "AircraftMovement", "HandlingAgentParty" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "HandlingAgentParty": {
      "Type": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "CateringLoaderNumber": "harry's test",
  "Code": "harry's test",
  "HandlingCrewNumber": "harry's test",
  "Name": "harry's test",
  "PassengerHandlingTeamIdentifier": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Type": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "IATAIrregularityDetails", "Duration" ]
 
Array [ "IATAIrregularityDetails", "Duration" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "IATAIrregularityDetails": {
      "Duration": 1.1
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "IATAIrregularityDetails": {
    "Duration": 1.1
  }
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "IATAIrregularityDetails", "NumericCode" ]
 
Array [ "NumericCode" ]
 
Array [ "AircraftMovement", "IATAIrregularityDetails" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "IATAIrregularityDetails": {
      "NumericCode": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Duration": 1.1
}
flight-plan.tsx:121
objectToAdd {
  "NumericCode": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "LinkedAircraftMovement", "ICAONumber" ]
 
Array [ "LinkedAircraftMovement", "ICAONumber" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "LinkedAircraftMovement": {
      "ICAONumber": 1.1
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1
  }
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "LinkedAircraftMovement", "ArrivalOrDeparture" ]
 
Array [ "ArrivalOrDeparture" ]
 
Array [ "AircraftMovement", "LinkedAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "LinkedAircraftMovement": {
      "ArrivalOrDeparture": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "ICAONumber": 1.1
}
flight-plan.tsx:121
objectToAdd {
  "ArrivalOrDeparture": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "LinkedAircraftMovement", "IATAFlightNumber" ]
 
Array [ "IATAFlightNumber" ]
 
Array [ "AircraftMovement", "LinkedAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "LinkedAircraftMovement": {
      "IATAFlightNumber": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "ICAONumber": 1.1,
  "ArrivalOrDeparture": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "IATAFlightNumber": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "LinkedAircraftMovement", "IATAOperatorIdentifier" ]
 
Array [ "IATAOperatorIdentifier" ]
 
Array [ "AircraftMovement", "LinkedAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "LinkedAircraftMovement": {
      "IATAOperatorIdentifier": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "ICAONumber": 1.1,
  "ArrivalOrDeparture": "harry's test",
  "IATAFlightNumber": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "IATAOperatorIdentifier": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "LinkedAircraftMovement", "ICAOIdentifier" ]
 
Array [ "ICAOIdentifier" ]
 
Array [ "AircraftMovement", "LinkedAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "LinkedAircraftMovement": {
      "ICAOIdentifier": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "ICAONumber": 1.1,
  "ArrivalOrDeparture": "harry's test",
  "IATAFlightNumber": "harry's test",
  "IATAOperatorIdentifier": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ICAOIdentifier": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "LinkedAircraftMovement", "ScheduledDateTime" ]
 
Array [ "ScheduledDateTime" ]
 
Array [ "AircraftMovement", "LinkedAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "LinkedAircraftMovement": {
      "ScheduledDateTime": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "ICAONumber": 1.1,
  "ArrivalOrDeparture": "harry's test",
  "IATAFlightNumber": "harry's test",
  "IATAOperatorIdentifier": "harry's test",
  "ICAOIdentifier": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ScheduledDateTime": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "LinkedAircraftMovement", "Suffix" ]
 
Array [ "Suffix" ]
 
Array [ "AircraftMovement", "LinkedAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "LinkedAircraftMovement": {
      "Suffix": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "ICAONumber": 1.1,
  "ArrivalOrDeparture": "harry's test",
  "IATAFlightNumber": "harry's test",
  "IATAOperatorIdentifier": "harry's test",
  "ICAOIdentifier": "harry's test",
  "ScheduledDateTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Suffix": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "LinkedAircraftMovement", "SystemIdentifier" ]
 
Array [ "SystemIdentifier" ]
 
Array [ "AircraftMovement", "LinkedAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "LinkedAircraftMovement": {
      "SystemIdentifier": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "ICAONumber": 1.1,
  "ArrivalOrDeparture": "harry's test",
  "IATAFlightNumber": "harry's test",
  "IATAOperatorIdentifier": "harry's test",
  "ICAOIdentifier": "harry's test",
  "ScheduledDateTime": "harry's test",
  "Suffix": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "SystemIdentifier": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "LinkedAircraftMovement", "AircraftOnGround" ]
 
Array [ "AircraftOnGround" ]
 
Array [ "AircraftMovement", "LinkedAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "LinkedAircraftMovement": {
      "AircraftOnGround": ""
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "ICAONumber": 1.1,
  "ArrivalOrDeparture": "harry's test",
  "IATAFlightNumber": "harry's test",
  "IATAOperatorIdentifier": "harry's test",
  "ICAOIdentifier": "harry's test",
  "ScheduledDateTime": "harry's test",
  "Suffix": "harry's test",
  "SystemIdentifier": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "AircraftOnGround": ""
}
flight-plan.tsx:122
Array(4) [ "AircraftMovement", "OperationalTimes", "AircraftMovementMeasure", "Code" ]
 
Array(3) [ "OperationalTimes", "AircraftMovementMeasure", "Code" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "AircraftMovementMeasure": {
        "Code": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  }
}
flight-plan.tsx:121
objectToAdd {
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test"
    }
  }
}
flight-plan.tsx:122
Array(4) [ "AircraftMovement", "OperationalTimes", "AircraftMovementMeasure", "Description" ]
 
Array [ "Description" ]
 
Array(3) [ "AircraftMovement", "OperationalTimes", "AircraftMovementMeasure" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "AircraftMovementMeasure": {
        "Description": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Code": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Description": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "AircraftMovement", "OperationalTimes", "AircraftMovementMeasure", "Identifier" ]
 
Array [ "Identifier" ]
 
Array(3) [ "AircraftMovement", "OperationalTimes", "AircraftMovementMeasure" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "AircraftMovementMeasure": {
        "Identifier": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Code": "harry's test",
  "Description": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Identifier": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "AircraftMovement", "OperationalTimes", "AircraftMovementMeasure", "Name" ]
 
Array [ "Name" ]
 
Array(3) [ "AircraftMovement", "OperationalTimes", "AircraftMovementMeasure" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "AircraftMovementMeasure": {
        "Name": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Code": "harry's test",
  "Description": "harry's test",
  "Identifier": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Name": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "AircraftMovement", "OperationalTimes", "AircraftMovementMeasure", "Title" ]
 
Array [ "Title" ]
 
Array(3) [ "AircraftMovement", "OperationalTimes", "AircraftMovementMeasure" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "AircraftMovementMeasure": {
        "Title": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Code": "harry's test",
  "Description": "harry's test",
  "Identifier": "harry's test",
  "Name": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Title": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "AircraftMovement", "OperationalTimes", "AircraftMovementMeasure", "Value" ]
 
Array [ "Value" ]
 
Array(3) [ "AircraftMovement", "OperationalTimes", "AircraftMovementMeasure" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "AircraftMovementMeasure": {
        "Value": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Code": "harry's test",
  "Description": "harry's test",
  "Identifier": "harry's test",
  "Name": "harry's test",
  "Title": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Value": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "ActualCommenceofGroundHandlingTimeACGT" ]
 
Array [ "ActualCommenceofGroundHandlingTimeACGT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "ActualCommenceofGroundHandlingTimeACGT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "ActualCommencementofDeicingTimeACZT" ]
 
Array [ "ActualCommencementofDeicingTimeACZT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "ActualCommencementofDeicingTimeACZT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualCommencementofDeicingTimeACZT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "ActualDeIcingDurationADIT" ]
 
Array [ "ActualDeIcingDurationADIT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "ActualDeIcingDurationADIT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualDeIcingDurationADIT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "ActualEndBoardingTimeAEBT" ]
 
Array [ "ActualEndBoardingTimeAEBT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "ActualEndBoardingTimeAEBT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualEndBoardingTimeAEBT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "ActualEndofDeicingTimeAEZT" ]
 
Array [ "ActualEndofDeicingTimeAEZT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "ActualEndofDeicingTimeAEZT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualEndofDeicingTimeAEZT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "ActualEndofGroundHandlingTimeAEGT" ]
 
Array [ "ActualEndofGroundHandlingTimeAEGT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "ActualEndofGroundHandlingTimeAEGT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualEndofGroundHandlingTimeAEGT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "ActualFinalApproachTimeAFAT" ]
 
Array [ "ActualFinalApproachTimeAFAT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "ActualFinalApproachTimeAFAT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualFinalApproachTimeAFAT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "ActualGroundHandlingDurationAGHT" ]
 
Array [ "ActualGroundHandlingDurationAGHT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "ActualGroundHandlingDurationAGHT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualGroundHandlingDurationAGHT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "ActualInBlockTimeAIBT" ]
 
Array [ "ActualInBlockTimeAIBT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "ActualInBlockTimeAIBT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualInBlockTimeAIBT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "ActualLandingTimeALDT" ]
 
Array [ "ActualLandingTimeALDT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "ActualLandingTimeALDT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualLandingTimeALDT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "ActualLastCallTime" ]
 
Array [ "ActualLastCallTime" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "ActualLastCallTime": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualLastCallTime": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "ActualOffBlockTimeAOBT" ]
 
Array [ "ActualOffBlockTimeAOBT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "ActualOffBlockTimeAOBT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualOffBlockTimeAOBT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "ActualReadyforDeicingTimeARZT" ]
 
Array [ "ActualReadyforDeicingTimeARZT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "ActualReadyforDeicingTimeARZT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualReadyforDeicingTimeARZT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "ActualReadyforDepartureTimeARDT" ]
 
Array [ "ActualReadyforDepartureTimeARDT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "ActualReadyforDepartureTimeARDT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualReadyforDepartureTimeARDT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "ActualStartBoardingTimeASBT" ]
 
Array [ "ActualStartBoardingTimeASBT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "ActualStartBoardingTimeASBT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualStartBoardingTimeASBT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "ActualStartUpApprovalTimeASAT" ]
 
Array [ "ActualStartUpApprovalTimeASAT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "ActualStartUpApprovalTimeASAT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualStartUpApprovalTimeASAT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "ActualStartUpRequestTimeASRT" ]
 
Array [ "ActualStartUpRequestTimeASRT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "ActualStartUpRequestTimeASRT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualStartUpRequestTimeASRT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "ActualTakeOffTimeATOT" ]
 
Array [ "ActualTakeOffTimeATOT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "ActualTakeOffTimeATOT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualTakeOffTimeATOT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "ActualTaxiInDurationAXIT" ]
 
Array [ "ActualTaxiInDurationAXIT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "ActualTaxiInDurationAXIT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualTaxiInDurationAXIT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "ActualTaxiOutDurationAXOT" ]
 
Array [ "ActualTaxiOutDurationAXOT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "ActualTaxiOutDurationAXOT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualTaxiOutDurationAXOT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "ActualTimeOfOperationLastPortOfCallLPocATO" ]
 
Array [ "ActualTimeOfOperationLastPortOfCallLPocATO" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "ActualTurnaroundTimeATTT" ]
 
Array [ "ActualTurnaroundTimeATTT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "ActualTurnaroundTimeATTT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualTurnaroundTimeATTT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "CalculatedTakeOffTimeCTOT" ]
 
Array [ "CalculatedTakeOffTimeCTOT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "CalculatedTakeOffTimeCTOT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "CalculatedTakeOffTimeCTOT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "EntryintoApproachZoneTime" ]
 
Array [ "EntryintoApproachZoneTime" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "EntryintoApproachZoneTime": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EntryintoApproachZoneTime": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "EstimatedCommencementofDeIcingTimeECZT" ]
 
Array [ "EstimatedCommencementofDeIcingTimeECZT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "EstimatedCommencementofDeIcingTimeECZT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "EstimatedDeIcingDurationEDIT" ]
 
Array [ "EstimatedDeIcingDurationEDIT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "EstimatedDeIcingDurationEDIT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedDeIcingDurationEDIT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "EstimatedEndBoardingTimeEEBT" ]
 
Array [ "EstimatedEndBoardingTimeEEBT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "EstimatedEndBoardingTimeEEBT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedEndBoardingTimeEEBT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "EstimatedEndofDeicingTimeEEZT" ]
 
Array [ "EstimatedEndofDeicingTimeEEZT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "EstimatedEndofDeicingTimeEEZT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedEndofDeicingTimeEEZT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "EstimatedInBlockTimeEIBT" ]
 
Array [ "EstimatedInBlockTimeEIBT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "EstimatedInBlockTimeEIBT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedInBlockTimeEIBT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "EstimatedLandingTimeELDT" ]
 
Array [ "EstimatedLandingTimeELDT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "EstimatedLandingTimeELDT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedLandingTimeELDT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "EstimatedLastCallTime" ]
 
Array [ "EstimatedLastCallTime" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "EstimatedLastCallTime": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedLastCallTime": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "EstimatedOffBlockTimeEOBT" ]
 
Array [ "EstimatedOffBlockTimeEOBT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "EstimatedOffBlockTimeEOBT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedOffBlockTimeEOBT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "EstimatedReadyforDeicingTimeERZT" ]
 
Array [ "EstimatedReadyforDeicingTimeERZT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "EstimatedReadyforDeicingTimeERZT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test",
  "EstimatedOffBlockTimeEOBT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedReadyforDeicingTimeERZT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "EstimatedStartBoardingTime" ]
 
Array [ "EstimatedStartBoardingTime" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "EstimatedStartBoardingTime": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test",
  "EstimatedOffBlockTimeEOBT": "harry's test",
  "EstimatedReadyforDeicingTimeERZT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedStartBoardingTime": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "EstimatedTakeOffTimeETOT" ]
 
Array [ "EstimatedTakeOffTimeETOT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "EstimatedTakeOffTimeETOT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test",
  "EstimatedOffBlockTimeEOBT": "harry's test",
  "EstimatedReadyforDeicingTimeERZT": "harry's test",
  "EstimatedStartBoardingTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedTakeOffTimeETOT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "EstimatedTaxiInDurationEXIT" ]
 
Array [ "EstimatedTaxiInDurationEXIT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "EstimatedTaxiInDurationEXIT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test",
  "EstimatedOffBlockTimeEOBT": "harry's test",
  "EstimatedReadyforDeicingTimeERZT": "harry's test",
  "EstimatedStartBoardingTime": "harry's test",
  "EstimatedTakeOffTimeETOT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedTaxiInDurationEXIT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "EstimatedTaxiOutDurationEXOT" ]
 
Array [ "EstimatedTaxiOutDurationEXOT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "EstimatedTaxiOutDurationEXOT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test",
  "EstimatedOffBlockTimeEOBT": "harry's test",
  "EstimatedReadyforDeicingTimeERZT": "harry's test",
  "EstimatedStartBoardingTime": "harry's test",
  "EstimatedTakeOffTimeETOT": "harry's test",
  "EstimatedTaxiInDurationEXIT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedTaxiOutDurationEXOT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "EstimatedTurnAroundDurationETTT" ]
 
Array [ "EstimatedTurnAroundDurationETTT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "EstimatedTurnAroundDurationETTT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test",
  "EstimatedOffBlockTimeEOBT": "harry's test",
  "EstimatedReadyforDeicingTimeERZT": "harry's test",
  "EstimatedStartBoardingTime": "harry's test",
  "EstimatedTakeOffTimeETOT": "harry's test",
  "EstimatedTaxiInDurationEXIT": "harry's test",
  "EstimatedTaxiOutDurationEXOT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedTurnAroundDurationETTT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "MinimumTurnAroundTimeMTTT" ]
 
Array [ "MinimumTurnAroundTimeMTTT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "MinimumTurnAroundTimeMTTT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test",
  "EstimatedOffBlockTimeEOBT": "harry's test",
  "EstimatedReadyforDeicingTimeERZT": "harry's test",
  "EstimatedStartBoardingTime": "harry's test",
  "EstimatedTakeOffTimeETOT": "harry's test",
  "EstimatedTaxiInDurationEXIT": "harry's test",
  "EstimatedTaxiOutDurationEXOT": "harry's test",
  "EstimatedTurnAroundDurationETTT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "MinimumTurnAroundTimeMTTT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "PlannedLastCallTime" ]
 
Array [ "PlannedLastCallTime" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "PlannedLastCallTime": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test",
  "EstimatedOffBlockTimeEOBT": "harry's test",
  "EstimatedReadyforDeicingTimeERZT": "harry's test",
  "EstimatedStartBoardingTime": "harry's test",
  "EstimatedTakeOffTimeETOT": "harry's test",
  "EstimatedTaxiInDurationEXIT": "harry's test",
  "EstimatedTaxiOutDurationEXOT": "harry's test",
  "EstimatedTurnAroundDurationETTT": "harry's test",
  "MinimumTurnAroundTimeMTTT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "PlannedLastCallTime": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "PlannedStartBoardingTime" ]
 
Array [ "PlannedStartBoardingTime" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "PlannedStartBoardingTime": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test",
  "EstimatedOffBlockTimeEOBT": "harry's test",
  "EstimatedReadyforDeicingTimeERZT": "harry's test",
  "EstimatedStartBoardingTime": "harry's test",
  "EstimatedTakeOffTimeETOT": "harry's test",
  "EstimatedTaxiInDurationEXIT": "harry's test",
  "EstimatedTaxiOutDurationEXOT": "harry's test",
  "EstimatedTurnAroundDurationETTT": "harry's test",
  "MinimumTurnAroundTimeMTTT": "harry's test",
  "PlannedLastCallTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "PlannedStartBoardingTime": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "ScheduledInBlockTimeSIBT" ]
 
Array [ "ScheduledInBlockTimeSIBT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "ScheduledInBlockTimeSIBT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test",
  "EstimatedOffBlockTimeEOBT": "harry's test",
  "EstimatedReadyforDeicingTimeERZT": "harry's test",
  "EstimatedStartBoardingTime": "harry's test",
  "EstimatedTakeOffTimeETOT": "harry's test",
  "EstimatedTaxiInDurationEXIT": "harry's test",
  "EstimatedTaxiOutDurationEXOT": "harry's test",
  "EstimatedTurnAroundDurationETTT": "harry's test",
  "MinimumTurnAroundTimeMTTT": "harry's test",
  "PlannedLastCallTime": "harry's test",
  "PlannedStartBoardingTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ScheduledInBlockTimeSIBT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "ScheduledOffBlockTimeSOBT" ]
 
Array [ "ScheduledOffBlockTimeSOBT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "ScheduledOffBlockTimeSOBT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test",
  "EstimatedOffBlockTimeEOBT": "harry's test",
  "EstimatedReadyforDeicingTimeERZT": "harry's test",
  "EstimatedStartBoardingTime": "harry's test",
  "EstimatedTakeOffTimeETOT": "harry's test",
  "EstimatedTaxiInDurationEXIT": "harry's test",
  "EstimatedTaxiOutDurationEXOT": "harry's test",
  "EstimatedTurnAroundDurationETTT": "harry's test",
  "MinimumTurnAroundTimeMTTT": "harry's test",
  "PlannedLastCallTime": "harry's test",
  "PlannedStartBoardingTime": "harry's test",
  "ScheduledInBlockTimeSIBT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ScheduledOffBlockTimeSOBT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "ScheduledTurnAroundDurationSTTT" ]
 
Array [ "ScheduledTurnAroundDurationSTTT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "ScheduledTurnAroundDurationSTTT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test",
  "EstimatedOffBlockTimeEOBT": "harry's test",
  "EstimatedReadyforDeicingTimeERZT": "harry's test",
  "EstimatedStartBoardingTime": "harry's test",
  "EstimatedTakeOffTimeETOT": "harry's test",
  "EstimatedTaxiInDurationEXIT": "harry's test",
  "EstimatedTaxiOutDurationEXOT": "harry's test",
  "EstimatedTurnAroundDurationETTT": "harry's test",
  "MinimumTurnAroundTimeMTTT": "harry's test",
  "PlannedLastCallTime": "harry's test",
  "PlannedStartBoardingTime": "harry's test",
  "ScheduledInBlockTimeSIBT": "harry's test",
  "ScheduledOffBlockTimeSOBT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ScheduledTurnAroundDurationSTTT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "TargetLandingTimeTLDT" ]
 
Array [ "TargetLandingTimeTLDT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "TargetLandingTimeTLDT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test",
  "EstimatedOffBlockTimeEOBT": "harry's test",
  "EstimatedReadyforDeicingTimeERZT": "harry's test",
  "EstimatedStartBoardingTime": "harry's test",
  "EstimatedTakeOffTimeETOT": "harry's test",
  "EstimatedTaxiInDurationEXIT": "harry's test",
  "EstimatedTaxiOutDurationEXOT": "harry's test",
  "EstimatedTurnAroundDurationETTT": "harry's test",
  "MinimumTurnAroundTimeMTTT": "harry's test",
  "PlannedLastCallTime": "harry's test",
  "PlannedStartBoardingTime": "harry's test",
  "ScheduledInBlockTimeSIBT": "harry's test",
  "ScheduledOffBlockTimeSOBT": "harry's test",
  "ScheduledTurnAroundDurationSTTT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "TargetLandingTimeTLDT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "TargetOffBlockTimeTOBT" ]
 
Array [ "TargetOffBlockTimeTOBT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "TargetOffBlockTimeTOBT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test",
  "EstimatedOffBlockTimeEOBT": "harry's test",
  "EstimatedReadyforDeicingTimeERZT": "harry's test",
  "EstimatedStartBoardingTime": "harry's test",
  "EstimatedTakeOffTimeETOT": "harry's test",
  "EstimatedTaxiInDurationEXIT": "harry's test",
  "EstimatedTaxiOutDurationEXOT": "harry's test",
  "EstimatedTurnAroundDurationETTT": "harry's test",
  "MinimumTurnAroundTimeMTTT": "harry's test",
  "PlannedLastCallTime": "harry's test",
  "PlannedStartBoardingTime": "harry's test",
  "ScheduledInBlockTimeSIBT": "harry's test",
  "ScheduledOffBlockTimeSOBT": "harry's test",
  "ScheduledTurnAroundDurationSTTT": "harry's test",
  "TargetLandingTimeTLDT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "TargetOffBlockTimeTOBT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "TargetStartUpApprovalTimeTSAT" ]
 
Array [ "TargetStartUpApprovalTimeTSAT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "TargetStartUpApprovalTimeTSAT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test",
  "EstimatedOffBlockTimeEOBT": "harry's test",
  "EstimatedReadyforDeicingTimeERZT": "harry's test",
  "EstimatedStartBoardingTime": "harry's test",
  "EstimatedTakeOffTimeETOT": "harry's test",
  "EstimatedTaxiInDurationEXIT": "harry's test",
  "EstimatedTaxiOutDurationEXOT": "harry's test",
  "EstimatedTurnAroundDurationETTT": "harry's test",
  "MinimumTurnAroundTimeMTTT": "harry's test",
  "PlannedLastCallTime": "harry's test",
  "PlannedStartBoardingTime": "harry's test",
  "ScheduledInBlockTimeSIBT": "harry's test",
  "ScheduledOffBlockTimeSOBT": "harry's test",
  "ScheduledTurnAroundDurationSTTT": "harry's test",
  "TargetLandingTimeTLDT": "harry's test",
  "TargetOffBlockTimeTOBT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "TargetStartUpApprovalTimeTSAT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftMovement", "OperationalTimes", "TargetTakeOffTimeTTOT" ]
 
Array [ "TargetTakeOffTimeTTOT" ]
 
Array [ "AircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperationalTimes": {
      "TargetTakeOffTimeTTOT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test",
  "EstimatedOffBlockTimeEOBT": "harry's test",
  "EstimatedReadyforDeicingTimeERZT": "harry's test",
  "EstimatedStartBoardingTime": "harry's test",
  "EstimatedTakeOffTimeETOT": "harry's test",
  "EstimatedTaxiInDurationEXIT": "harry's test",
  "EstimatedTaxiOutDurationEXOT": "harry's test",
  "EstimatedTurnAroundDurationETTT": "harry's test",
  "MinimumTurnAroundTimeMTTT": "harry's test",
  "PlannedLastCallTime": "harry's test",
  "PlannedStartBoardingTime": "harry's test",
  "ScheduledInBlockTimeSIBT": "harry's test",
  "ScheduledOffBlockTimeSOBT": "harry's test",
  "ScheduledTurnAroundDurationSTTT": "harry's test",
  "TargetLandingTimeTLDT": "harry's test",
  "TargetOffBlockTimeTOBT": "harry's test",
  "TargetStartUpApprovalTimeTSAT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "TargetTakeOffTimeTTOT": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "ArrivalOrDeparture" ]
 
Array [ "ArrivalOrDeparture" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "ArrivalOrDeparture": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "ArrivalOrDeparture": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "AutomaticProcessing" ]
 
Array [ "AutomaticProcessing" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "AutomaticProcessing": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "AutomaticProcessing": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "BaggageReclaim" ]
 
Array [ "BaggageReclaim" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "BaggageReclaim": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "BaggageReclaim": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "CarrierCode" ]
 
Array [ "CarrierCode" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "CarrierCode": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "CarrierCode": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "CheckinZone" ]
 
Array [ "CheckinZone" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "CheckinZone": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "CheckinZone": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "Comments" ]
 
Array [ "Comments" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "Comments": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test",
  "CheckinZone": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Comments": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "DeicingMode" ]
 
Array [ "DeicingMode" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "DeicingMode": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test",
  "CheckinZone": "harry's test",
  "Comments": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "DeicingMode": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "DeicingPadLocation" ]
 
Array [ "DeicingPadLocation" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "DeicingPadLocation": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test",
  "CheckinZone": "harry's test",
  "Comments": "harry's test",
  "DeicingMode": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "DeicingPadLocation": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "DeicingRigEquipment" ]
 
Array [ "DeicingRigEquipment" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "DeicingRigEquipment": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test",
  "CheckinZone": "harry's test",
  "Comments": "harry's test",
  "DeicingMode": "harry's test",
  "DeicingPadLocation": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "DeicingRigEquipment": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "DeicingStandLocation" ]
 
Array [ "DeicingStandLocation" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "DeicingStandLocation": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test",
  "CheckinZone": "harry's test",
  "Comments": "harry's test",
  "DeicingMode": "harry's test",
  "DeicingPadLocation": "harry's test",
  "DeicingRigEquipment": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "DeicingStandLocation": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "Description" ]
 
Array [ "Description" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "Description": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test",
  "CheckinZone": "harry's test",
  "Comments": "harry's test",
  "DeicingMode": "harry's test",
  "DeicingPadLocation": "harry's test",
  "DeicingRigEquipment": "harry's test",
  "DeicingStandLocation": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Description": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "DisplayFromTime" ]
 
Array [ "DisplayFromTime" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "DisplayFromTime": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test",
  "CheckinZone": "harry's test",
  "Comments": "harry's test",
  "DeicingMode": "harry's test",
  "DeicingPadLocation": "harry's test",
  "DeicingRigEquipment": "harry's test",
  "DeicingStandLocation": "harry's test",
  "Description": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "DisplayFromTime": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "DisplayUntilTime" ]
 
Array [ "DisplayUntilTime" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "DisplayUntilTime": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test",
  "CheckinZone": "harry's test",
  "Comments": "harry's test",
  "DeicingMode": "harry's test",
  "DeicingPadLocation": "harry's test",
  "DeicingRigEquipment": "harry's test",
  "DeicingStandLocation": "harry's test",
  "Description": "harry's test",
  "DisplayFromTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "DisplayUntilTime": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "DivertAirport" ]
 
Array [ "DivertAirport" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "DivertAirport": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test",
  "CheckinZone": "harry's test",
  "Comments": "harry's test",
  "DeicingMode": "harry's test",
  "DeicingPadLocation": "harry's test",
  "DeicingRigEquipment": "harry's test",
  "DeicingStandLocation": "harry's test",
  "Description": "harry's test",
  "DisplayFromTime": "harry's test",
  "DisplayUntilTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "DivertAirport": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "DivertAirportFacilityCode" ]
 
Array [ "DivertAirportFacilityCode" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "DivertAirportFacilityCode": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test",
  "CheckinZone": "harry's test",
  "Comments": "harry's test",
  "DeicingMode": "harry's test",
  "DeicingPadLocation": "harry's test",
  "DeicingRigEquipment": "harry's test",
  "DeicingStandLocation": "harry's test",
  "Description": "harry's test",
  "DisplayFromTime": "harry's test",
  "DisplayUntilTime": "harry's test",
  "DivertAirport": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "DivertAirportFacilityCode": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "DivertIndicator" ]
 
Array [ "DivertIndicator" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "DivertIndicator": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test",
  "CheckinZone": "harry's test",
  "Comments": "harry's test",
  "DeicingMode": "harry's test",
  "DeicingPadLocation": "harry's test",
  "DeicingRigEquipment": "harry's test",
  "DeicingStandLocation": "harry's test",
  "Description": "harry's test",
  "DisplayFromTime": "harry's test",
  "DisplayUntilTime": "harry's test",
  "DivertAirport": "harry's test",
  "DivertAirportFacilityCode": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "DivertIndicator": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "DivertReason" ]
 
Array [ "DivertReason" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "DivertReason": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test",
  "CheckinZone": "harry's test",
  "Comments": "harry's test",
  "DeicingMode": "harry's test",
  "DeicingPadLocation": "harry's test",
  "DeicingRigEquipment": "harry's test",
  "DeicingStandLocation": "harry's test",
  "Description": "harry's test",
  "DisplayFromTime": "harry's test",
  "DisplayUntilTime": "harry's test",
  "DivertAirport": "harry's test",
  "DivertAirportFacilityCode": "harry's test",
  "DivertIndicator": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "DivertReason": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "DivertReasonCode" ]
 
Array [ "DivertReasonCode" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "DivertReasonCode": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test",
  "CheckinZone": "harry's test",
  "Comments": "harry's test",
  "DeicingMode": "harry's test",
  "DeicingPadLocation": "harry's test",
  "DeicingRigEquipment": "harry's test",
  "DeicingStandLocation": "harry's test",
  "Description": "harry's test",
  "DisplayFromTime": "harry's test",
  "DisplayUntilTime": "harry's test",
  "DivertAirport": "harry's test",
  "DivertAirportFacilityCode": "harry's test",
  "DivertIndicator": "harry's test",
  "DivertReason": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "DivertReasonCode": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "EstimatedDateTime" ]
 
Array [ "EstimatedDateTime" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "EstimatedDateTime": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test",
  "CheckinZone": "harry's test",
  "Comments": "harry's test",
  "DeicingMode": "harry's test",
  "DeicingPadLocation": "harry's test",
  "DeicingRigEquipment": "harry's test",
  "DeicingStandLocation": "harry's test",
  "Description": "harry's test",
  "DisplayFromTime": "harry's test",
  "DisplayUntilTime": "harry's test",
  "DivertAirport": "harry's test",
  "DivertAirportFacilityCode": "harry's test",
  "DivertIndicator": "harry's test",
  "DivertReason": "harry's test",
  "DivertReasonCode": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedDateTime": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "FlightClassification" ]
 
Array [ "FlightClassification" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "FlightClassification": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test",
  "CheckinZone": "harry's test",
  "Comments": "harry's test",
  "DeicingMode": "harry's test",
  "DeicingPadLocation": "harry's test",
  "DeicingRigEquipment": "harry's test",
  "DeicingStandLocation": "harry's test",
  "Description": "harry's test",
  "DisplayFromTime": "harry's test",
  "DisplayUntilTime": "harry's test",
  "DivertAirport": "harry's test",
  "DivertAirportFacilityCode": "harry's test",
  "DivertIndicator": "harry's test",
  "DivertReason": "harry's test",
  "DivertReasonCode": "harry's test",
  "EstimatedDateTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "FlightClassification": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "FlightNumber" ]
 
Array [ "FlightNumber" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "FlightNumber": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test",
  "CheckinZone": "harry's test",
  "Comments": "harry's test",
  "DeicingMode": "harry's test",
  "DeicingPadLocation": "harry's test",
  "DeicingRigEquipment": "harry's test",
  "DeicingStandLocation": "harry's test",
  "Description": "harry's test",
  "DisplayFromTime": "harry's test",
  "DisplayUntilTime": "harry's test",
  "DivertAirport": "harry's test",
  "DivertAirportFacilityCode": "harry's test",
  "DivertIndicator": "harry's test",
  "DivertReason": "harry's test",
  "DivertReasonCode": "harry's test",
  "EstimatedDateTime": "harry's test",
  "FlightClassification": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "FlightNumber": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "FlightOriginOrDestination" ]
 
Array [ "FlightOriginOrDestination" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "FlightOriginOrDestination": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test",
  "CheckinZone": "harry's test",
  "Comments": "harry's test",
  "DeicingMode": "harry's test",
  "DeicingPadLocation": "harry's test",
  "DeicingRigEquipment": "harry's test",
  "DeicingStandLocation": "harry's test",
  "Description": "harry's test",
  "DisplayFromTime": "harry's test",
  "DisplayUntilTime": "harry's test",
  "DivertAirport": "harry's test",
  "DivertAirportFacilityCode": "harry's test",
  "DivertIndicator": "harry's test",
  "DivertReason": "harry's test",
  "DivertReasonCode": "harry's test",
  "EstimatedDateTime": "harry's test",
  "FlightClassification": "harry's test",
  "FlightNumber": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "FlightOriginOrDestination": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "FromStand" ]
 
Array [ "FromStand" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "FromStand": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test",
  "CheckinZone": "harry's test",
  "Comments": "harry's test",
  "DeicingMode": "harry's test",
  "DeicingPadLocation": "harry's test",
  "DeicingRigEquipment": "harry's test",
  "DeicingStandLocation": "harry's test",
  "Description": "harry's test",
  "DisplayFromTime": "harry's test",
  "DisplayUntilTime": "harry's test",
  "DivertAirport": "harry's test",
  "DivertAirportFacilityCode": "harry's test",
  "DivertIndicator": "harry's test",
  "DivertReason": "harry's test",
  "DivertReasonCode": "harry's test",
  "EstimatedDateTime": "harry's test",
  "FlightClassification": "harry's test",
  "FlightNumber": "harry's test",
  "FlightOriginOrDestination": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "FromStand": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "Gate" ]
 
Array [ "Gate" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "Gate": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test",
  "CheckinZone": "harry's test",
  "Comments": "harry's test",
  "DeicingMode": "harry's test",
  "DeicingPadLocation": "harry's test",
  "DeicingRigEquipment": "harry's test",
  "DeicingStandLocation": "harry's test",
  "Description": "harry's test",
  "DisplayFromTime": "harry's test",
  "DisplayUntilTime": "harry's test",
  "DivertAirport": "harry's test",
  "DivertAirportFacilityCode": "harry's test",
  "DivertIndicator": "harry's test",
  "DivertReason": "harry's test",
  "DivertReasonCode": "harry's test",
  "EstimatedDateTime": "harry's test",
  "FlightClassification": "harry's test",
  "FlightNumber": "harry's test",
  "FlightOriginOrDestination": "harry's test",
  "FromStand": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Gate": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "InboundOrigin" ]
 
Array [ "InboundOrigin" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "InboundOrigin": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test",
  "CheckinZone": "harry's test",
  "Comments": "harry's test",
  "DeicingMode": "harry's test",
  "DeicingPadLocation": "harry's test",
  "DeicingRigEquipment": "harry's test",
  "DeicingStandLocation": "harry's test",
  "Description": "harry's test",
  "DisplayFromTime": "harry's test",
  "DisplayUntilTime": "harry's test",
  "DivertAirport": "harry's test",
  "DivertAirportFacilityCode": "harry's test",
  "DivertIndicator": "harry's test",
  "DivertReason": "harry's test",
  "DivertReasonCode": "harry's test",
  "EstimatedDateTime": "harry's test",
  "FlightClassification": "harry's test",
  "FlightNumber": "harry's test",
  "FlightOriginOrDestination": "harry's test",
  "FromStand": "harry's test",
  "Gate": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "InboundOrigin": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "OperatedDateTime" ]
 
Array [ "OperatedDateTime" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OperatedDateTime": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test",
  "CheckinZone": "harry's test",
  "Comments": "harry's test",
  "DeicingMode": "harry's test",
  "DeicingPadLocation": "harry's test",
  "DeicingRigEquipment": "harry's test",
  "DeicingStandLocation": "harry's test",
  "Description": "harry's test",
  "DisplayFromTime": "harry's test",
  "DisplayUntilTime": "harry's test",
  "DivertAirport": "harry's test",
  "DivertAirportFacilityCode": "harry's test",
  "DivertIndicator": "harry's test",
  "DivertReason": "harry's test",
  "DivertReasonCode": "harry's test",
  "EstimatedDateTime": "harry's test",
  "FlightClassification": "harry's test",
  "FlightNumber": "harry's test",
  "FlightOriginOrDestination": "harry's test",
  "FromStand": "harry's test",
  "Gate": "harry's test",
  "InboundOrigin": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "OperatedDateTime": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "OutboundDestination" ]
 
Array [ "OutboundDestination" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "OutboundDestination": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test",
  "CheckinZone": "harry's test",
  "Comments": "harry's test",
  "DeicingMode": "harry's test",
  "DeicingPadLocation": "harry's test",
  "DeicingRigEquipment": "harry's test",
  "DeicingStandLocation": "harry's test",
  "Description": "harry's test",
  "DisplayFromTime": "harry's test",
  "DisplayUntilTime": "harry's test",
  "DivertAirport": "harry's test",
  "DivertAirportFacilityCode": "harry's test",
  "DivertIndicator": "harry's test",
  "DivertReason": "harry's test",
  "DivertReasonCode": "harry's test",
  "EstimatedDateTime": "harry's test",
  "FlightClassification": "harry's test",
  "FlightNumber": "harry's test",
  "FlightOriginOrDestination": "harry's test",
  "FromStand": "harry's test",
  "Gate": "harry's test",
  "InboundOrigin": "harry's test",
  "OperatedDateTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "OutboundDestination": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "Priority" ]
 
Array [ "Priority" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "Priority": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test",
  "CheckinZone": "harry's test",
  "Comments": "harry's test",
  "DeicingMode": "harry's test",
  "DeicingPadLocation": "harry's test",
  "DeicingRigEquipment": "harry's test",
  "DeicingStandLocation": "harry's test",
  "Description": "harry's test",
  "DisplayFromTime": "harry's test",
  "DisplayUntilTime": "harry's test",
  "DivertAirport": "harry's test",
  "DivertAirportFacilityCode": "harry's test",
  "DivertIndicator": "harry's test",
  "DivertReason": "harry's test",
  "DivertReasonCode": "harry's test",
  "EstimatedDateTime": "harry's test",
  "FlightClassification": "harry's test",
  "FlightNumber": "harry's test",
  "FlightOriginOrDestination": "harry's test",
  "FromStand": "harry's test",
  "Gate": "harry's test",
  "InboundOrigin": "harry's test",
  "OperatedDateTime": "harry's test",
  "OutboundDestination": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Priority": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "RepeatNumber" ]
 
Array [ "RepeatNumber" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "RepeatNumber": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test",
  "CheckinZone": "harry's test",
  "Comments": "harry's test",
  "DeicingMode": "harry's test",
  "DeicingPadLocation": "harry's test",
  "DeicingRigEquipment": "harry's test",
  "DeicingStandLocation": "harry's test",
  "Description": "harry's test",
  "DisplayFromTime": "harry's test",
  "DisplayUntilTime": "harry's test",
  "DivertAirport": "harry's test",
  "DivertAirportFacilityCode": "harry's test",
  "DivertIndicator": "harry's test",
  "DivertReason": "harry's test",
  "DivertReasonCode": "harry's test",
  "EstimatedDateTime": "harry's test",
  "FlightClassification": "harry's test",
  "FlightNumber": "harry's test",
  "FlightOriginOrDestination": "harry's test",
  "FromStand": "harry's test",
  "Gate": "harry's test",
  "InboundOrigin": "harry's test",
  "OperatedDateTime": "harry's test",
  "OutboundDestination": "harry's test",
  "Priority": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "RepeatNumber": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "ScheduledDateTime" ]
 
Array [ "ScheduledDateTime" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "ScheduledDateTime": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test",
  "CheckinZone": "harry's test",
  "Comments": "harry's test",
  "DeicingMode": "harry's test",
  "DeicingPadLocation": "harry's test",
  "DeicingRigEquipment": "harry's test",
  "DeicingStandLocation": "harry's test",
  "Description": "harry's test",
  "DisplayFromTime": "harry's test",
  "DisplayUntilTime": "harry's test",
  "DivertAirport": "harry's test",
  "DivertAirportFacilityCode": "harry's test",
  "DivertIndicator": "harry's test",
  "DivertReason": "harry's test",
  "DivertReasonCode": "harry's test",
  "EstimatedDateTime": "harry's test",
  "FlightClassification": "harry's test",
  "FlightNumber": "harry's test",
  "FlightOriginOrDestination": "harry's test",
  "FromStand": "harry's test",
  "Gate": "harry's test",
  "InboundOrigin": "harry's test",
  "OperatedDateTime": "harry's test",
  "OutboundDestination": "harry's test",
  "Priority": "harry's test",
  "RepeatNumber": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ScheduledDateTime": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "SpecialNeedsIndicator" ]
 
Array [ "SpecialNeedsIndicator" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "SpecialNeedsIndicator": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test",
  "CheckinZone": "harry's test",
  "Comments": "harry's test",
  "DeicingMode": "harry's test",
  "DeicingPadLocation": "harry's test",
  "DeicingRigEquipment": "harry's test",
  "DeicingStandLocation": "harry's test",
  "Description": "harry's test",
  "DisplayFromTime": "harry's test",
  "DisplayUntilTime": "harry's test",
  "DivertAirport": "harry's test",
  "DivertAirportFacilityCode": "harry's test",
  "DivertIndicator": "harry's test",
  "DivertReason": "harry's test",
  "DivertReasonCode": "harry's test",
  "EstimatedDateTime": "harry's test",
  "FlightClassification": "harry's test",
  "FlightNumber": "harry's test",
  "FlightOriginOrDestination": "harry's test",
  "FromStand": "harry's test",
  "Gate": "harry's test",
  "InboundOrigin": "harry's test",
  "OperatedDateTime": "harry's test",
  "OutboundDestination": "harry's test",
  "Priority": "harry's test",
  "RepeatNumber": "harry's test",
  "ScheduledDateTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "SpecialNeedsIndicator": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "Terminal" ]
 
Array [ "Terminal" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "Terminal": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test",
  "CheckinZone": "harry's test",
  "Comments": "harry's test",
  "DeicingMode": "harry's test",
  "DeicingPadLocation": "harry's test",
  "DeicingRigEquipment": "harry's test",
  "DeicingStandLocation": "harry's test",
  "Description": "harry's test",
  "DisplayFromTime": "harry's test",
  "DisplayUntilTime": "harry's test",
  "DivertAirport": "harry's test",
  "DivertAirportFacilityCode": "harry's test",
  "DivertIndicator": "harry's test",
  "DivertReason": "harry's test",
  "DivertReasonCode": "harry's test",
  "EstimatedDateTime": "harry's test",
  "FlightClassification": "harry's test",
  "FlightNumber": "harry's test",
  "FlightOriginOrDestination": "harry's test",
  "FromStand": "harry's test",
  "Gate": "harry's test",
  "InboundOrigin": "harry's test",
  "OperatedDateTime": "harry's test",
  "OutboundDestination": "harry's test",
  "Priority": "harry's test",
  "RepeatNumber": "harry's test",
  "ScheduledDateTime": "harry's test",
  "SpecialNeedsIndicator": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Terminal": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftMovement", "ArrivalSecurityCheck" ]
 
Array [ "ArrivalSecurityCheck" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "ArrivalSecurityCheck": ""
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test",
  "CheckinZone": "harry's test",
  "Comments": "harry's test",
  "DeicingMode": "harry's test",
  "DeicingPadLocation": "harry's test",
  "DeicingRigEquipment": "harry's test",
  "DeicingStandLocation": "harry's test",
  "Description": "harry's test",
  "DisplayFromTime": "harry's test",
  "DisplayUntilTime": "harry's test",
  "DivertAirport": "harry's test",
  "DivertAirportFacilityCode": "harry's test",
  "DivertIndicator": "harry's test",
  "DivertReason": "harry's test",
  "DivertReasonCode": "harry's test",
  "EstimatedDateTime": "harry's test",
  "FlightClassification": "harry's test",
  "FlightNumber": "harry's test",
  "FlightOriginOrDestination": "harry's test",
  "FromStand": "harry's test",
  "Gate": "harry's test",
  "InboundOrigin": "harry's test",
  "OperatedDateTime": "harry's test",
  "OutboundDestination": "harry's test",
  "Priority": "harry's test",
  "RepeatNumber": "harry's test",
  "ScheduledDateTime": "harry's test",
  "SpecialNeedsIndicator": "harry's test",
  "Terminal": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ArrivalSecurityCheck": ""
}
flight-plan.tsx:122
Array [ "AircraftMovement", "DepartureSecurityCheck" ]
 
Array [ "DepartureSecurityCheck" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "DepartureSecurityCheck": ""
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test",
  "CheckinZone": "harry's test",
  "Comments": "harry's test",
  "DeicingMode": "harry's test",
  "DeicingPadLocation": "harry's test",
  "DeicingRigEquipment": "harry's test",
  "DeicingStandLocation": "harry's test",
  "Description": "harry's test",
  "DisplayFromTime": "harry's test",
  "DisplayUntilTime": "harry's test",
  "DivertAirport": "harry's test",
  "DivertAirportFacilityCode": "harry's test",
  "DivertIndicator": "harry's test",
  "DivertReason": "harry's test",
  "DivertReasonCode": "harry's test",
  "EstimatedDateTime": "harry's test",
  "FlightClassification": "harry's test",
  "FlightNumber": "harry's test",
  "FlightOriginOrDestination": "harry's test",
  "FromStand": "harry's test",
  "Gate": "harry's test",
  "InboundOrigin": "harry's test",
  "OperatedDateTime": "harry's test",
  "OutboundDestination": "harry's test",
  "Priority": "harry's test",
  "RepeatNumber": "harry's test",
  "ScheduledDateTime": "harry's test",
  "SpecialNeedsIndicator": "harry's test",
  "Terminal": "harry's test",
  "ArrivalSecurityCheck": ""
}
flight-plan.tsx:121
objectToAdd {
  "DepartureSecurityCheck": ""
}
flight-plan.tsx:122
Array [ "AircraftMovement", "Display" ]
 
Array [ "Display" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "Display": ""
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test",
  "CheckinZone": "harry's test",
  "Comments": "harry's test",
  "DeicingMode": "harry's test",
  "DeicingPadLocation": "harry's test",
  "DeicingRigEquipment": "harry's test",
  "DeicingStandLocation": "harry's test",
  "Description": "harry's test",
  "DisplayFromTime": "harry's test",
  "DisplayUntilTime": "harry's test",
  "DivertAirport": "harry's test",
  "DivertAirportFacilityCode": "harry's test",
  "DivertIndicator": "harry's test",
  "DivertReason": "harry's test",
  "DivertReasonCode": "harry's test",
  "EstimatedDateTime": "harry's test",
  "FlightClassification": "harry's test",
  "FlightNumber": "harry's test",
  "FlightOriginOrDestination": "harry's test",
  "FromStand": "harry's test",
  "Gate": "harry's test",
  "InboundOrigin": "harry's test",
  "OperatedDateTime": "harry's test",
  "OutboundDestination": "harry's test",
  "Priority": "harry's test",
  "RepeatNumber": "harry's test",
  "ScheduledDateTime": "harry's test",
  "SpecialNeedsIndicator": "harry's test",
  "Terminal": "harry's test",
  "ArrivalSecurityCheck": "",
  "DepartureSecurityCheck": ""
}
flight-plan.tsx:121
objectToAdd {
  "Display": ""
}
flight-plan.tsx:122
Array [ "AircraftMovement", "PriorityDisplay" ]
 
Array [ "PriorityDisplay" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "PriorityDisplay": ""
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test",
  "CheckinZone": "harry's test",
  "Comments": "harry's test",
  "DeicingMode": "harry's test",
  "DeicingPadLocation": "harry's test",
  "DeicingRigEquipment": "harry's test",
  "DeicingStandLocation": "harry's test",
  "Description": "harry's test",
  "DisplayFromTime": "harry's test",
  "DisplayUntilTime": "harry's test",
  "DivertAirport": "harry's test",
  "DivertAirportFacilityCode": "harry's test",
  "DivertIndicator": "harry's test",
  "DivertReason": "harry's test",
  "DivertReasonCode": "harry's test",
  "EstimatedDateTime": "harry's test",
  "FlightClassification": "harry's test",
  "FlightNumber": "harry's test",
  "FlightOriginOrDestination": "harry's test",
  "FromStand": "harry's test",
  "Gate": "harry's test",
  "InboundOrigin": "harry's test",
  "OperatedDateTime": "harry's test",
  "OutboundDestination": "harry's test",
  "Priority": "harry's test",
  "RepeatNumber": "harry's test",
  "ScheduledDateTime": "harry's test",
  "SpecialNeedsIndicator": "harry's test",
  "Terminal": "harry's test",
  "ArrivalSecurityCheck": "",
  "DepartureSecurityCheck": "",
  "Display": ""
}
flight-plan.tsx:121
objectToAdd {
  "PriorityDisplay": ""
}
flight-plan.tsx:122
Array [ "AircraftMovement", "TechnicalStop" ]
 
Array [ "TechnicalStop" ]
 
Array [ "AircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftMovement": {
    "TechnicalStop": ""
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "AircraftMovementIdentification": {
    "AircraftMovementCodeShare": {
      "Number": "harry's test",
      "ShowToPublic": ""
    },
    "AirTrafficControlCallsign": "harry's test",
    "DisplayedIdentifier": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "BillingInformation": {
    "RebatePassengerNumbers": 1.1,
    "RebatePassengerReasonCode": "harry's test",
    "AircraftFEGPEquipped": "",
    "AircraftPCAEquipped": ""
  },
  "ConnectionAircraftMovement": {
    "Order": 1.1,
    "TransferBagCount": 1.1,
    "TransferPassengerCount": 1.1,
    "CheckinZone": "harry's test",
    "ConnectingFlightDestination": "harry's test",
    "ConnectingFlightNumber": "harry's test",
    "EstimatedDateTime": "harry's test",
    "Gate": "harry's test",
    "OperatedDateTime": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Terminal": "harry's test"
  },
  "HandlingAgentParty": {
    "CateringLoaderNumber": "harry's test",
    "Code": "harry's test",
    "HandlingCrewNumber": "harry's test",
    "Name": "harry's test",
    "PassengerHandlingTeamIdentifier": "harry's test",
    "Type": "harry's test"
  },
  "IATAIrregularityDetails": {
    "Duration": 1.1,
    "NumericCode": "harry's test"
  },
  "LinkedAircraftMovement": {
    "ICAONumber": 1.1,
    "ArrivalOrDeparture": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "AircraftOnGround": ""
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "ArrivalOrDeparture": "harry's test",
  "AutomaticProcessing": "harry's test",
  "BaggageReclaim": "harry's test",
  "CarrierCode": "harry's test",
  "CheckinZone": "harry's test",
  "Comments": "harry's test",
  "DeicingMode": "harry's test",
  "DeicingPadLocation": "harry's test",
  "DeicingRigEquipment": "harry's test",
  "DeicingStandLocation": "harry's test",
  "Description": "harry's test",
  "DisplayFromTime": "harry's test",
  "DisplayUntilTime": "harry's test",
  "DivertAirport": "harry's test",
  "DivertAirportFacilityCode": "harry's test",
  "DivertIndicator": "harry's test",
  "DivertReason": "harry's test",
  "DivertReasonCode": "harry's test",
  "EstimatedDateTime": "harry's test",
  "FlightClassification": "harry's test",
  "FlightNumber": "harry's test",
  "FlightOriginOrDestination": "harry's test",
  "FromStand": "harry's test",
  "Gate": "harry's test",
  "InboundOrigin": "harry's test",
  "OperatedDateTime": "harry's test",
  "OutboundDestination": "harry's test",
  "Priority": "harry's test",
  "RepeatNumber": "harry's test",
  "ScheduledDateTime": "harry's test",
  "SpecialNeedsIndicator": "harry's test",
  "Terminal": "harry's test",
  "ArrivalSecurityCheck": "",
  "DepartureSecurityCheck": "",
  "Display": "",
  "PriorityDisplay": ""
}
flight-plan.tsx:121
objectToAdd {
  "TechnicalStop": ""
}
flight-plan.tsx:122
Array(4) [ "AircraftTransport", "AircraftTransportType", "WakeTurbulenceCategory", "Code" ]
 
Array(4) [ "AircraftTransport", "AircraftTransportType", "WakeTurbulenceCategory", "Code" ]
 
Array []
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportType": {
      "WakeTurbulenceCategory": {
        "Code": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "operatingAirline": {
    "iataCode": "harry's test",
    "icaoCode": "harry's test",
    "name": "harry's test"
  },
  "flightNumber": {
    "airlineCode": "harry's test",
    "trackNumber": "harry's test",
    "suffix": "harry's test"
  },
  "AircraftMovement": {
    "AircraftMovementStatus": {
      "Cancelled": "harry's test",
      "Cleared": "harry's test",
      "Code": "harry's test",
      "DeicingStatus": "harry's test",
      "Deleted": "harry's test",
      "OperationalStatus": "harry's test",
      "PublicStatus": "harry's test",
      "Regulated": "harry's test"
    },
    "AircraftMovementIdentification": {
      "AircraftMovementCodeShare": {
        "Number": "harry's test",
        "ShowToPublic": ""
      },
      "AirTrafficControlCallsign": "harry's test",
      "DisplayedIdentifier": "harry's test",
      "IATAFlightNumber": "harry's test",
      "IATAOperatorIdentifier": "harry's test",
      "ICAOIdentifier": "harry's test",
      "ICAONumber": "harry's test",
      "Number": "harry's test",
      "ScheduledDateTime": "harry's test",
      "Suffix": "harry's test",
      "SystemIdentifier": "harry's test",
      "TurnRoundIdentifier": "harry's test"
    },
    "BillingInformation": {
      "RebatePassengerNumbers": 1.1,
      "RebatePassengerReasonCode": "harry's test",
      "AircraftFEGPEquipped": "",
      "AircraftPCAEquipped": ""
    },
    "ConnectionAircraftMovement": {
      "Order": 1.1,
      "TransferBagCount": 1.1,
      "TransferPassengerCount": 1.1,
      "CheckinZone": "harry's test",
      "ConnectingFlightDestination": "harry's test",
      "ConnectingFlightNumber": "harry's test",
      "EstimatedDateTime": "harry's test",
      "Gate": "harry's test",
      "OperatedDateTime": "harry's test",
      "ScheduledDateTime": "harry's test",
      "Terminal": "harry's test"
    },
    "HandlingAgentParty": {
      "CateringLoaderNumber": "harry's test",
      "Code": "harry's test",
      "HandlingCrewNumber": "harry's test",
      "Name": "harry's test",
      "PassengerHandlingTeamIdentifier": "harry's test",
      "Type": "harry's test"
    },
    "IATAIrregularityDetails": {
      "Duration": 1.1,
      "NumericCode": "harry's test"
    },
    "LinkedAircraftMovement": {
      "ICAONumber": 1.1,
      "ArrivalOrDeparture": "harry's test",
      "IATAFlightNumber": "harry's test",
      "IATAOperatorIdentifier": "harry's test",
      "ICAOIdentifier": "harry's test",
      "ScheduledDateTime": "harry's test",
      "Suffix": "harry's test",
      "SystemIdentifier": "harry's test",
      "AircraftOnGround": ""
    },
    "OperationalTimes": {
      "AircraftMovementMeasure": {
        "Code": "harry's test",
        "Description": "harry's test",
        "Identifier": "harry's test",
        "Name": "harry's test",
        "Title": "harry's test",
        "Value": "harry's test"
      },
      "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
      "ActualCommencementofDeicingTimeACZT": "harry's test",
      "ActualDeIcingDurationADIT": "harry's test",
      "ActualEndBoardingTimeAEBT": "harry's test",
      "ActualEndofDeicingTimeAEZT": "harry's test",
      "ActualEndofGroundHandlingTimeAEGT": "harry's test",
      "ActualFinalApproachTimeAFAT": "harry's test",
      "ActualGroundHandlingDurationAGHT": "harry's test",
      "ActualInBlockTimeAIBT": "harry's test",
      "ActualLandingTimeALDT": "harry's test",
      "ActualLastCallTime": "harry's test",
      "ActualOffBlockTimeAOBT": "harry's test",
      "ActualReadyforDeicingTimeARZT": "harry's test",
      "ActualReadyforDepartureTimeARDT": "harry's test",
      "ActualStartBoardingTimeASBT": "harry's test",
      "ActualStartUpApprovalTimeASAT": "harry's test",
      "ActualStartUpRequestTimeASRT": "harry's test",
      "ActualTakeOffTimeATOT": "harry's test",
      "ActualTaxiInDurationAXIT": "harry's test",
      "ActualTaxiOutDurationAXOT": "harry's test",
      "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
      "ActualTurnaroundTimeATTT": "harry's test",
      "CalculatedTakeOffTimeCTOT": "harry's test",
      "EntryintoApproachZoneTime": "harry's test",
      "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
      "EstimatedDeIcingDurationEDIT": "harry's test",
      "EstimatedEndBoardingTimeEEBT": "harry's test",
      "EstimatedEndofDeicingTimeEEZT": "harry's test",
      "EstimatedInBlockTimeEIBT": "harry's test",
      "EstimatedLandingTimeELDT": "harry's test",
      "EstimatedLastCallTime": "harry's test",
      "EstimatedOffBlockTimeEOBT": "harry's test",
      "EstimatedReadyforDeicingTimeERZT": "harry's test",
      "EstimatedStartBoardingTime": "harry's test",
      "EstimatedTakeOffTimeETOT": "harry's test",
      "EstimatedTaxiInDurationEXIT": "harry's test",
      "EstimatedTaxiOutDurationEXOT": "harry's test",
      "EstimatedTurnAroundDurationETTT": "harry's test",
      "MinimumTurnAroundTimeMTTT": "harry's test",
      "PlannedLastCallTime": "harry's test",
      "PlannedStartBoardingTime": "harry's test",
      "ScheduledInBlockTimeSIBT": "harry's test",
      "ScheduledOffBlockTimeSOBT": "harry's test",
      "ScheduledTurnAroundDurationSTTT": "harry's test",
      "TargetLandingTimeTLDT": "harry's test",
      "TargetOffBlockTimeTOBT": "harry's test",
      "TargetStartUpApprovalTimeTSAT": "harry's test",
      "TargetTakeOffTimeTTOT": "harry's test"
    },
    "ArrivalOrDeparture": "harry's test",
    "AutomaticProcessing": "harry's test",
    "BaggageReclaim": "harry's test",
    "CarrierCode": "harry's test",
    "CheckinZone": "harry's test",
    "Comments": "harry's test",
    "DeicingMode": "harry's test",
    "DeicingPadLocation": "harry's test",
    "DeicingRigEquipment": "harry's test",
    "DeicingStandLocation": "harry's test",
    "Description": "harry's test",
    "DisplayFromTime": "harry's test",
    "DisplayUntilTime": "harry's test",
    "DivertAirport": "harry's test",
    "DivertAirportFacilityCode": "harry's test",
    "DivertIndicator": "harry's test",
    "DivertReason": "harry's test",
    "DivertReasonCode": "harry's test",
    "EstimatedDateTime": "harry's test",
    "FlightClassification": "harry's test",
    "FlightNumber": "harry's test",
    "FlightOriginOrDestination": "harry's test",
    "FromStand": "harry's test",
    "Gate": "harry's test",
    "InboundOrigin": "harry's test",
    "OperatedDateTime": "harry's test",
    "OutboundDestination": "harry's test",
    "Priority": "harry's test",
    "RepeatNumber": "harry's test",
    "ScheduledDateTime": "harry's test",
    "SpecialNeedsIndicator": "harry's test",
    "Terminal": "harry's test",
    "ArrivalSecurityCheck": "",
    "DepartureSecurityCheck": "",
    "Display": "",
    "PriorityDisplay": "",
    "TechnicalStop": ""
  }
}
flight-plan.tsx:121
objectToAdd {
  "AircraftTransport": {
    "AircraftTransportType": {
      "WakeTurbulenceCategory": {
        "Code": "harry's test"
      }
    }
  }
}
flight-plan.tsx:122
Array(4) [ "AircraftTransport", "AircraftTransportType", "WakeTurbulenceCategory", "Description" ]
 
Array [ "Description" ]
 
Array(3) [ "AircraftTransport", "AircraftTransportType", "WakeTurbulenceCategory" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportType": {
      "WakeTurbulenceCategory": {
        "Description": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Code": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Description": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportType", "IATASubtypeCode" ]
 
Array [ "IATASubtypeCode" ]
 
Array [ "AircraftTransport", "AircraftTransportType" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportType": {
      "IATASubtypeCode": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "WakeTurbulenceCategory": {
    "Code": "harry's test",
    "Description": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "IATASubtypeCode": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportType", "IATATypeCode" ]
 
Array [ "IATATypeCode" ]
 
Array [ "AircraftTransport", "AircraftTransportType" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportType": {
      "IATATypeCode": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "WakeTurbulenceCategory": {
    "Code": "harry's test",
    "Description": "harry's test"
  },
  "IATASubtypeCode": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "IATATypeCode": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportType", "ICAOTypeCode" ]
 
Array [ "ICAOTypeCode" ]
 
Array [ "AircraftTransport", "AircraftTransportType" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportType": {
      "ICAOTypeCode": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "WakeTurbulenceCategory": {
    "Code": "harry's test",
    "Description": "harry's test"
  },
  "IATASubtypeCode": "harry's test",
  "IATATypeCode": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ICAOTypeCode": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "AircraftTransport", "AircraftTransportEquipment", "AircraftTransportEquipmentCategory", "Description" ]
 
Array(3) [ "AircraftTransportEquipment", "AircraftTransportEquipmentCategory", "Description" ]
 
Array [ "AircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportEquipment": {
      "AircraftTransportEquipmentCategory": {
        "Description": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftTransportType": {
    "WakeTurbulenceCategory": {
      "Code": "harry's test",
      "Description": "harry's test"
    },
    "IATASubtypeCode": "harry's test",
    "IATATypeCode": "harry's test",
    "ICAOTypeCode": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "AircraftTransportEquipment": {
    "AircraftTransportEquipmentCategory": {
      "Description": "harry's test"
    }
  }
}
flight-plan.tsx:122
Array(4) [ "AircraftTransport", "AircraftTransportEquipment", "AircraftTransportEquipmentCategory", "Identifier" ]
 
Array [ "Identifier" ]
 
Array(3) [ "AircraftTransport", "AircraftTransportEquipment", "AircraftTransportEquipmentCategory" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportEquipment": {
      "AircraftTransportEquipmentCategory": {
        "Identifier": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Description": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Identifier": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "AircraftTransport", "AircraftTransportEquipment", "AircraftTransportEquipmentType", "Description" ]
 
Array [ "AircraftTransportEquipmentType", "Description" ]
 
Array [ "AircraftTransport", "AircraftTransportEquipment" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportEquipment": {
      "AircraftTransportEquipmentType": {
        "Description": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftTransportEquipmentCategory": {
    "Description": "harry's test",
    "Identifier": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "AircraftTransportEquipmentType": {
    "Description": "harry's test"
  }
}
flight-plan.tsx:122
Array(4) [ "AircraftTransport", "AircraftTransportEquipment", "AircraftTransportEquipmentType", "Identifier" ]
 
Array [ "Identifier" ]
 
Array(3) [ "AircraftTransport", "AircraftTransportEquipment", "AircraftTransportEquipmentType" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportEquipment": {
      "AircraftTransportEquipmentType": {
        "Identifier": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Description": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Identifier": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportEquipment", "Description" ]
 
Array [ "Description" ]
 
Array [ "AircraftTransport", "AircraftTransportEquipment" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportEquipment": {
      "Description": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftTransportEquipmentCategory": {
    "Description": "harry's test",
    "Identifier": "harry's test"
  },
  "AircraftTransportEquipmentType": {
    "Description": "harry's test",
    "Identifier": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "Description": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportEquipment", "Identifier" ]
 
Array [ "Identifier" ]
 
Array [ "AircraftTransport", "AircraftTransportEquipment" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportEquipment": {
      "Identifier": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftTransportEquipmentCategory": {
    "Description": "harry's test",
    "Identifier": "harry's test"
  },
  "AircraftTransportEquipmentType": {
    "Description": "harry's test",
    "Identifier": "harry's test"
  },
  "Description": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Identifier": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportEquipment", "Mode" ]
 
Array [ "Mode" ]
 
Array [ "AircraftTransport", "AircraftTransportEquipment" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportEquipment": {
      "Mode": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftTransportEquipmentCategory": {
    "Description": "harry's test",
    "Identifier": "harry's test"
  },
  "AircraftTransportEquipmentType": {
    "Description": "harry's test",
    "Identifier": "harry's test"
  },
  "Description": "harry's test",
  "Identifier": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Mode": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportCabinConfiguration", "Cabin" ]
 
Array [ "AircraftTransportCabinConfiguration", "Cabin" ]
 
Array [ "AircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportCabinConfiguration": {
      "Cabin": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftTransportType": {
    "WakeTurbulenceCategory": {
      "Code": "harry's test",
      "Description": "harry's test"
    },
    "IATASubtypeCode": "harry's test",
    "IATATypeCode": "harry's test",
    "ICAOTypeCode": "harry's test"
  },
  "AircraftTransportEquipment": {
    "AircraftTransportEquipmentCategory": {
      "Description": "harry's test",
      "Identifier": "harry's test"
    },
    "AircraftTransportEquipmentType": {
      "Description": "harry's test",
      "Identifier": "harry's test"
    },
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Mode": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "AircraftTransportCabinConfiguration": {
    "Cabin": "harry's test"
  }
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportCabinConfiguration", "CabinClassType" ]
 
Array [ "CabinClassType" ]
 
Array [ "AircraftTransport", "AircraftTransportCabinConfiguration" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportCabinConfiguration": {
      "CabinClassType": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Cabin": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "CabinClassType": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportCabinConfiguration", "CabinType" ]
 
Array [ "CabinType" ]
 
Array [ "AircraftTransport", "AircraftTransportCabinConfiguration" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportCabinConfiguration": {
      "CabinType": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Cabin": "harry's test",
  "CabinClassType": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "CabinType": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportCabinConfiguration", "Compartment" ]
 
Array [ "Compartment" ]
 
Array [ "AircraftTransport", "AircraftTransportCabinConfiguration" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportCabinConfiguration": {
      "Compartment": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Cabin": "harry's test",
  "CabinClassType": "harry's test",
  "CabinType": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Compartment": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportCabinConfiguration", "SeatCapacity" ]
 
Array [ "SeatCapacity" ]
 
Array [ "AircraftTransport", "AircraftTransportCabinConfiguration" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportCabinConfiguration": {
      "SeatCapacity": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Cabin": "harry's test",
  "CabinClassType": "harry's test",
  "CabinType": "harry's test",
  "Compartment": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "SeatCapacity": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportCabinConfiguration", "SeatCount" ]
 
Array [ "SeatCount" ]
 
Array [ "AircraftTransport", "AircraftTransportCabinConfiguration" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportCabinConfiguration": {
      "SeatCount": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Cabin": "harry's test",
  "CabinClassType": "harry's test",
  "CabinType": "harry's test",
  "Compartment": "harry's test",
  "SeatCapacity": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "SeatCount": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportCabinConfiguration", "Status" ]
 
Array [ "Status" ]
 
Array [ "AircraftTransport", "AircraftTransportCabinConfiguration" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportCabinConfiguration": {
      "Status": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Cabin": "harry's test",
  "CabinClassType": "harry's test",
  "CabinType": "harry's test",
  "Compartment": "harry's test",
  "SeatCapacity": "harry's test",
  "SeatCount": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Status": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportIdentification", "AircraftAddress" ]
 
Array [ "AircraftTransportIdentification", "AircraftAddress" ]
 
Array [ "AircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportIdentification": {
      "AircraftAddress": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftTransportType": {
    "WakeTurbulenceCategory": {
      "Code": "harry's test",
      "Description": "harry's test"
    },
    "IATASubtypeCode": "harry's test",
    "IATATypeCode": "harry's test",
    "ICAOTypeCode": "harry's test"
  },
  "AircraftTransportEquipment": {
    "AircraftTransportEquipmentCategory": {
      "Description": "harry's test",
      "Identifier": "harry's test"
    },
    "AircraftTransportEquipmentType": {
      "Description": "harry's test",
      "Identifier": "harry's test"
    },
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Mode": "harry's test"
  },
  "AircraftTransportCabinConfiguration": {
    "Cabin": "harry's test",
    "CabinClassType": "harry's test",
    "CabinType": "harry's test",
    "Compartment": "harry's test",
    "SeatCapacity": "harry's test",
    "SeatCount": "harry's test",
    "Status": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "AircraftTransportIdentification": {
    "AircraftAddress": "harry's test"
  }
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportIdentification", "AircraftBodyType" ]
 
Array [ "AircraftBodyType" ]
 
Array [ "AircraftTransport", "AircraftTransportIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportIdentification": {
      "AircraftBodyType": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftAddress": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "AircraftBodyType": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportIdentification", "AircraftVersion" ]
 
Array [ "AircraftVersion" ]
 
Array [ "AircraftTransport", "AircraftTransportIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportIdentification": {
      "AircraftVersion": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftAddress": "harry's test",
  "AircraftBodyType": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "AircraftVersion": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportIdentification", "CodeRequired" ]
 
Array [ "CodeRequired" ]
 
Array [ "AircraftTransport", "AircraftTransportIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportIdentification": {
      "CodeRequired": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftAddress": "harry's test",
  "AircraftBodyType": "harry's test",
  "AircraftVersion": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "CodeRequired": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportIdentification", "FleetNumber" ]
 
Array [ "FleetNumber" ]
 
Array [ "AircraftTransport", "AircraftTransportIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportIdentification": {
      "FleetNumber": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftAddress": "harry's test",
  "AircraftBodyType": "harry's test",
  "AircraftVersion": "harry's test",
  "CodeRequired": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "FleetNumber": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportIdentification", "GeneralTypeCode" ]
 
Array [ "GeneralTypeCode" ]
 
Array [ "AircraftTransport", "AircraftTransportIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportIdentification": {
      "GeneralTypeCode": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftAddress": "harry's test",
  "AircraftBodyType": "harry's test",
  "AircraftVersion": "harry's test",
  "CodeRequired": "harry's test",
  "FleetNumber": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "GeneralTypeCode": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportIdentification", "GroupCode" ]
 
Array [ "GroupCode" ]
 
Array [ "AircraftTransport", "AircraftTransportIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportIdentification": {
      "GroupCode": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftAddress": "harry's test",
  "AircraftBodyType": "harry's test",
  "AircraftVersion": "harry's test",
  "CodeRequired": "harry's test",
  "FleetNumber": "harry's test",
  "GeneralTypeCode": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "GroupCode": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportIdentification", "OtherIdentifier" ]
 
Array [ "OtherIdentifier" ]
 
Array [ "AircraftTransport", "AircraftTransportIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportIdentification": {
      "OtherIdentifier": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftAddress": "harry's test",
  "AircraftBodyType": "harry's test",
  "AircraftVersion": "harry's test",
  "CodeRequired": "harry's test",
  "FleetNumber": "harry's test",
  "GeneralTypeCode": "harry's test",
  "GroupCode": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "OtherIdentifier": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportIdentification", "Registration" ]
 
Array [ "Registration" ]
 
Array [ "AircraftTransport", "AircraftTransportIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportIdentification": {
      "Registration": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftAddress": "harry's test",
  "AircraftBodyType": "harry's test",
  "AircraftVersion": "harry's test",
  "CodeRequired": "harry's test",
  "FleetNumber": "harry's test",
  "GeneralTypeCode": "harry's test",
  "GroupCode": "harry's test",
  "OtherIdentifier": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Registration": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "AircraftTransport", "AircraftTransportLoad", "PassengerPartyCarried", "TotalPassengerCount" ]
 
Array(3) [ "AircraftTransportLoad", "PassengerPartyCarried", "TotalPassengerCount" ]
 
Array [ "AircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportLoad": {
      "PassengerPartyCarried": {
        "TotalPassengerCount": 1.1
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftTransportType": {
    "WakeTurbulenceCategory": {
      "Code": "harry's test",
      "Description": "harry's test"
    },
    "IATASubtypeCode": "harry's test",
    "IATATypeCode": "harry's test",
    "ICAOTypeCode": "harry's test"
  },
  "AircraftTransportEquipment": {
    "AircraftTransportEquipmentCategory": {
      "Description": "harry's test",
      "Identifier": "harry's test"
    },
    "AircraftTransportEquipmentType": {
      "Description": "harry's test",
      "Identifier": "harry's test"
    },
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Mode": "harry's test"
  },
  "AircraftTransportCabinConfiguration": {
    "Cabin": "harry's test",
    "CabinClassType": "harry's test",
    "CabinType": "harry's test",
    "Compartment": "harry's test",
    "SeatCapacity": "harry's test",
    "SeatCount": "harry's test",
    "Status": "harry's test"
  },
  "AircraftTransportIdentification": {
    "AircraftAddress": "harry's test",
    "AircraftBodyType": "harry's test",
    "AircraftVersion": "harry's test",
    "CodeRequired": "harry's test",
    "FleetNumber": "harry's test",
    "GeneralTypeCode": "harry's test",
    "GroupCode": "harry's test",
    "OtherIdentifier": "harry's test",
    "Registration": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "AircraftTransportLoad": {
    "PassengerPartyCarried": {
      "TotalPassengerCount": 1.1
    }
  }
}
flight-plan.tsx:122
Array(7) [ "AircraftTransport", "AircraftTransportLoad", "PassengerPartyCarried", "PassengerTypes", 0, "PassengerType", "PassengerTypeCount" ]
 
Array(4) [ "PassengerTypes", 0, "PassengerType", "PassengerTypeCount" ]
 
Array(3) [ "AircraftTransport", "AircraftTransportLoad", "PassengerPartyCarried" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportLoad": {
      "PassengerPartyCarried": {
        "PassengerTypes": [
          {
            "PassengerType": {
              "PassengerTypeCount": 1.1
            }
          }
        ]
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "TotalPassengerCount": 1.1
}
flight-plan.tsx:121
objectToAdd {
  "PassengerTypes": [
    {
      "PassengerType": {
        "PassengerTypeCount": 1.1
      }
    }
  ]
}
flight-plan.tsx:122
Array(7) [ "AircraftTransport", "AircraftTransportLoad", "PassengerPartyCarried", "PassengerTypes", 0, "PassengerType", "PassengerType" ]
 
Array [ "PassengerType" ]
 
Array(6) [ "AircraftTransport", "AircraftTransportLoad", "PassengerPartyCarried", "PassengerTypes", 0, "PassengerType" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportLoad": {
      "PassengerPartyCarried": {
        "PassengerTypes": [
          {
            "PassengerType": {
              "PassengerType": "harry's test"
            }
          }
        ]
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "PassengerTypeCount": 1.1
}
flight-plan.tsx:121
objectToAdd {
  "PassengerType": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "AircraftTransport", "AircraftTransportLoad", "BagItemCarried", "BagTypeCount" ]
 
Array [ "BagItemCarried", "BagTypeCount" ]
 
Array [ "AircraftTransport", "AircraftTransportLoad" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportLoad": {
      "BagItemCarried": {
        "BagTypeCount": 1.1
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "PassengerPartyCarried": {
    "TotalPassengerCount": 1.1,
    "PassengerTypes": [
      {
        "PassengerType": {
          "PassengerTypeCount": 1.1,
          "PassengerType": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd {
  "BagItemCarried": {
    "BagTypeCount": 1.1
  }
}
flight-plan.tsx:122
Array(4) [ "AircraftTransport", "AircraftTransportLoad", "BagItemCarried", "BagTypeWeight" ]
 
Array [ "BagTypeWeight" ]
 
Array(3) [ "AircraftTransport", "AircraftTransportLoad", "BagItemCarried" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportLoad": {
      "BagItemCarried": {
        "BagTypeWeight": 1.1
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "BagTypeCount": 1.1
}
flight-plan.tsx:121
objectToAdd {
  "BagTypeWeight": 1.1
}
flight-plan.tsx:122
Array(4) [ "AircraftTransport", "AircraftTransportLoad", "BagItemCarried", "TotalCount" ]
 
Array [ "TotalCount" ]
 
Array(3) [ "AircraftTransport", "AircraftTransportLoad", "BagItemCarried" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportLoad": {
      "BagItemCarried": {
        "TotalCount": 1.1
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "BagTypeCount": 1.1,
  "BagTypeWeight": 1.1
}
flight-plan.tsx:121
objectToAdd {
  "TotalCount": 1.1
}
flight-plan.tsx:122
Array(4) [ "AircraftTransport", "AircraftTransportLoad", "BagItemCarried", "TotalWeight" ]
 
Array [ "TotalWeight" ]
 
Array(3) [ "AircraftTransport", "AircraftTransportLoad", "BagItemCarried" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportLoad": {
      "BagItemCarried": {
        "TotalWeight": 1.1
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "BagTypeCount": 1.1,
  "BagTypeWeight": 1.1,
  "TotalCount": 1.1
}
flight-plan.tsx:121
objectToAdd {
  "TotalWeight": 1.1
}
flight-plan.tsx:122
Array(6) [ "AircraftTransport", "AircraftTransportLoad", "BagItemCarried", "BagTypes", 0, "BagCode" ]
 
Array(3) [ "BagTypes", 0, "BagCode" ]
 
Array(3) [ "AircraftTransport", "AircraftTransportLoad", "BagItemCarried" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportLoad": {
      "BagItemCarried": {
        "BagTypes": [
          {
            "BagCode": "harry's test"
          }
        ]
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "BagTypeCount": 1.1,
  "BagTypeWeight": 1.1,
  "TotalCount": 1.1,
  "TotalWeight": 1.1
}
flight-plan.tsx:121
objectToAdd {
  "BagTypes": [
    {
      "BagCode": "harry's test"
    }
  ]
}
flight-plan.tsx:122
Array(6) [ "AircraftTransport", "AircraftTransportLoad", "BagItemCarried", "BagTypes", 0, "BagDescription" ]
 
Array [ 0, "BagDescription" ]
 
Array(4) [ "AircraftTransport", "AircraftTransportLoad", "BagItemCarried", "BagTypes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportLoad": {
      "BagItemCarried": {
        "BagTypes": [
          {
            "BagDescription": "harry's test"
          }
        ]
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "BagCode": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "BagDescription": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "AircraftTransport", "AircraftTransportLoad", "CargoItemCarried", "CargoTypeCount" ]
 
Array [ "CargoItemCarried", "CargoTypeCount" ]
 
Array [ "AircraftTransport", "AircraftTransportLoad" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportLoad": {
      "CargoItemCarried": {
        "CargoTypeCount": 1.1
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "PassengerPartyCarried": {
    "TotalPassengerCount": 1.1,
    "PassengerTypes": [
      {
        "PassengerType": {
          "PassengerTypeCount": 1.1,
          "PassengerType": "harry's test"
        }
      }
    ]
  },
  "BagItemCarried": {
    "BagTypeCount": 1.1,
    "BagTypeWeight": 1.1,
    "TotalCount": 1.1,
    "TotalWeight": 1.1,
    "BagTypes": [
      {
        "BagCode": "harry's test",
        "BagDescription": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd {
  "CargoItemCarried": {
    "CargoTypeCount": 1.1
  }
}
flight-plan.tsx:122
Array(4) [ "AircraftTransport", "AircraftTransportLoad", "CargoItemCarried", "CargoTypeWeight" ]
 
Array [ "CargoTypeWeight" ]
 
Array(3) [ "AircraftTransport", "AircraftTransportLoad", "CargoItemCarried" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportLoad": {
      "CargoItemCarried": {
        "CargoTypeWeight": 1.1
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "CargoTypeCount": 1.1
}
flight-plan.tsx:121
objectToAdd {
  "CargoTypeWeight": 1.1
}
flight-plan.tsx:122
Array(4) [ "AircraftTransport", "AircraftTransportLoad", "CargoItemCarried", "TotalCount" ]
 
Array [ "TotalCount" ]
 
Array(3) [ "AircraftTransport", "AircraftTransportLoad", "CargoItemCarried" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportLoad": {
      "CargoItemCarried": {
        "TotalCount": 1.1
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "CargoTypeCount": 1.1,
  "CargoTypeWeight": 1.1
}
flight-plan.tsx:121
objectToAdd {
  "TotalCount": 1.1
}
flight-plan.tsx:122
Array(4) [ "AircraftTransport", "AircraftTransportLoad", "CargoItemCarried", "TotalWeight" ]
 
Array [ "TotalWeight" ]
 
Array(3) [ "AircraftTransport", "AircraftTransportLoad", "CargoItemCarried" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportLoad": {
      "CargoItemCarried": {
        "TotalWeight": 1.1
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "CargoTypeCount": 1.1,
  "CargoTypeWeight": 1.1,
  "TotalCount": 1.1
}
flight-plan.tsx:121
objectToAdd {
  "TotalWeight": 1.1
}
flight-plan.tsx:122
Array(6) [ "AircraftTransport", "AircraftTransportLoad", "CargoItemCarried", "CargoTypes", 0, "CargoCode" ]
 
Array(3) [ "CargoTypes", 0, "CargoCode" ]
 
Array(3) [ "AircraftTransport", "AircraftTransportLoad", "CargoItemCarried" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportLoad": {
      "CargoItemCarried": {
        "CargoTypes": [
          {
            "CargoCode": "harry's test"
          }
        ]
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "CargoTypeCount": 1.1,
  "CargoTypeWeight": 1.1,
  "TotalCount": 1.1,
  "TotalWeight": 1.1
}
flight-plan.tsx:121
objectToAdd {
  "CargoTypes": [
    {
      "CargoCode": "harry's test"
    }
  ]
}
flight-plan.tsx:122
Array(6) [ "AircraftTransport", "AircraftTransportLoad", "CargoItemCarried", "CargoTypes", 0, "CargoDescription" ]
 
Array [ 0, "CargoDescription" ]
 
Array(4) [ "AircraftTransport", "AircraftTransportLoad", "CargoItemCarried", "CargoTypes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportLoad": {
      "CargoItemCarried": {
        "CargoTypes": [
          {
            "CargoDescription": "harry's test"
          }
        ]
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "CargoCode": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "CargoDescription": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "AircraftTransport", "AircraftTransportLoad", "CargoItemCarried", "SpecialCargo" ]
 
Array [ "SpecialCargo" ]
 
Array(3) [ "AircraftTransport", "AircraftTransportLoad", "CargoItemCarried" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportLoad": {
      "CargoItemCarried": {
        "SpecialCargo": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "CargoTypeCount": 1.1,
  "CargoTypeWeight": 1.1,
  "TotalCount": 1.1,
  "TotalWeight": 1.1,
  "CargoTypes": [
    {
      "CargoCode": "harry's test",
      "CargoDescription": "harry's test"
    }
  ]
}
flight-plan.tsx:121
objectToAdd {
  "SpecialCargo": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "AircraftTransport", "AircraftTransportLoad", "MailItemCarried", "TotalWeight" ]
 
Array [ "MailItemCarried", "TotalWeight" ]
 
Array [ "AircraftTransport", "AircraftTransportLoad" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportLoad": {
      "MailItemCarried": {
        "TotalWeight": 1.1
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "PassengerPartyCarried": {
    "TotalPassengerCount": 1.1,
    "PassengerTypes": [
      {
        "PassengerType": {
          "PassengerTypeCount": 1.1,
          "PassengerType": "harry's test"
        }
      }
    ]
  },
  "BagItemCarried": {
    "BagTypeCount": 1.1,
    "BagTypeWeight": 1.1,
    "TotalCount": 1.1,
    "TotalWeight": 1.1,
    "BagTypes": [
      {
        "BagCode": "harry's test",
        "BagDescription": "harry's test"
      }
    ]
  },
  "CargoItemCarried": {
    "CargoTypeCount": 1.1,
    "CargoTypeWeight": 1.1,
    "TotalCount": 1.1,
    "TotalWeight": 1.1,
    "CargoTypes": [
      {
        "CargoCode": "harry's test",
        "CargoDescription": "harry's test"
      }
    ],
    "SpecialCargo": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "MailItemCarried": {
    "TotalWeight": 1.1
  }
}
flight-plan.tsx:122
Array(6) [ "AircraftTransport", "AircraftTransportLoad", "MailItemCarried", "MailTypes", 0, "MailCode" ]
 
Array(3) [ "MailTypes", 0, "MailCode" ]
 
Array(3) [ "AircraftTransport", "AircraftTransportLoad", "MailItemCarried" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportLoad": {
      "MailItemCarried": {
        "MailTypes": [
          {
            "MailCode": "harry's test"
          }
        ]
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "TotalWeight": 1.1
}
flight-plan.tsx:121
objectToAdd {
  "MailTypes": [
    {
      "MailCode": "harry's test"
    }
  ]
}
flight-plan.tsx:122
Array(6) [ "AircraftTransport", "AircraftTransportLoad", "MailItemCarried", "MailTypes", 0, "MailDescription" ]
 
Array [ 0, "MailDescription" ]
 
Array(4) [ "AircraftTransport", "AircraftTransportLoad", "MailItemCarried", "MailTypes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportLoad": {
      "MailItemCarried": {
        "MailTypes": [
          {
            "MailDescription": "harry's test"
          }
        ]
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "MailCode": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "MailDescription": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "AircraftTransport", "AircraftTransportLoad", "CrewPartyCarried", "CrewCount" ]
 
Array [ "CrewPartyCarried", "CrewCount" ]
 
Array [ "AircraftTransport", "AircraftTransportLoad" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportLoad": {
      "CrewPartyCarried": {
        "CrewCount": 1.1
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "PassengerPartyCarried": {
    "TotalPassengerCount": 1.1,
    "PassengerTypes": [
      {
        "PassengerType": {
          "PassengerTypeCount": 1.1,
          "PassengerType": "harry's test"
        }
      }
    ]
  },
  "BagItemCarried": {
    "BagTypeCount": 1.1,
    "BagTypeWeight": 1.1,
    "TotalCount": 1.1,
    "TotalWeight": 1.1,
    "BagTypes": [
      {
        "BagCode": "harry's test",
        "BagDescription": "harry's test"
      }
    ]
  },
  "CargoItemCarried": {
    "CargoTypeCount": 1.1,
    "CargoTypeWeight": 1.1,
    "TotalCount": 1.1,
    "TotalWeight": 1.1,
    "CargoTypes": [
      {
        "CargoCode": "harry's test",
        "CargoDescription": "harry's test"
      }
    ],
    "SpecialCargo": "harry's test"
  },
  "MailItemCarried": {
    "TotalWeight": 1.1,
    "MailTypes": [
      {
        "MailCode": "harry's test",
        "MailDescription": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd {
  "CrewPartyCarried": {
    "CrewCount": 1.1
  }
}
flight-plan.tsx:122
Array(6) [ "AircraftTransport", "AircraftTransportLoad", "CrewPartyCarried", "CrewTypes", 0, "CrewTypeCount" ]
 
Array(3) [ "CrewTypes", 0, "CrewTypeCount" ]
 
Array(3) [ "AircraftTransport", "AircraftTransportLoad", "CrewPartyCarried" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportLoad": {
      "CrewPartyCarried": {
        "CrewTypes": [
          {
            "CrewTypeCount": 1.1
          }
        ]
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "CrewCount": 1.1
}
flight-plan.tsx:121
objectToAdd {
  "CrewTypes": [
    {
      "CrewTypeCount": 1.1
    }
  ]
}
flight-plan.tsx:122
Array(6) [ "AircraftTransport", "AircraftTransportLoad", "CrewPartyCarried", "CrewTypes", 0, "CrewType" ]
 
Array [ 0, "CrewType" ]
 
Array(4) [ "AircraftTransport", "AircraftTransportLoad", "CrewPartyCarried", "CrewTypes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportLoad": {
      "CrewPartyCarried": {
        "CrewTypes": [
          {
            "CrewType": "harry's test"
          }
        ]
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "CrewTypeCount": 1.1
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "CrewType": "harry's test"
  }
]
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportLoad", "BallastWeight" ]
 
Array [ "BallastWeight" ]
 
Array [ "AircraftTransport", "AircraftTransportLoad" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportLoad": {
      "BallastWeight": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "PassengerPartyCarried": {
    "TotalPassengerCount": 1.1,
    "PassengerTypes": [
      {
        "PassengerType": {
          "PassengerTypeCount": 1.1,
          "PassengerType": "harry's test"
        }
      }
    ]
  },
  "BagItemCarried": {
    "BagTypeCount": 1.1,
    "BagTypeWeight": 1.1,
    "TotalCount": 1.1,
    "TotalWeight": 1.1,
    "BagTypes": [
      {
        "BagCode": "harry's test",
        "BagDescription": "harry's test"
      }
    ]
  },
  "CargoItemCarried": {
    "CargoTypeCount": 1.1,
    "CargoTypeWeight": 1.1,
    "TotalCount": 1.1,
    "TotalWeight": 1.1,
    "CargoTypes": [
      {
        "CargoCode": "harry's test",
        "CargoDescription": "harry's test"
      }
    ],
    "SpecialCargo": "harry's test"
  },
  "MailItemCarried": {
    "TotalWeight": 1.1,
    "MailTypes": [
      {
        "MailCode": "harry's test",
        "MailDescription": "harry's test"
      }
    ]
  },
  "CrewPartyCarried": {
    "CrewCount": 1.1,
    "CrewTypes": [
      {
        "CrewTypeCount": 1.1,
        "CrewType": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd {
  "BallastWeight": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportLoad", "DeadLoad" ]
 
Array [ "DeadLoad" ]
 
Array [ "AircraftTransport", "AircraftTransportLoad" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportLoad": {
      "DeadLoad": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "PassengerPartyCarried": {
    "TotalPassengerCount": 1.1,
    "PassengerTypes": [
      {
        "PassengerType": {
          "PassengerTypeCount": 1.1,
          "PassengerType": "harry's test"
        }
      }
    ]
  },
  "BagItemCarried": {
    "BagTypeCount": 1.1,
    "BagTypeWeight": 1.1,
    "TotalCount": 1.1,
    "TotalWeight": 1.1,
    "BagTypes": [
      {
        "BagCode": "harry's test",
        "BagDescription": "harry's test"
      }
    ]
  },
  "CargoItemCarried": {
    "CargoTypeCount": 1.1,
    "CargoTypeWeight": 1.1,
    "TotalCount": 1.1,
    "TotalWeight": 1.1,
    "CargoTypes": [
      {
        "CargoCode": "harry's test",
        "CargoDescription": "harry's test"
      }
    ],
    "SpecialCargo": "harry's test"
  },
  "MailItemCarried": {
    "TotalWeight": 1.1,
    "MailTypes": [
      {
        "MailCode": "harry's test",
        "MailDescription": "harry's test"
      }
    ]
  },
  "CrewPartyCarried": {
    "CrewCount": 1.1,
    "CrewTypes": [
      {
        "CrewTypeCount": 1.1,
        "CrewType": "harry's test"
      }
    ]
  },
  "BallastWeight": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "DeadLoad": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportIdentifier", "AircraftBodyType" ]
 
Array [ "AircraftTransportIdentifier", "AircraftBodyType" ]
 
Array [ "AircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportIdentifier": {
      "AircraftBodyType": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftTransportType": {
    "WakeTurbulenceCategory": {
      "Code": "harry's test",
      "Description": "harry's test"
    },
    "IATASubtypeCode": "harry's test",
    "IATATypeCode": "harry's test",
    "ICAOTypeCode": "harry's test"
  },
  "AircraftTransportEquipment": {
    "AircraftTransportEquipmentCategory": {
      "Description": "harry's test",
      "Identifier": "harry's test"
    },
    "AircraftTransportEquipmentType": {
      "Description": "harry's test",
      "Identifier": "harry's test"
    },
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Mode": "harry's test"
  },
  "AircraftTransportCabinConfiguration": {
    "Cabin": "harry's test",
    "CabinClassType": "harry's test",
    "CabinType": "harry's test",
    "Compartment": "harry's test",
    "SeatCapacity": "harry's test",
    "SeatCount": "harry's test",
    "Status": "harry's test"
  },
  "AircraftTransportIdentification": {
    "AircraftAddress": "harry's test",
    "AircraftBodyType": "harry's test",
    "AircraftVersion": "harry's test",
    "CodeRequired": "harry's test",
    "FleetNumber": "harry's test",
    "GeneralTypeCode": "harry's test",
    "GroupCode": "harry's test",
    "OtherIdentifier": "harry's test",
    "Registration": "harry's test"
  },
  "AircraftTransportLoad": {
    "PassengerPartyCarried": {
      "TotalPassengerCount": 1.1,
      "PassengerTypes": [
        {
          "PassengerType": {
            "PassengerTypeCount": 1.1,
            "PassengerType": "harry's test"
          }
        }
      ]
    },
    "BagItemCarried": {
      "BagTypeCount": 1.1,
      "BagTypeWeight": 1.1,
      "TotalCount": 1.1,
      "TotalWeight": 1.1,
      "BagTypes": [
        {
          "BagCode": "harry's test",
          "BagDescription": "harry's test"
        }
      ]
    },
    "CargoItemCarried": {
      "CargoTypeCount": 1.1,
      "CargoTypeWeight": 1.1,
      "TotalCount": 1.1,
      "TotalWeight": 1.1,
      "CargoTypes": [
        {
          "CargoCode": "harry's test",
          "CargoDescription": "harry's test"
        }
      ],
      "SpecialCargo": "harry's test"
    },
    "MailItemCarried": {
      "TotalWeight": 1.1,
      "MailTypes": [
        {
          "MailCode": "harry's test",
          "MailDescription": "harry's test"
        }
      ]
    },
    "CrewPartyCarried": {
      "CrewCount": 1.1,
      "CrewTypes": [
        {
          "CrewTypeCount": 1.1,
          "CrewType": "harry's test"
        }
      ]
    },
    "BallastWeight": "harry's test",
    "DeadLoad": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "AircraftTransportIdentifier": {
    "AircraftBodyType": "harry's test"
  }
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportIdentifier", "AircraftVersion" ]
 
Array [ "AircraftVersion" ]
 
Array [ "AircraftTransport", "AircraftTransportIdentifier" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportIdentifier": {
      "AircraftVersion": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftBodyType": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "AircraftVersion": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportIdentifier", "CodeRequired" ]
 
Array [ "CodeRequired" ]
 
Array [ "AircraftTransport", "AircraftTransportIdentifier" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportIdentifier": {
      "CodeRequired": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftBodyType": "harry's test",
  "AircraftVersion": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "CodeRequired": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportIdentifier", "FleetNumber" ]
 
Array [ "FleetNumber" ]
 
Array [ "AircraftTransport", "AircraftTransportIdentifier" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportIdentifier": {
      "FleetNumber": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftBodyType": "harry's test",
  "AircraftVersion": "harry's test",
  "CodeRequired": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "FleetNumber": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportIdentifier", "GeneralTypeCode" ]
 
Array [ "GeneralTypeCode" ]
 
Array [ "AircraftTransport", "AircraftTransportIdentifier" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportIdentifier": {
      "GeneralTypeCode": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftBodyType": "harry's test",
  "AircraftVersion": "harry's test",
  "CodeRequired": "harry's test",
  "FleetNumber": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "GeneralTypeCode": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportIdentifier", "GroupCode" ]
 
Array [ "GroupCode" ]
 
Array [ "AircraftTransport", "AircraftTransportIdentifier" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportIdentifier": {
      "GroupCode": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftBodyType": "harry's test",
  "AircraftVersion": "harry's test",
  "CodeRequired": "harry's test",
  "FleetNumber": "harry's test",
  "GeneralTypeCode": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "GroupCode": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportIdentifier", "IATASubtypeCode" ]
 
Array [ "IATASubtypeCode" ]
 
Array [ "AircraftTransport", "AircraftTransportIdentifier" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportIdentifier": {
      "IATASubtypeCode": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftBodyType": "harry's test",
  "AircraftVersion": "harry's test",
  "CodeRequired": "harry's test",
  "FleetNumber": "harry's test",
  "GeneralTypeCode": "harry's test",
  "GroupCode": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "IATASubtypeCode": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportIdentifier", "IATATypeCode" ]
 
Array [ "IATATypeCode" ]
 
Array [ "AircraftTransport", "AircraftTransportIdentifier" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportIdentifier": {
      "IATATypeCode": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftBodyType": "harry's test",
  "AircraftVersion": "harry's test",
  "CodeRequired": "harry's test",
  "FleetNumber": "harry's test",
  "GeneralTypeCode": "harry's test",
  "GroupCode": "harry's test",
  "IATASubtypeCode": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "IATATypeCode": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportIdentifier", "ICAOTypeCode" ]
 
Array [ "ICAOTypeCode" ]
 
Array [ "AircraftTransport", "AircraftTransportIdentifier" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportIdentifier": {
      "ICAOTypeCode": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftBodyType": "harry's test",
  "AircraftVersion": "harry's test",
  "CodeRequired": "harry's test",
  "FleetNumber": "harry's test",
  "GeneralTypeCode": "harry's test",
  "GroupCode": "harry's test",
  "IATASubtypeCode": "harry's test",
  "IATATypeCode": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ICAOTypeCode": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AircraftTransport", "AircraftTransportIdentifier", "Registration" ]
 
Array [ "Registration" ]
 
Array [ "AircraftTransport", "AircraftTransportIdentifier" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftTransportIdentifier": {
      "Registration": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftBodyType": "harry's test",
  "AircraftVersion": "harry's test",
  "CodeRequired": "harry's test",
  "FleetNumber": "harry's test",
  "GeneralTypeCode": "harry's test",
  "GroupCode": "harry's test",
  "IATASubtypeCode": "harry's test",
  "IATATypeCode": "harry's test",
  "ICAOTypeCode": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Registration": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftTransport", "AircraftDescription" ]
 
Array [ "AircraftDescription" ]
 
Array [ "AircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "AircraftDescription": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftTransportType": {
    "WakeTurbulenceCategory": {
      "Code": "harry's test",
      "Description": "harry's test"
    },
    "IATASubtypeCode": "harry's test",
    "IATATypeCode": "harry's test",
    "ICAOTypeCode": "harry's test"
  },
  "AircraftTransportEquipment": {
    "AircraftTransportEquipmentCategory": {
      "Description": "harry's test",
      "Identifier": "harry's test"
    },
    "AircraftTransportEquipmentType": {
      "Description": "harry's test",
      "Identifier": "harry's test"
    },
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Mode": "harry's test"
  },
  "AircraftTransportCabinConfiguration": {
    "Cabin": "harry's test",
    "CabinClassType": "harry's test",
    "CabinType": "harry's test",
    "Compartment": "harry's test",
    "SeatCapacity": "harry's test",
    "SeatCount": "harry's test",
    "Status": "harry's test"
  },
  "AircraftTransportIdentification": {
    "AircraftAddress": "harry's test",
    "AircraftBodyType": "harry's test",
    "AircraftVersion": "harry's test",
    "CodeRequired": "harry's test",
    "FleetNumber": "harry's test",
    "GeneralTypeCode": "harry's test",
    "GroupCode": "harry's test",
    "OtherIdentifier": "harry's test",
    "Registration": "harry's test"
  },
  "AircraftTransportLoad": {
    "PassengerPartyCarried": {
      "TotalPassengerCount": 1.1,
      "PassengerTypes": [
        {
          "PassengerType": {
            "PassengerTypeCount": 1.1,
            "PassengerType": "harry's test"
          }
        }
      ]
    },
    "BagItemCarried": {
      "BagTypeCount": 1.1,
      "BagTypeWeight": 1.1,
      "TotalCount": 1.1,
      "TotalWeight": 1.1,
      "BagTypes": [
        {
          "BagCode": "harry's test",
          "BagDescription": "harry's test"
        }
      ]
    },
    "CargoItemCarried": {
      "CargoTypeCount": 1.1,
      "CargoTypeWeight": 1.1,
      "TotalCount": 1.1,
      "TotalWeight": 1.1,
      "CargoTypes": [
        {
          "CargoCode": "harry's test",
          "CargoDescription": "harry's test"
        }
      ],
      "SpecialCargo": "harry's test"
    },
    "MailItemCarried": {
      "TotalWeight": 1.1,
      "MailTypes": [
        {
          "MailCode": "harry's test",
          "MailDescription": "harry's test"
        }
      ]
    },
    "CrewPartyCarried": {
      "CrewCount": 1.1,
      "CrewTypes": [
        {
          "CrewTypeCount": 1.1,
          "CrewType": "harry's test"
        }
      ]
    },
    "BallastWeight": "harry's test",
    "DeadLoad": "harry's test"
  },
  "AircraftTransportIdentifier": {
    "AircraftBodyType": "harry's test",
    "AircraftVersion": "harry's test",
    "CodeRequired": "harry's test",
    "FleetNumber": "harry's test",
    "GeneralTypeCode": "harry's test",
    "GroupCode": "harry's test",
    "IATASubtypeCode": "harry's test",
    "IATATypeCode": "harry's test",
    "ICAOTypeCode": "harry's test",
    "Registration": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "AircraftDescription": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftTransport", "EarliestDeliveryDateTime" ]
 
Array [ "EarliestDeliveryDateTime" ]
 
Array [ "AircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "EarliestDeliveryDateTime": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftTransportType": {
    "WakeTurbulenceCategory": {
      "Code": "harry's test",
      "Description": "harry's test"
    },
    "IATASubtypeCode": "harry's test",
    "IATATypeCode": "harry's test",
    "ICAOTypeCode": "harry's test"
  },
  "AircraftTransportEquipment": {
    "AircraftTransportEquipmentCategory": {
      "Description": "harry's test",
      "Identifier": "harry's test"
    },
    "AircraftTransportEquipmentType": {
      "Description": "harry's test",
      "Identifier": "harry's test"
    },
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Mode": "harry's test"
  },
  "AircraftTransportCabinConfiguration": {
    "Cabin": "harry's test",
    "CabinClassType": "harry's test",
    "CabinType": "harry's test",
    "Compartment": "harry's test",
    "SeatCapacity": "harry's test",
    "SeatCount": "harry's test",
    "Status": "harry's test"
  },
  "AircraftTransportIdentification": {
    "AircraftAddress": "harry's test",
    "AircraftBodyType": "harry's test",
    "AircraftVersion": "harry's test",
    "CodeRequired": "harry's test",
    "FleetNumber": "harry's test",
    "GeneralTypeCode": "harry's test",
    "GroupCode": "harry's test",
    "OtherIdentifier": "harry's test",
    "Registration": "harry's test"
  },
  "AircraftTransportLoad": {
    "PassengerPartyCarried": {
      "TotalPassengerCount": 1.1,
      "PassengerTypes": [
        {
          "PassengerType": {
            "PassengerTypeCount": 1.1,
            "PassengerType": "harry's test"
          }
        }
      ]
    },
    "BagItemCarried": {
      "BagTypeCount": 1.1,
      "BagTypeWeight": 1.1,
      "TotalCount": 1.1,
      "TotalWeight": 1.1,
      "BagTypes": [
        {
          "BagCode": "harry's test",
          "BagDescription": "harry's test"
        }
      ]
    },
    "CargoItemCarried": {
      "CargoTypeCount": 1.1,
      "CargoTypeWeight": 1.1,
      "TotalCount": 1.1,
      "TotalWeight": 1.1,
      "CargoTypes": [
        {
          "CargoCode": "harry's test",
          "CargoDescription": "harry's test"
        }
      ],
      "SpecialCargo": "harry's test"
    },
    "MailItemCarried": {
      "TotalWeight": 1.1,
      "MailTypes": [
        {
          "MailCode": "harry's test",
          "MailDescription": "harry's test"
        }
      ]
    },
    "CrewPartyCarried": {
      "CrewCount": 1.1,
      "CrewTypes": [
        {
          "CrewTypeCount": 1.1,
          "CrewType": "harry's test"
        }
      ]
    },
    "BallastWeight": "harry's test",
    "DeadLoad": "harry's test"
  },
  "AircraftTransportIdentifier": {
    "AircraftBodyType": "harry's test",
    "AircraftVersion": "harry's test",
    "CodeRequired": "harry's test",
    "FleetNumber": "harry's test",
    "GeneralTypeCode": "harry's test",
    "GroupCode": "harry's test",
    "IATASubtypeCode": "harry's test",
    "IATATypeCode": "harry's test",
    "ICAOTypeCode": "harry's test",
    "Registration": "harry's test"
  },
  "AircraftDescription": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EarliestDeliveryDateTime": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftTransport", "FutureMaximumTakeOffWeight" ]
 
Array [ "FutureMaximumTakeOffWeight" ]
 
Array [ "AircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "FutureMaximumTakeOffWeight": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftTransportType": {
    "WakeTurbulenceCategory": {
      "Code": "harry's test",
      "Description": "harry's test"
    },
    "IATASubtypeCode": "harry's test",
    "IATATypeCode": "harry's test",
    "ICAOTypeCode": "harry's test"
  },
  "AircraftTransportEquipment": {
    "AircraftTransportEquipmentCategory": {
      "Description": "harry's test",
      "Identifier": "harry's test"
    },
    "AircraftTransportEquipmentType": {
      "Description": "harry's test",
      "Identifier": "harry's test"
    },
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Mode": "harry's test"
  },
  "AircraftTransportCabinConfiguration": {
    "Cabin": "harry's test",
    "CabinClassType": "harry's test",
    "CabinType": "harry's test",
    "Compartment": "harry's test",
    "SeatCapacity": "harry's test",
    "SeatCount": "harry's test",
    "Status": "harry's test"
  },
  "AircraftTransportIdentification": {
    "AircraftAddress": "harry's test",
    "AircraftBodyType": "harry's test",
    "AircraftVersion": "harry's test",
    "CodeRequired": "harry's test",
    "FleetNumber": "harry's test",
    "GeneralTypeCode": "harry's test",
    "GroupCode": "harry's test",
    "OtherIdentifier": "harry's test",
    "Registration": "harry's test"
  },
  "AircraftTransportLoad": {
    "PassengerPartyCarried": {
      "TotalPassengerCount": 1.1,
      "PassengerTypes": [
        {
          "PassengerType": {
            "PassengerTypeCount": 1.1,
            "PassengerType": "harry's test"
          }
        }
      ]
    },
    "BagItemCarried": {
      "BagTypeCount": 1.1,
      "BagTypeWeight": 1.1,
      "TotalCount": 1.1,
      "TotalWeight": 1.1,
      "BagTypes": [
        {
          "BagCode": "harry's test",
          "BagDescription": "harry's test"
        }
      ]
    },
    "CargoItemCarried": {
      "CargoTypeCount": 1.1,
      "CargoTypeWeight": 1.1,
      "TotalCount": 1.1,
      "TotalWeight": 1.1,
      "CargoTypes": [
        {
          "CargoCode": "harry's test",
          "CargoDescription": "harry's test"
        }
      ],
      "SpecialCargo": "harry's test"
    },
    "MailItemCarried": {
      "TotalWeight": 1.1,
      "MailTypes": [
        {
          "MailCode": "harry's test",
          "MailDescription": "harry's test"
        }
      ]
    },
    "CrewPartyCarried": {
      "CrewCount": 1.1,
      "CrewTypes": [
        {
          "CrewTypeCount": 1.1,
          "CrewType": "harry's test"
        }
      ]
    },
    "BallastWeight": "harry's test",
    "DeadLoad": "harry's test"
  },
  "AircraftTransportIdentifier": {
    "AircraftBodyType": "harry's test",
    "AircraftVersion": "harry's test",
    "CodeRequired": "harry's test",
    "FleetNumber": "harry's test",
    "GeneralTypeCode": "harry's test",
    "GroupCode": "harry's test",
    "IATASubtypeCode": "harry's test",
    "IATATypeCode": "harry's test",
    "ICAOTypeCode": "harry's test",
    "Registration": "harry's test"
  },
  "AircraftDescription": "harry's test",
  "EarliestDeliveryDateTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "FutureMaximumTakeOffWeight": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftTransport", "LatestDeliveryDateTime" ]
 
Array [ "LatestDeliveryDateTime" ]
 
Array [ "AircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "LatestDeliveryDateTime": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftTransportType": {
    "WakeTurbulenceCategory": {
      "Code": "harry's test",
      "Description": "harry's test"
    },
    "IATASubtypeCode": "harry's test",
    "IATATypeCode": "harry's test",
    "ICAOTypeCode": "harry's test"
  },
  "AircraftTransportEquipment": {
    "AircraftTransportEquipmentCategory": {
      "Description": "harry's test",
      "Identifier": "harry's test"
    },
    "AircraftTransportEquipmentType": {
      "Description": "harry's test",
      "Identifier": "harry's test"
    },
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Mode": "harry's test"
  },
  "AircraftTransportCabinConfiguration": {
    "Cabin": "harry's test",
    "CabinClassType": "harry's test",
    "CabinType": "harry's test",
    "Compartment": "harry's test",
    "SeatCapacity": "harry's test",
    "SeatCount": "harry's test",
    "Status": "harry's test"
  },
  "AircraftTransportIdentification": {
    "AircraftAddress": "harry's test",
    "AircraftBodyType": "harry's test",
    "AircraftVersion": "harry's test",
    "CodeRequired": "harry's test",
    "FleetNumber": "harry's test",
    "GeneralTypeCode": "harry's test",
    "GroupCode": "harry's test",
    "OtherIdentifier": "harry's test",
    "Registration": "harry's test"
  },
  "AircraftTransportLoad": {
    "PassengerPartyCarried": {
      "TotalPassengerCount": 1.1,
      "PassengerTypes": [
        {
          "PassengerType": {
            "PassengerTypeCount": 1.1,
            "PassengerType": "harry's test"
          }
        }
      ]
    },
    "BagItemCarried": {
      "BagTypeCount": 1.1,
      "BagTypeWeight": 1.1,
      "TotalCount": 1.1,
      "TotalWeight": 1.1,
      "BagTypes": [
        {
          "BagCode": "harry's test",
          "BagDescription": "harry's test"
        }
      ]
    },
    "CargoItemCarried": {
      "CargoTypeCount": 1.1,
      "CargoTypeWeight": 1.1,
      "TotalCount": 1.1,
      "TotalWeight": 1.1,
      "CargoTypes": [
        {
          "CargoCode": "harry's test",
          "CargoDescription": "harry's test"
        }
      ],
      "SpecialCargo": "harry's test"
    },
    "MailItemCarried": {
      "TotalWeight": 1.1,
      "MailTypes": [
        {
          "MailCode": "harry's test",
          "MailDescription": "harry's test"
        }
      ]
    },
    "CrewPartyCarried": {
      "CrewCount": 1.1,
      "CrewTypes": [
        {
          "CrewTypeCount": 1.1,
          "CrewType": "harry's test"
        }
      ]
    },
    "BallastWeight": "harry's test",
    "DeadLoad": "harry's test"
  },
  "AircraftTransportIdentifier": {
    "AircraftBodyType": "harry's test",
    "AircraftVersion": "harry's test",
    "CodeRequired": "harry's test",
    "FleetNumber": "harry's test",
    "GeneralTypeCode": "harry's test",
    "GroupCode": "harry's test",
    "IATASubtypeCode": "harry's test",
    "IATATypeCode": "harry's test",
    "ICAOTypeCode": "harry's test",
    "Registration": "harry's test"
  },
  "AircraftDescription": "harry's test",
  "EarliestDeliveryDateTime": "harry's test",
  "FutureMaximumTakeOffWeight": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "LatestDeliveryDateTime": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftTransport", "Mode" ]
 
Array [ "Mode" ]
 
Array [ "AircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "Mode": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftTransportType": {
    "WakeTurbulenceCategory": {
      "Code": "harry's test",
      "Description": "harry's test"
    },
    "IATASubtypeCode": "harry's test",
    "IATATypeCode": "harry's test",
    "ICAOTypeCode": "harry's test"
  },
  "AircraftTransportEquipment": {
    "AircraftTransportEquipmentCategory": {
      "Description": "harry's test",
      "Identifier": "harry's test"
    },
    "AircraftTransportEquipmentType": {
      "Description": "harry's test",
      "Identifier": "harry's test"
    },
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Mode": "harry's test"
  },
  "AircraftTransportCabinConfiguration": {
    "Cabin": "harry's test",
    "CabinClassType": "harry's test",
    "CabinType": "harry's test",
    "Compartment": "harry's test",
    "SeatCapacity": "harry's test",
    "SeatCount": "harry's test",
    "Status": "harry's test"
  },
  "AircraftTransportIdentification": {
    "AircraftAddress": "harry's test",
    "AircraftBodyType": "harry's test",
    "AircraftVersion": "harry's test",
    "CodeRequired": "harry's test",
    "FleetNumber": "harry's test",
    "GeneralTypeCode": "harry's test",
    "GroupCode": "harry's test",
    "OtherIdentifier": "harry's test",
    "Registration": "harry's test"
  },
  "AircraftTransportLoad": {
    "PassengerPartyCarried": {
      "TotalPassengerCount": 1.1,
      "PassengerTypes": [
        {
          "PassengerType": {
            "PassengerTypeCount": 1.1,
            "PassengerType": "harry's test"
          }
        }
      ]
    },
    "BagItemCarried": {
      "BagTypeCount": 1.1,
      "BagTypeWeight": 1.1,
      "TotalCount": 1.1,
      "TotalWeight": 1.1,
      "BagTypes": [
        {
          "BagCode": "harry's test",
          "BagDescription": "harry's test"
        }
      ]
    },
    "CargoItemCarried": {
      "CargoTypeCount": 1.1,
      "CargoTypeWeight": 1.1,
      "TotalCount": 1.1,
      "TotalWeight": 1.1,
      "CargoTypes": [
        {
          "CargoCode": "harry's test",
          "CargoDescription": "harry's test"
        }
      ],
      "SpecialCargo": "harry's test"
    },
    "MailItemCarried": {
      "TotalWeight": 1.1,
      "MailTypes": [
        {
          "MailCode": "harry's test",
          "MailDescription": "harry's test"
        }
      ]
    },
    "CrewPartyCarried": {
      "CrewCount": 1.1,
      "CrewTypes": [
        {
          "CrewTypeCount": 1.1,
          "CrewType": "harry's test"
        }
      ]
    },
    "BallastWeight": "harry's test",
    "DeadLoad": "harry's test"
  },
  "AircraftTransportIdentifier": {
    "AircraftBodyType": "harry's test",
    "AircraftVersion": "harry's test",
    "CodeRequired": "harry's test",
    "FleetNumber": "harry's test",
    "GeneralTypeCode": "harry's test",
    "GroupCode": "harry's test",
    "IATASubtypeCode": "harry's test",
    "IATATypeCode": "harry's test",
    "ICAOTypeCode": "harry's test",
    "Registration": "harry's test"
  },
  "AircraftDescription": "harry's test",
  "EarliestDeliveryDateTime": "harry's test",
  "FutureMaximumTakeOffWeight": "harry's test",
  "LatestDeliveryDateTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Mode": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftTransport", "NoiseCertificationIndicator" ]
 
Array [ "NoiseCertificationIndicator" ]
 
Array [ "AircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "NoiseCertificationIndicator": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftTransportType": {
    "WakeTurbulenceCategory": {
      "Code": "harry's test",
      "Description": "harry's test"
    },
    "IATASubtypeCode": "harry's test",
    "IATATypeCode": "harry's test",
    "ICAOTypeCode": "harry's test"
  },
  "AircraftTransportEquipment": {
    "AircraftTransportEquipmentCategory": {
      "Description": "harry's test",
      "Identifier": "harry's test"
    },
    "AircraftTransportEquipmentType": {
      "Description": "harry's test",
      "Identifier": "harry's test"
    },
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Mode": "harry's test"
  },
  "AircraftTransportCabinConfiguration": {
    "Cabin": "harry's test",
    "CabinClassType": "harry's test",
    "CabinType": "harry's test",
    "Compartment": "harry's test",
    "SeatCapacity": "harry's test",
    "SeatCount": "harry's test",
    "Status": "harry's test"
  },
  "AircraftTransportIdentification": {
    "AircraftAddress": "harry's test",
    "AircraftBodyType": "harry's test",
    "AircraftVersion": "harry's test",
    "CodeRequired": "harry's test",
    "FleetNumber": "harry's test",
    "GeneralTypeCode": "harry's test",
    "GroupCode": "harry's test",
    "OtherIdentifier": "harry's test",
    "Registration": "harry's test"
  },
  "AircraftTransportLoad": {
    "PassengerPartyCarried": {
      "TotalPassengerCount": 1.1,
      "PassengerTypes": [
        {
          "PassengerType": {
            "PassengerTypeCount": 1.1,
            "PassengerType": "harry's test"
          }
        }
      ]
    },
    "BagItemCarried": {
      "BagTypeCount": 1.1,
      "BagTypeWeight": 1.1,
      "TotalCount": 1.1,
      "TotalWeight": 1.1,
      "BagTypes": [
        {
          "BagCode": "harry's test",
          "BagDescription": "harry's test"
        }
      ]
    },
    "CargoItemCarried": {
      "CargoTypeCount": 1.1,
      "CargoTypeWeight": 1.1,
      "TotalCount": 1.1,
      "TotalWeight": 1.1,
      "CargoTypes": [
        {
          "CargoCode": "harry's test",
          "CargoDescription": "harry's test"
        }
      ],
      "SpecialCargo": "harry's test"
    },
    "MailItemCarried": {
      "TotalWeight": 1.1,
      "MailTypes": [
        {
          "MailCode": "harry's test",
          "MailDescription": "harry's test"
        }
      ]
    },
    "CrewPartyCarried": {
      "CrewCount": 1.1,
      "CrewTypes": [
        {
          "CrewTypeCount": 1.1,
          "CrewType": "harry's test"
        }
      ]
    },
    "BallastWeight": "harry's test",
    "DeadLoad": "harry's test"
  },
  "AircraftTransportIdentifier": {
    "AircraftBodyType": "harry's test",
    "AircraftVersion": "harry's test",
    "CodeRequired": "harry's test",
    "FleetNumber": "harry's test",
    "GeneralTypeCode": "harry's test",
    "GroupCode": "harry's test",
    "IATASubtypeCode": "harry's test",
    "IATATypeCode": "harry's test",
    "ICAOTypeCode": "harry's test",
    "Registration": "harry's test"
  },
  "AircraftDescription": "harry's test",
  "EarliestDeliveryDateTime": "harry's test",
  "FutureMaximumTakeOffWeight": "harry's test",
  "LatestDeliveryDateTime": "harry's test",
  "Mode": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "NoiseCertificationIndicator": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftTransport", "StandChangeIndicator" ]
 
Array [ "StandChangeIndicator" ]
 
Array [ "AircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "StandChangeIndicator": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftTransportType": {
    "WakeTurbulenceCategory": {
      "Code": "harry's test",
      "Description": "harry's test"
    },
    "IATASubtypeCode": "harry's test",
    "IATATypeCode": "harry's test",
    "ICAOTypeCode": "harry's test"
  },
  "AircraftTransportEquipment": {
    "AircraftTransportEquipmentCategory": {
      "Description": "harry's test",
      "Identifier": "harry's test"
    },
    "AircraftTransportEquipmentType": {
      "Description": "harry's test",
      "Identifier": "harry's test"
    },
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Mode": "harry's test"
  },
  "AircraftTransportCabinConfiguration": {
    "Cabin": "harry's test",
    "CabinClassType": "harry's test",
    "CabinType": "harry's test",
    "Compartment": "harry's test",
    "SeatCapacity": "harry's test",
    "SeatCount": "harry's test",
    "Status": "harry's test"
  },
  "AircraftTransportIdentification": {
    "AircraftAddress": "harry's test",
    "AircraftBodyType": "harry's test",
    "AircraftVersion": "harry's test",
    "CodeRequired": "harry's test",
    "FleetNumber": "harry's test",
    "GeneralTypeCode": "harry's test",
    "GroupCode": "harry's test",
    "OtherIdentifier": "harry's test",
    "Registration": "harry's test"
  },
  "AircraftTransportLoad": {
    "PassengerPartyCarried": {
      "TotalPassengerCount": 1.1,
      "PassengerTypes": [
        {
          "PassengerType": {
            "PassengerTypeCount": 1.1,
            "PassengerType": "harry's test"
          }
        }
      ]
    },
    "BagItemCarried": {
      "BagTypeCount": 1.1,
      "BagTypeWeight": 1.1,
      "TotalCount": 1.1,
      "TotalWeight": 1.1,
      "BagTypes": [
        {
          "BagCode": "harry's test",
          "BagDescription": "harry's test"
        }
      ]
    },
    "CargoItemCarried": {
      "CargoTypeCount": 1.1,
      "CargoTypeWeight": 1.1,
      "TotalCount": 1.1,
      "TotalWeight": 1.1,
      "CargoTypes": [
        {
          "CargoCode": "harry's test",
          "CargoDescription": "harry's test"
        }
      ],
      "SpecialCargo": "harry's test"
    },
    "MailItemCarried": {
      "TotalWeight": 1.1,
      "MailTypes": [
        {
          "MailCode": "harry's test",
          "MailDescription": "harry's test"
        }
      ]
    },
    "CrewPartyCarried": {
      "CrewCount": 1.1,
      "CrewTypes": [
        {
          "CrewTypeCount": 1.1,
          "CrewType": "harry's test"
        }
      ]
    },
    "BallastWeight": "harry's test",
    "DeadLoad": "harry's test"
  },
  "AircraftTransportIdentifier": {
    "AircraftBodyType": "harry's test",
    "AircraftVersion": "harry's test",
    "CodeRequired": "harry's test",
    "FleetNumber": "harry's test",
    "GeneralTypeCode": "harry's test",
    "GroupCode": "harry's test",
    "IATASubtypeCode": "harry's test",
    "IATATypeCode": "harry's test",
    "ICAOTypeCode": "harry's test",
    "Registration": "harry's test"
  },
  "AircraftDescription": "harry's test",
  "EarliestDeliveryDateTime": "harry's test",
  "FutureMaximumTakeOffWeight": "harry's test",
  "LatestDeliveryDateTime": "harry's test",
  "Mode": "harry's test",
  "NoiseCertificationIndicator": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "StandChangeIndicator": "harry's test"
}
flight-plan.tsx:122
Array [ "AircraftTransport", "GuidanceRequired" ]
 
Array [ "GuidanceRequired" ]
 
Array [ "AircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "GuidanceRequired": ""
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftTransportType": {
    "WakeTurbulenceCategory": {
      "Code": "harry's test",
      "Description": "harry's test"
    },
    "IATASubtypeCode": "harry's test",
    "IATATypeCode": "harry's test",
    "ICAOTypeCode": "harry's test"
  },
  "AircraftTransportEquipment": {
    "AircraftTransportEquipmentCategory": {
      "Description": "harry's test",
      "Identifier": "harry's test"
    },
    "AircraftTransportEquipmentType": {
      "Description": "harry's test",
      "Identifier": "harry's test"
    },
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Mode": "harry's test"
  },
  "AircraftTransportCabinConfiguration": {
    "Cabin": "harry's test",
    "CabinClassType": "harry's test",
    "CabinType": "harry's test",
    "Compartment": "harry's test",
    "SeatCapacity": "harry's test",
    "SeatCount": "harry's test",
    "Status": "harry's test"
  },
  "AircraftTransportIdentification": {
    "AircraftAddress": "harry's test",
    "AircraftBodyType": "harry's test",
    "AircraftVersion": "harry's test",
    "CodeRequired": "harry's test",
    "FleetNumber": "harry's test",
    "GeneralTypeCode": "harry's test",
    "GroupCode": "harry's test",
    "OtherIdentifier": "harry's test",
    "Registration": "harry's test"
  },
  "AircraftTransportLoad": {
    "PassengerPartyCarried": {
      "TotalPassengerCount": 1.1,
      "PassengerTypes": [
        {
          "PassengerType": {
            "PassengerTypeCount": 1.1,
            "PassengerType": "harry's test"
          }
        }
      ]
    },
    "BagItemCarried": {
      "BagTypeCount": 1.1,
      "BagTypeWeight": 1.1,
      "TotalCount": 1.1,
      "TotalWeight": 1.1,
      "BagTypes": [
        {
          "BagCode": "harry's test",
          "BagDescription": "harry's test"
        }
      ]
    },
    "CargoItemCarried": {
      "CargoTypeCount": 1.1,
      "CargoTypeWeight": 1.1,
      "TotalCount": 1.1,
      "TotalWeight": 1.1,
      "CargoTypes": [
        {
          "CargoCode": "harry's test",
          "CargoDescription": "harry's test"
        }
      ],
      "SpecialCargo": "harry's test"
    },
    "MailItemCarried": {
      "TotalWeight": 1.1,
      "MailTypes": [
        {
          "MailCode": "harry's test",
          "MailDescription": "harry's test"
        }
      ]
    },
    "CrewPartyCarried": {
      "CrewCount": 1.1,
      "CrewTypes": [
        {
          "CrewTypeCount": 1.1,
          "CrewType": "harry's test"
        }
      ]
    },
    "BallastWeight": "harry's test",
    "DeadLoad": "harry's test"
  },
  "AircraftTransportIdentifier": {
    "AircraftBodyType": "harry's test",
    "AircraftVersion": "harry's test",
    "CodeRequired": "harry's test",
    "FleetNumber": "harry's test",
    "GeneralTypeCode": "harry's test",
    "GroupCode": "harry's test",
    "IATASubtypeCode": "harry's test",
    "IATATypeCode": "harry's test",
    "ICAOTypeCode": "harry's test",
    "Registration": "harry's test"
  },
  "AircraftDescription": "harry's test",
  "EarliestDeliveryDateTime": "harry's test",
  "FutureMaximumTakeOffWeight": "harry's test",
  "LatestDeliveryDateTime": "harry's test",
  "Mode": "harry's test",
  "NoiseCertificationIndicator": "harry's test",
  "StandChangeIndicator": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "GuidanceRequired": ""
}
flight-plan.tsx:122
Array [ "AircraftTransport", "VehicleRequired" ]
 
Array [ "VehicleRequired" ]
 
Array [ "AircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AircraftTransport": {
    "VehicleRequired": ""
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftTransportType": {
    "WakeTurbulenceCategory": {
      "Code": "harry's test",
      "Description": "harry's test"
    },
    "IATASubtypeCode": "harry's test",
    "IATATypeCode": "harry's test",
    "ICAOTypeCode": "harry's test"
  },
  "AircraftTransportEquipment": {
    "AircraftTransportEquipmentCategory": {
      "Description": "harry's test",
      "Identifier": "harry's test"
    },
    "AircraftTransportEquipmentType": {
      "Description": "harry's test",
      "Identifier": "harry's test"
    },
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Mode": "harry's test"
  },
  "AircraftTransportCabinConfiguration": {
    "Cabin": "harry's test",
    "CabinClassType": "harry's test",
    "CabinType": "harry's test",
    "Compartment": "harry's test",
    "SeatCapacity": "harry's test",
    "SeatCount": "harry's test",
    "Status": "harry's test"
  },
  "AircraftTransportIdentification": {
    "AircraftAddress": "harry's test",
    "AircraftBodyType": "harry's test",
    "AircraftVersion": "harry's test",
    "CodeRequired": "harry's test",
    "FleetNumber": "harry's test",
    "GeneralTypeCode": "harry's test",
    "GroupCode": "harry's test",
    "OtherIdentifier": "harry's test",
    "Registration": "harry's test"
  },
  "AircraftTransportLoad": {
    "PassengerPartyCarried": {
      "TotalPassengerCount": 1.1,
      "PassengerTypes": [
        {
          "PassengerType": {
            "PassengerTypeCount": 1.1,
            "PassengerType": "harry's test"
          }
        }
      ]
    },
    "BagItemCarried": {
      "BagTypeCount": 1.1,
      "BagTypeWeight": 1.1,
      "TotalCount": 1.1,
      "TotalWeight": 1.1,
      "BagTypes": [
        {
          "BagCode": "harry's test",
          "BagDescription": "harry's test"
        }
      ]
    },
    "CargoItemCarried": {
      "CargoTypeCount": 1.1,
      "CargoTypeWeight": 1.1,
      "TotalCount": 1.1,
      "TotalWeight": 1.1,
      "CargoTypes": [
        {
          "CargoCode": "harry's test",
          "CargoDescription": "harry's test"
        }
      ],
      "SpecialCargo": "harry's test"
    },
    "MailItemCarried": {
      "TotalWeight": 1.1,
      "MailTypes": [
        {
          "MailCode": "harry's test",
          "MailDescription": "harry's test"
        }
      ]
    },
    "CrewPartyCarried": {
      "CrewCount": 1.1,
      "CrewTypes": [
        {
          "CrewTypeCount": 1.1,
          "CrewType": "harry's test"
        }
      ]
    },
    "BallastWeight": "harry's test",
    "DeadLoad": "harry's test"
  },
  "AircraftTransportIdentifier": {
    "AircraftBodyType": "harry's test",
    "AircraftVersion": "harry's test",
    "CodeRequired": "harry's test",
    "FleetNumber": "harry's test",
    "GeneralTypeCode": "harry's test",
    "GroupCode": "harry's test",
    "IATASubtypeCode": "harry's test",
    "IATATypeCode": "harry's test",
    "ICAOTypeCode": "harry's test",
    "Registration": "harry's test"
  },
  "AircraftDescription": "harry's test",
  "EarliestDeliveryDateTime": "harry's test",
  "FutureMaximumTakeOffWeight": "harry's test",
  "LatestDeliveryDateTime": "harry's test",
  "Mode": "harry's test",
  "NoiseCertificationIndicator": "harry's test",
  "StandChangeIndicator": "harry's test",
  "GuidanceRequired": ""
}
flight-plan.tsx:121
objectToAdd {
  "VehicleRequired": ""
}
flight-plan.tsx:122
Array(3) [ "AirportFacility", "RunwayFacility", "RunwayIdentifier" ]
 
Array(3) [ "AirportFacility", "RunwayFacility", "RunwayIdentifier" ]
 
Array []
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "RunwayFacility": {
      "RunwayIdentifier": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange 
{
  "operatingAirline": {
    "iataCode": "harry's test",
    "icaoCode": "harry's test",
    "name": "harry's test"
  },
  "flightNumber": {
    "airlineCode": "harry's test",
    "trackNumber": "harry's test",
    "suffix": "harry's test"
  },
  "AircraftMovement": {
    "AircraftMovementStatus": {
      "Cancelled": "harry's test",
      "Cleared": "harry's test",
      "Code": "harry's test",
      "DeicingStatus": "harry's test",
      "Deleted": "harry's test",
      "OperationalStatus": "harry's test",
      "PublicStatus": "harry's test",
      "Regulated": "harry's test"
    },
    "AircraftMovementIdentification": {
      "AircraftMovementCodeShare": {
        "Number": "harry's test",
        "ShowToPublic": ""
      },
      "AirTrafficControlCallsign": "harry's test",
      "DisplayedIdentifier": "harry's test",
      "IATAFlightNumber": "harry's test",
      "IATAOperatorIdentifier": "harry's test",
      "ICAOIdentifier": "harry's test",
      "ICAONumber": "harry's test…
flight-plan.tsx:121
objectToAdd {
  "AirportFacility": {
    "RunwayFacility": {
      "RunwayIdentifier": "harry's test"
    }
  }
}
flight-plan.tsx:122
Array(3) [ "AirportFacility", "StandFacility", "ArrivalStand" ]
 
Array [ "StandFacility", "ArrivalStand" ]
 
Array [ "AirportFacility" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "StandFacility": {
      "ArrivalStand": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "RunwayFacility": {
    "RunwayIdentifier": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "StandFacility": {
    "ArrivalStand": "harry's test"
  }
}
flight-plan.tsx:122
Array(3) [ "AirportFacility", "StandFacility", "ProvisionalStandNumber" ]
 
Array [ "ProvisionalStandNumber" ]
 
Array [ "AirportFacility", "StandFacility" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "StandFacility": {
      "ProvisionalStandNumber": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "ArrivalStand": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ProvisionalStandNumber": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AirportFacility", "StandFacility", "StandHoldConflictingStand" ]
 
Array [ "StandHoldConflictingStand" ]
 
Array [ "AirportFacility", "StandFacility" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "StandFacility": {
      "StandHoldConflictingStand": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "ArrivalStand": "harry's test",
  "ProvisionalStandNumber": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "StandHoldConflictingStand": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AirportFacility", "StandFacility", "StandLocation" ]
 
Array [ "StandLocation" ]
 
Array [ "AirportFacility", "StandFacility" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "StandFacility": {
      "StandLocation": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "ArrivalStand": "harry's test",
  "ProvisionalStandNumber": "harry's test",
  "StandHoldConflictingStand": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "StandLocation": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AirportFacility", "StandFacility", "StandNumber" ]
 
Array [ "StandNumber" ]
 
Array [ "AirportFacility", "StandFacility" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "StandFacility": {
      "StandNumber": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "ArrivalStand": "harry's test",
  "ProvisionalStandNumber": "harry's test",
  "StandHoldConflictingStand": "harry's test",
  "StandLocation": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "StandNumber": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AirportFacility", "StandFacility", "StandType" ]
 
Array [ "StandType" ]
 
Array [ "AirportFacility", "StandFacility" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "StandFacility": {
      "StandType": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "ArrivalStand": "harry's test",
  "ProvisionalStandNumber": "harry's test",
  "StandHoldConflictingStand": "harry's test",
  "StandLocation": "harry's test",
  "StandNumber": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "StandType": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AirportFacility", "StandFacility", "CoachingIsRequired" ]
 
Array [ "CoachingIsRequired" ]
 
Array [ "AirportFacility", "StandFacility" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "StandFacility": {
      "CoachingIsRequired": ""
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "ArrivalStand": "harry's test",
  "ProvisionalStandNumber": "harry's test",
  "StandHoldConflictingStand": "harry's test",
  "StandLocation": "harry's test",
  "StandNumber": "harry's test",
  "StandType": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "CoachingIsRequired": ""
}
flight-plan.tsx:122
Array(3) [ "AirportFacility", "StandFacility", "StandHoldRequired" ]
 
Array [ "StandHoldRequired" ]
 
Array [ "AirportFacility", "StandFacility" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "StandFacility": {
      "StandHoldRequired": ""
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "ArrivalStand": "harry's test",
  "ProvisionalStandNumber": "harry's test",
  "StandHoldConflictingStand": "harry's test",
  "StandLocation": "harry's test",
  "StandNumber": "harry's test",
  "StandType": "harry's test",
  "CoachingIsRequired": ""
}
flight-plan.tsx:121
objectToAdd {
  "StandHoldRequired": ""
}
flight-plan.tsx:122
Array(4) [ "AirportFacility", "TerminalFacility", "CheckinZoneFacility", "CheckinEndTime" ]
 
Array(3) [ "TerminalFacility", "CheckinZoneFacility", "CheckinEndTime" ]
 
Array [ "AirportFacility" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "TerminalFacility": {
      "CheckinZoneFacility": {
        "CheckinEndTime": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "RunwayFacility": {
    "RunwayIdentifier": "harry's test"
  },
  "StandFacility": {
    "ArrivalStand": "harry's test",
    "ProvisionalStandNumber": "harry's test",
    "StandHoldConflictingStand": "harry's test",
    "StandLocation": "harry's test",
    "StandNumber": "harry's test",
    "StandType": "harry's test",
    "CoachingIsRequired": "",
    "StandHoldRequired": ""
  }
}
flight-plan.tsx:121
objectToAdd {
  "TerminalFacility": {
    "CheckinZoneFacility": {
      "CheckinEndTime": "harry's test"
    }
  }
}
flight-plan.tsx:122
Array(4) [ "AirportFacility", "TerminalFacility", "CheckinZoneFacility", "CheckinStartTime" ]
 
Array [ "CheckinStartTime" ]
 
Array(3) [ "AirportFacility", "TerminalFacility", "CheckinZoneFacility" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "TerminalFacility": {
      "CheckinZoneFacility": {
        "CheckinStartTime": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "CheckinEndTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "CheckinStartTime": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "AirportFacility", "TerminalFacility", "CheckinZoneFacility", "CheckinStatus" ]
 
Array [ "CheckinStatus" ]
 
Array(3) [ "AirportFacility", "TerminalFacility", "CheckinZoneFacility" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "TerminalFacility": {
      "CheckinZoneFacility": {
        "CheckinStatus": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "CheckinEndTime": "harry's test",
  "CheckinStartTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "CheckinStatus": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "AirportFacility", "TerminalFacility", "CheckinZoneFacility", "CheckinZoneDescription" ]
 
Array [ "CheckinZoneDescription" ]
 
Array(3) [ "AirportFacility", "TerminalFacility", "CheckinZoneFacility" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "TerminalFacility": {
      "CheckinZoneFacility": {
        "CheckinZoneDescription": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "CheckinEndTime": "harry's test",
  "CheckinStartTime": "harry's test",
  "CheckinStatus": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "CheckinZoneDescription": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "AirportFacility", "TerminalFacility", "CheckinZoneFacility", "CheckinZoneIdentifier" ]
 
Array [ "CheckinZoneIdentifier" ]
 
Array(3) [ "AirportFacility", "TerminalFacility", "CheckinZoneFacility" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "TerminalFacility": {
      "CheckinZoneFacility": {
        "CheckinZoneIdentifier": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "CheckinEndTime": "harry's test",
  "CheckinStartTime": "harry's test",
  "CheckinStatus": "harry's test",
  "CheckinZoneDescription": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "CheckinZoneIdentifier": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "AirportFacility", "TerminalFacility", "BagItemDeliveryCarousel", "ActualFirstBagTime" ]
 
Array [ "BagItemDeliveryCarousel", "ActualFirstBagTime" ]
 
Array [ "AirportFacility", "TerminalFacility" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "TerminalFacility": {
      "BagItemDeliveryCarousel": {
        "ActualFirstBagTime": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "CheckinZoneFacility": {
    "CheckinEndTime": "harry's test",
    "CheckinStartTime": "harry's test",
    "CheckinStatus": "harry's test",
    "CheckinZoneDescription": "harry's test",
    "CheckinZoneIdentifier": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "BagItemDeliveryCarousel": {
    "ActualFirstBagTime": "harry's test"
  }
}
flight-plan.tsx:122
Array(4) [ "AirportFacility", "TerminalFacility", "BagItemDeliveryCarousel", "ActualLastBagTime" ]
 
Array [ "ActualLastBagTime" ]
 
Array(3) [ "AirportFacility", "TerminalFacility", "BagItemDeliveryCarousel" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "TerminalFacility": {
      "BagItemDeliveryCarousel": {
        "ActualLastBagTime": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "ActualFirstBagTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualLastBagTime": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "AirportFacility", "TerminalFacility", "BagItemDeliveryCarousel", "BaggageReclaimStatus" ]
 
Array [ "BaggageReclaimStatus" ]
 
Array(3) [ "AirportFacility", "TerminalFacility", "BagItemDeliveryCarousel" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "TerminalFacility": {
      "BagItemDeliveryCarousel": {
        "BaggageReclaimStatus": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "ActualFirstBagTime": "harry's test",
  "ActualLastBagTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "BaggageReclaimStatus": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "AirportFacility", "TerminalFacility", "BagItemDeliveryCarousel", "CarouselNumber" ]
 
Array [ "CarouselNumber" ]
 
Array(3) [ "AirportFacility", "TerminalFacility", "BagItemDeliveryCarousel" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "TerminalFacility": {
      "BagItemDeliveryCarousel": {
        "CarouselNumber": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "ActualFirstBagTime": "harry's test",
  "ActualLastBagTime": "harry's test",
  "BaggageReclaimStatus": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "CarouselNumber": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "AirportFacility", "TerminalFacility", "BagItemDeliveryCarousel", "ConveyorNumber" ]
 
Array [ "ConveyorNumber" ]
 
Array(3) [ "AirportFacility", "TerminalFacility", "BagItemDeliveryCarousel" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "TerminalFacility": {
      "BagItemDeliveryCarousel": {
        "ConveyorNumber": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "ActualFirstBagTime": "harry's test",
  "ActualLastBagTime": "harry's test",
  "BaggageReclaimStatus": "harry's test",
  "CarouselNumber": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ConveyorNumber": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "AirportFacility", "TerminalFacility", "BagItemDeliveryCarousel", "LegacyFIDSCheckinZone" ]
 
Array [ "LegacyFIDSCheckinZone" ]
 
Array(3) [ "AirportFacility", "TerminalFacility", "BagItemDeliveryCarousel" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "TerminalFacility": {
      "BagItemDeliveryCarousel": {
        "LegacyFIDSCheckinZone": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "ActualFirstBagTime": "harry's test",
  "ActualLastBagTime": "harry's test",
  "BaggageReclaimStatus": "harry's test",
  "CarouselNumber": "harry's test",
  "ConveyorNumber": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "LegacyFIDSCheckinZone": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "AirportFacility", "TerminalFacility", "BagItemDeliveryCarousel", "SecondaryCarouselNumber" ]
 
Array [ "SecondaryCarouselNumber" ]
 
Array(3) [ "AirportFacility", "TerminalFacility", "BagItemDeliveryCarousel" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "TerminalFacility": {
      "BagItemDeliveryCarousel": {
        "SecondaryCarouselNumber": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "ActualFirstBagTime": "harry's test",
  "ActualLastBagTime": "harry's test",
  "BaggageReclaimStatus": "harry's test",
  "CarouselNumber": "harry's test",
  "ConveyorNumber": "harry's test",
  "LegacyFIDSCheckinZone": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "SecondaryCarouselNumber": "harry's test"
}
flight-plan.tsx:122
Array(5) [ "AirportFacility", "TerminalFacility", "GateFacility", "GateFacilityIdentification", "Identifier" ]
 
Array(3) [ "GateFacility", "GateFacilityIdentification", "Identifier" ]
 
Array [ "AirportFacility", "TerminalFacility" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "TerminalFacility": {
      "GateFacility": {
        "GateFacilityIdentification": {
          "Identifier": "harry's test"
        }
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "CheckinZoneFacility": {
    "CheckinEndTime": "harry's test",
    "CheckinStartTime": "harry's test",
    "CheckinStatus": "harry's test",
    "CheckinZoneDescription": "harry's test",
    "CheckinZoneIdentifier": "harry's test"
  },
  "BagItemDeliveryCarousel": {
    "ActualFirstBagTime": "harry's test",
    "ActualLastBagTime": "harry's test",
    "BaggageReclaimStatus": "harry's test",
    "CarouselNumber": "harry's test",
    "ConveyorNumber": "harry's test",
    "LegacyFIDSCheckinZone": "harry's test",
    "SecondaryCarouselNumber": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "GateFacility": {
    "GateFacilityIdentification": {
      "Identifier": "harry's test"
    }
  }
}
flight-plan.tsx:122
Array(5) [ "AirportFacility", "TerminalFacility", "GateFacility", "StaffReadinessStatus", "StaffReadyForGateControl" ]
 
Array [ "StaffReadinessStatus", "StaffReadyForGateControl" ]
 
Array(3) [ "AirportFacility", "TerminalFacility", "GateFacility" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "TerminalFacility": {
      "GateFacility": {
        "StaffReadinessStatus": {
          "StaffReadyForGateControl": ""
        }
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "GateFacilityIdentification": {
    "Identifier": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "StaffReadinessStatus": {
    "StaffReadyForGateControl": ""
  }
}
flight-plan.tsx:122
Array(5) [ "AirportFacility", "TerminalFacility", "GateFacility", "GateFacilityOperationalTimes", "ActualGateCloseTime" ]
 
Array [ "GateFacilityOperationalTimes", "ActualGateCloseTime" ]
 
Array(3) [ "AirportFacility", "TerminalFacility", "GateFacility" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "TerminalFacility": {
      "GateFacility": {
        "GateFacilityOperationalTimes": {
          "ActualGateCloseTime": "harry's test"
        }
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "GateFacilityIdentification": {
    "Identifier": "harry's test"
  },
  "StaffReadinessStatus": {
    "StaffReadyForGateControl": ""
  }
}
flight-plan.tsx:121
objectToAdd {
  "GateFacilityOperationalTimes": {
    "ActualGateCloseTime": "harry's test"
  }
}
flight-plan.tsx:122
Array(5) [ "AirportFacility", "TerminalFacility", "GateFacility", "GateFacilityOperationalTimes", "ActualGateOpenTime" ]
 
Array [ "ActualGateOpenTime" ]
 
Array(4) [ "AirportFacility", "TerminalFacility", "GateFacility", "GateFacilityOperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "TerminalFacility": {
      "GateFacility": {
        "GateFacilityOperationalTimes": {
          "ActualGateOpenTime": "harry's test"
        }
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "ActualGateCloseTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualGateOpenTime": "harry's test"
}
flight-plan.tsx:122
Array(5) [ "AirportFacility", "TerminalFacility", "GateFacility", "GateFacilityOperationalTimes", "GatingDueDateTime" ]
 
Array [ "GatingDueDateTime" ]
 
Array(4) [ "AirportFacility", "TerminalFacility", "GateFacility", "GateFacilityOperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "TerminalFacility": {
      "GateFacility": {
        "GateFacilityOperationalTimes": {
          "GatingDueDateTime": "harry's test"
        }
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "ActualGateCloseTime": "harry's test",
  "ActualGateOpenTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "GatingDueDateTime": "harry's test"
}
flight-plan.tsx:122
Array(5) [ "AirportFacility", "TerminalFacility", "GateFacility", "GateFacilityOperationalTimes", "PlannedGateOpenTime" ]
 
Array [ "PlannedGateOpenTime" ]
 
Array(4) [ "AirportFacility", "TerminalFacility", "GateFacility", "GateFacilityOperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "TerminalFacility": {
      "GateFacility": {
        "GateFacilityOperationalTimes": {
          "PlannedGateOpenTime": "harry's test"
        }
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "ActualGateCloseTime": "harry's test",
  "ActualGateOpenTime": "harry's test",
  "GatingDueDateTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "PlannedGateOpenTime": "harry's test"
}
flight-plan.tsx:122
Array(5) [ "AirportFacility", "TerminalFacility", "GateFacility", "PassengerBoardingStatus", "StatusAtGate" ]
 
Array [ "PassengerBoardingStatus", "StatusAtGate" ]
 
Array(3) [ "AirportFacility", "TerminalFacility", "GateFacility" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "TerminalFacility": {
      "GateFacility": {
        "PassengerBoardingStatus": {
          "StatusAtGate": "harry's test"
        }
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "GateFacilityIdentification": {
    "Identifier": "harry's test"
  },
  "StaffReadinessStatus": {
    "StaffReadyForGateControl": ""
  },
  "GateFacilityOperationalTimes": {
    "ActualGateCloseTime": "harry's test",
    "ActualGateOpenTime": "harry's test",
    "GatingDueDateTime": "harry's test",
    "PlannedGateOpenTime": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "PassengerBoardingStatus": {
    "StatusAtGate": "harry's test"
  }
}
flight-plan.tsx:122
Array(5) [ "AirportFacility", "TerminalFacility", "GateFacility", "PassengerGateInstruction", "GoToPassportControl" ]
 
Array [ "PassengerGateInstruction", "GoToPassportControl" ]
 
Array(3) [ "AirportFacility", "TerminalFacility", "GateFacility" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "TerminalFacility": {
      "GateFacility": {
        "PassengerGateInstruction": {
          "GoToPassportControl": "harry's test"
        }
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "GateFacilityIdentification": {
    "Identifier": "harry's test"
  },
  "StaffReadinessStatus": {
    "StaffReadyForGateControl": ""
  },
  "GateFacilityOperationalTimes": {
    "ActualGateCloseTime": "harry's test",
    "ActualGateOpenTime": "harry's test",
    "GatingDueDateTime": "harry's test",
    "PlannedGateOpenTime": "harry's test"
  },
  "PassengerBoardingStatus": {
    "StatusAtGate": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "PassengerGateInstruction": {
    "GoToPassportControl": "harry's test"
  }
}
flight-plan.tsx:122
Array(5) [ "AirportFacility", "TerminalFacility", "GateFacility", "PierFacility", "Description" ]
 
Array [ "PierFacility", "Description" ]
 
Array(3) [ "AirportFacility", "TerminalFacility", "GateFacility" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "TerminalFacility": {
      "GateFacility": {
        "PierFacility": {
          "Description": "harry's test"
        }
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "GateFacilityIdentification": {
    "Identifier": "harry's test"
  },
  "StaffReadinessStatus": {
    "StaffReadyForGateControl": ""
  },
  "GateFacilityOperationalTimes": {
    "ActualGateCloseTime": "harry's test",
    "ActualGateOpenTime": "harry's test",
    "GatingDueDateTime": "harry's test",
    "PlannedGateOpenTime": "harry's test"
  },
  "PassengerBoardingStatus": {
    "StatusAtGate": "harry's test"
  },
  "PassengerGateInstruction": {
    "GoToPassportControl": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "PierFacility": {
    "Description": "harry's test"
  }
}
flight-plan.tsx:122
Array(5) [ "AirportFacility", "TerminalFacility", "GateFacility", "PierFacility", "Identifier" ]
 
Array [ "Identifier" ]
 
Array(4) [ "AirportFacility", "TerminalFacility", "GateFacility", "PierFacility" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "TerminalFacility": {
      "GateFacility": {
        "PierFacility": {
          "Identifier": "harry's test"
        }
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Description": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Identifier": "harry's test"
}
flight-plan.tsx:122
Array(5) [ "AirportFacility", "TerminalFacility", "GateFacility", "AirJetty", "AirJettyHireCode" ]
 
Array [ "AirJetty", "AirJettyHireCode" ]
 
Array(3) [ "AirportFacility", "TerminalFacility", "GateFacility" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "TerminalFacility": {
      "GateFacility": {
        "AirJetty": {
          "AirJettyHireCode": "harry's test"
        }
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "GateFacilityIdentification": {
    "Identifier": "harry's test"
  },
  "StaffReadinessStatus": {
    "StaffReadyForGateControl": ""
  },
  "GateFacilityOperationalTimes": {
    "ActualGateCloseTime": "harry's test",
    "ActualGateOpenTime": "harry's test",
    "GatingDueDateTime": "harry's test",
    "PlannedGateOpenTime": "harry's test"
  },
  "PassengerBoardingStatus": {
    "StatusAtGate": "harry's test"
  },
  "PassengerGateInstruction": {
    "GoToPassportControl": "harry's test"
  },
  "PierFacility": {
    "Description": "harry's test",
    "Identifier": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "AirJetty": {
    "AirJettyHireCode": "harry's test"
  }
}
flight-plan.tsx:122
Array(5) [ "AirportFacility", "TerminalFacility", "GateFacility", "AirJetty", "AirJettyType" ]
 
Array [ "AirJettyType" ]
 
Array(4) [ "AirportFacility", "TerminalFacility", "GateFacility", "AirJetty" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "TerminalFacility": {
      "GateFacility": {
        "AirJetty": {
          "AirJettyType": "harry's test"
        }
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AirJettyHireCode": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "AirJettyType": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "AirportFacility", "TerminalFacility", "GateFacility", "GeneralRemarks" ]
 
Array [ "GeneralRemarks" ]
 
Array(3) [ "AirportFacility", "TerminalFacility", "GateFacility" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "TerminalFacility": {
      "GateFacility": {
        "GeneralRemarks": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "GateFacilityIdentification": {
    "Identifier": "harry's test"
  },
  "StaffReadinessStatus": {
    "StaffReadyForGateControl": ""
  },
  "GateFacilityOperationalTimes": {
    "ActualGateCloseTime": "harry's test",
    "ActualGateOpenTime": "harry's test",
    "GatingDueDateTime": "harry's test",
    "PlannedGateOpenTime": "harry's test"
  },
  "PassengerBoardingStatus": {
    "StatusAtGate": "harry's test"
  },
  "PassengerGateInstruction": {
    "GoToPassportControl": "harry's test"
  },
  "PierFacility": {
    "Description": "harry's test",
    "Identifier": "harry's test"
  },
  "AirJetty": {
    "AirJettyHireCode": "harry's test",
    "AirJettyType": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "GeneralRemarks": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "AirportFacility", "TerminalFacility", "GateFacility", "PreviousGate" ]
 
Array [ "PreviousGate" ]
 
Array(3) [ "AirportFacility", "TerminalFacility", "GateFacility" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "TerminalFacility": {
      "GateFacility": {
        "PreviousGate": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "GateFacilityIdentification": {
    "Identifier": "harry's test"
  },
  "StaffReadinessStatus": {
    "StaffReadyForGateControl": ""
  },
  "GateFacilityOperationalTimes": {
    "ActualGateCloseTime": "harry's test",
    "ActualGateOpenTime": "harry's test",
    "GatingDueDateTime": "harry's test",
    "PlannedGateOpenTime": "harry's test"
  },
  "PassengerBoardingStatus": {
    "StatusAtGate": "harry's test"
  },
  "PassengerGateInstruction": {
    "GoToPassportControl": "harry's test"
  },
  "PierFacility": {
    "Description": "harry's test",
    "Identifier": "harry's test"
  },
  "AirJetty": {
    "AirJettyHireCode": "harry's test",
    "AirJettyType": "harry's test"
  },
  "GeneralRemarks": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "PreviousGate": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "AirportFacility", "TerminalFacility", "GateFacility", "RemoteOperationGate" ]
 
Array [ "RemoteOperationGate" ]
 
Array(3) [ "AirportFacility", "TerminalFacility", "GateFacility" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "TerminalFacility": {
      "GateFacility": {
        "RemoteOperationGate": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "GateFacilityIdentification": {
    "Identifier": "harry's test"
  },
  "StaffReadinessStatus": {
    "StaffReadyForGateControl": ""
  },
  "GateFacilityOperationalTimes": {
    "ActualGateCloseTime": "harry's test",
    "ActualGateOpenTime": "harry's test",
    "GatingDueDateTime": "harry's test",
    "PlannedGateOpenTime": "harry's test"
  },
  "PassengerBoardingStatus": {
    "StatusAtGate": "harry's test"
  },
  "PassengerGateInstruction": {
    "GoToPassportControl": "harry's test"
  },
  "PierFacility": {
    "Description": "harry's test",
    "Identifier": "harry's test"
  },
  "AirJetty": {
    "AirJettyHireCode": "harry's test",
    "AirJettyType": "harry's test"
  },
  "GeneralRemarks": "harry's test",
  "PreviousGate": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "RemoteOperationGate": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "AirportFacility", "TerminalFacility", "GateFacility", "SecondaryGateNumber" ]
 
Array [ "SecondaryGateNumber" ]
 
Array(3) [ "AirportFacility", "TerminalFacility", "GateFacility" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "TerminalFacility": {
      "GateFacility": {
        "SecondaryGateNumber": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "GateFacilityIdentification": {
    "Identifier": "harry's test"
  },
  "StaffReadinessStatus": {
    "StaffReadyForGateControl": ""
  },
  "GateFacilityOperationalTimes": {
    "ActualGateCloseTime": "harry's test",
    "ActualGateOpenTime": "harry's test",
    "GatingDueDateTime": "harry's test",
    "PlannedGateOpenTime": "harry's test"
  },
  "PassengerBoardingStatus": {
    "StatusAtGate": "harry's test"
  },
  "PassengerGateInstruction": {
    "GoToPassportControl": "harry's test"
  },
  "PierFacility": {
    "Description": "harry's test",
    "Identifier": "harry's test"
  },
  "AirJetty": {
    "AirJettyHireCode": "harry's test",
    "AirJettyType": "harry's test"
  },
  "GeneralRemarks": "harry's test",
  "PreviousGate": "harry's test",
  "RemoteOperationGate": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "SecondaryGateNumber": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AirportFacility", "TerminalFacility", "Code" ]
 
Array [ "Code" ]
 
Array [ "AirportFacility", "TerminalFacility" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "TerminalFacility": {
      "Code": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "CheckinZoneFacility": {
    "CheckinEndTime": "harry's test",
    "CheckinStartTime": "harry's test",
    "CheckinStatus": "harry's test",
    "CheckinZoneDescription": "harry's test",
    "CheckinZoneIdentifier": "harry's test"
  },
  "BagItemDeliveryCarousel": {
    "ActualFirstBagTime": "harry's test",
    "ActualLastBagTime": "harry's test",
    "BaggageReclaimStatus": "harry's test",
    "CarouselNumber": "harry's test",
    "ConveyorNumber": "harry's test",
    "LegacyFIDSCheckinZone": "harry's test",
    "SecondaryCarouselNumber": "harry's test"
  },
  "GateFacility": {
    "GateFacilityIdentification": {
      "Identifier": "harry's test"
    },
    "StaffReadinessStatus": {
      "StaffReadyForGateControl": ""
    },
    "GateFacilityOperationalTimes": {
      "ActualGateCloseTime": "harry's test",
      "ActualGateOpenTime": "harry's test",
      "GatingDueDateTime": "harry's test",
      "PlannedGateOpenTime": "harry's test"
    },
    "PassengerBoardingStatus": {
      "StatusAtGate": "harry's test"
    },
    "PassengerGateInstruction": {
      "GoToPassportControl": "harry's test"
    },
    "PierFacility": {
      "Description": "harry's test",
      "Identifier": "harry's test"
    },
    "AirJetty": {
      "AirJettyHireCode": "harry's test",
      "AirJettyType": "harry's test"
    },
    "GeneralRemarks": "harry's test",
    "PreviousGate": "harry's test",
    "RemoteOperationGate": "harry's test",
    "SecondaryGateNumber": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "Code": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "AirportFacility", "TerminalFacility", "Description" ]
 
Array [ "Description" ]
 
Array [ "AirportFacility", "TerminalFacility" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "TerminalFacility": {
      "Description": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "CheckinZoneFacility": {
    "CheckinEndTime": "harry's test",
    "CheckinStartTime": "harry's test",
    "CheckinStatus": "harry's test",
    "CheckinZoneDescription": "harry's test",
    "CheckinZoneIdentifier": "harry's test"
  },
  "BagItemDeliveryCarousel": {
    "ActualFirstBagTime": "harry's test",
    "ActualLastBagTime": "harry's test",
    "BaggageReclaimStatus": "harry's test",
    "CarouselNumber": "harry's test",
    "ConveyorNumber": "harry's test",
    "LegacyFIDSCheckinZone": "harry's test",
    "SecondaryCarouselNumber": "harry's test"
  },
  "GateFacility": {
    "GateFacilityIdentification": {
      "Identifier": "harry's test"
    },
    "StaffReadinessStatus": {
      "StaffReadyForGateControl": ""
    },
    "GateFacilityOperationalTimes": {
      "ActualGateCloseTime": "harry's test",
      "ActualGateOpenTime": "harry's test",
      "GatingDueDateTime": "harry's test",
      "PlannedGateOpenTime": "harry's test"
    },
    "PassengerBoardingStatus": {
      "StatusAtGate": "harry's test"
    },
    "PassengerGateInstruction": {
      "GoToPassportControl": "harry's test"
    },
    "PierFacility": {
      "Description": "harry's test",
      "Identifier": "harry's test"
    },
    "AirJetty": {
      "AirJettyHireCode": "harry's test",
      "AirJettyType": "harry's test"
    },
    "GeneralRemarks": "harry's test",
    "PreviousGate": "harry's test",
    "RemoteOperationGate": "harry's test",
    "SecondaryGateNumber": "harry's test"
  },
  "Code": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Description": "harry's test"
}
flight-plan.tsx:122
Array [ "AirportFacility", "IATAIdentifier" ]
 
Array [ "IATAIdentifier" ]
 
Array [ "AirportFacility" ]
flight-plan.tsx:112
updateToFlightPlan {
  "AirportFacility": {
    "IATAIdentifier": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "RunwayFacility": {
    "RunwayIdentifier": "harry's test"
  },
  "StandFacility": {
    "ArrivalStand": "harry's test",
    "ProvisionalStandNumber": "harry's test",
    "StandHoldConflictingStand": "harry's test",
    "StandLocation": "harry's test",
    "StandNumber": "harry's test",
    "StandType": "harry's test",
    "CoachingIsRequired": "",
    "StandHoldRequired": ""
  },
  "TerminalFacility": {
    "CheckinZoneFacility": {
      "CheckinEndTime": "harry's test",
      "CheckinStartTime": "harry's test",
      "CheckinStatus": "harry's test",
      "CheckinZoneDescription": "harry's test",
      "CheckinZoneIdentifier": "harry's test"
    },
    "BagItemDeliveryCarousel": {
      "ActualFirstBagTime": "harry's test",
      "ActualLastBagTime": "harry's test",
      "BaggageReclaimStatus": "harry's test",
      "CarouselNumber": "harry's test",
      "ConveyorNumber": "harry's test",
      "LegacyFIDSCheckinZone": "harry's test",
      "SecondaryCarouselNumber": "harry's test"
    },
    "GateFacility": {
      "GateFacilityIdentification": {
        "Identifier": "harry's test"
      },
      "StaffReadinessStatus": {
        "StaffReadyForGateControl": ""
      },
      "GateFacilityOperationalTimes": {
        "ActualGateCloseTime": "harry's test",
        "ActualGateOpenTime": "harry's test",
        "GatingDueDateTime": "harry's test",
        "PlannedGateOpenTime": "harry's test"
      },
      "PassengerBoardingStatus": {
        "StatusAtGate": "harry's test"
      },
      "PassengerGateInstruction": {
        "GoToPassportControl": "harry's test"
      },
      "PierFacility": {
        "Description": "harry's test",
        "Identifier": "harry's test"
      },
      "AirJetty": {
        "AirJettyHireCode": "harry's test",
        "AirJettyType": "harry's test"
      },
      "GeneralRemarks": "harry's test",
      "PreviousGate": "harry's test",
      "RemoteOperationGate": "harry's test",
      "SecondaryGateNumber": "harry's test"
    },
    "Code": "harry's test",
    "Description": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "IATAIdentifier": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "Route", "RouteSegment", "Description" ]
 
Array(3) [ "Route", "RouteSegment", "Description" ]
 
Array []
flight-plan.tsx:112
updateToFlightPlan {
  "Route": {
    "RouteSegment": {
      "Description": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange 
{
  "operatingAirline": {
    "iataCode": "harry's test",
    "icaoCode": "harry's test",
    "name": "harry's test"
  },
  "flightNumber": {
    "airlineCode": "harry's test",
    "trackNumber": "harry's test",
    "suffix": "harry's test"
  },
  "AircraftMovement": {
    "AircraftMovementStatus": {
      "Cancelled": "harry's test",
      "Cleared": "harry's test",
      "Code": "harry's test",
      "DeicingStatus": "harry's test",
      "Deleted": "harry's test",
      "OperationalStatus": "harry's test",
      "PublicStatus": "harry's test",
      "Regulated": "harry's test"
    },
    "AircraftMovementIdentification": {
      "AircraftMovementCodeShare": {
        "Number": "harry's test",
        "ShowToPublic": ""
      },
      "AirTrafficControlCallsign": "harry's test",
      "DisplayedIdentifier": "harry's test",
      "IATAFlightNumber": "harry's test",
      "IATAOperatorIdentifier": "harry's test",
      "ICAOIdentifier": "harry's test",
      "ICAONumber": "harry's test…
flight-plan.tsx:121
objectToAdd {
  "Route": {
    "RouteSegment": {
      "Description": "harry's test"
    }
  }
}
flight-plan.tsx:122
Array(3) [ "Route", "RouteSegment", "Identifier" ]
 
Array [ "Identifier" ]
 
Array [ "Route", "RouteSegment" ]
flight-plan.tsx:112
updateToFlightPlan {
  "Route": {
    "RouteSegment": {
      "Identifier": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Description": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Identifier": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "Route", "RouteSegment", "RequestedFlightLevel" ]
 
Array [ "RequestedFlightLevel" ]
 
Array [ "Route", "RouteSegment" ]
flight-plan.tsx:112
updateToFlightPlan {
  "Route": {
    "RouteSegment": {
      "RequestedFlightLevel": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Description": "harry's test",
  "Identifier": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "RequestedFlightLevel": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "Route", "RouteSegment", "RequestedFlightLevelPoint" ]
 
Array [ "RequestedFlightLevelPoint" ]
 
Array [ "Route", "RouteSegment" ]
flight-plan.tsx:112
updateToFlightPlan {
  "Route": {
    "RouteSegment": {
      "RequestedFlightLevelPoint": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Description": "harry's test",
  "Identifier": "harry's test",
  "RequestedFlightLevel": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "RequestedFlightLevelPoint": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "Route", "RouteSegment", "TrueAirspeed" ]
 
Array [ "TrueAirspeed" ]
 
Array [ "Route", "RouteSegment" ]
flight-plan.tsx:112
updateToFlightPlan {
  "Route": {
    "RouteSegment": {
      "TrueAirspeed": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Description": "harry's test",
  "Identifier": "harry's test",
  "RequestedFlightLevel": "harry's test",
  "RequestedFlightLevelPoint": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "TrueAirspeed": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "Route", "RouteSegment", "TrueAirspeedPoint" ]
 
Array [ "TrueAirspeedPoint" ]
 
Array [ "Route", "RouteSegment" ]
flight-plan.tsx:112
updateToFlightPlan {
  "Route": {
    "RouteSegment": {
      "TrueAirspeedPoint": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Description": "harry's test",
  "Identifier": "harry's test",
  "RequestedFlightLevel": "harry's test",
  "RequestedFlightLevelPoint": "harry's test",
  "TrueAirspeed": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "TrueAirspeedPoint": "harry's test"
}
flight-plan.tsx:122
Array [ "Route", "Description" ]
 
Array [ "Description" ]
 
Array [ "Route" ]
flight-plan.tsx:112
updateToFlightPlan {
  "Route": {
    "Description": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "RouteSegment": {
    "Description": "harry's test",
    "Identifier": "harry's test",
    "RequestedFlightLevel": "harry's test",
    "RequestedFlightLevelPoint": "harry's test",
    "TrueAirspeed": "harry's test",
    "TrueAirspeedPoint": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "Description": "harry's test"
}
flight-plan.tsx:122
Array [ "Route", "Identifier" ]
 
Array [ "Identifier" ]
 
Array [ "Route" ]
flight-plan.tsx:112
updateToFlightPlan {
  "Route": {
    "Identifier": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "RouteSegment": {
    "Description": "harry's test",
    "Identifier": "harry's test",
    "RequestedFlightLevel": "harry's test",
    "RequestedFlightLevelPoint": "harry's test",
    "TrueAirspeed": "harry's test",
    "TrueAirspeedPoint": "harry's test"
  },
  "Description": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Identifier": "harry's test"
}
flight-plan.tsx:122
Array [ "Route", "RequestedFlightLevel" ]
 
Array [ "RequestedFlightLevel" ]
 
Array [ "Route" ]
flight-plan.tsx:112
updateToFlightPlan {
  "Route": {
    "RequestedFlightLevel": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "RouteSegment": {
    "Description": "harry's test",
    "Identifier": "harry's test",
    "RequestedFlightLevel": "harry's test",
    "RequestedFlightLevelPoint": "harry's test",
    "TrueAirspeed": "harry's test",
    "TrueAirspeedPoint": "harry's test"
  },
  "Description": "harry's test",
  "Identifier": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "RequestedFlightLevel": "harry's test"
}
flight-plan.tsx:122
Array [ "Route", "RequestedFlightLevelPoint" ]
 
Array [ "RequestedFlightLevelPoint" ]
 
Array [ "Route" ]
flight-plan.tsx:112
updateToFlightPlan {
  "Route": {
    "RequestedFlightLevelPoint": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "RouteSegment": {
    "Description": "harry's test",
    "Identifier": "harry's test",
    "RequestedFlightLevel": "harry's test",
    "RequestedFlightLevelPoint": "harry's test",
    "TrueAirspeed": "harry's test",
    "TrueAirspeedPoint": "harry's test"
  },
  "Description": "harry's test",
  "Identifier": "harry's test",
  "RequestedFlightLevel": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "RequestedFlightLevelPoint": "harry's test"
}
flight-plan.tsx:122
Array [ "Route", "RouteInternationalDomestic" ]
 
Array [ "RouteInternationalDomestic" ]
 
Array [ "Route" ]
flight-plan.tsx:112
updateToFlightPlan {
  "Route": {
    "RouteInternationalDomestic": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "RouteSegment": {
    "Description": "harry's test",
    "Identifier": "harry's test",
    "RequestedFlightLevel": "harry's test",
    "RequestedFlightLevelPoint": "harry's test",
    "TrueAirspeed": "harry's test",
    "TrueAirspeedPoint": "harry's test"
  },
  "Description": "harry's test",
  "Identifier": "harry's test",
  "RequestedFlightLevel": "harry's test",
  "RequestedFlightLevelPoint": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "RouteInternationalDomestic": "harry's test"
}
flight-plan.tsx:122
Array [ "Route", "RouteText" ]
 
Array [ "RouteText" ]
 
Array [ "Route" ]
flight-plan.tsx:112
updateToFlightPlan {
  "Route": {
    "RouteText": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "RouteSegment": {
    "Description": "harry's test",
    "Identifier": "harry's test",
    "RequestedFlightLevel": "harry's test",
    "RequestedFlightLevelPoint": "harry's test",
    "TrueAirspeed": "harry's test",
    "TrueAirspeedPoint": "harry's test"
  },
  "Description": "harry's test",
  "Identifier": "harry's test",
  "RequestedFlightLevel": "harry's test",
  "RequestedFlightLevelPoint": "harry's test",
  "RouteInternationalDomestic": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "RouteText": "harry's test"
}
flight-plan.tsx:122
Array [ "Route", "StandardInstrumentDeparture" ]
 
Array [ "StandardInstrumentDeparture" ]
 
Array [ "Route" ]
flight-plan.tsx:112
updateToFlightPlan {
  "Route": {
    "StandardInstrumentDeparture": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "RouteSegment": {
    "Description": "harry's test",
    "Identifier": "harry's test",
    "RequestedFlightLevel": "harry's test",
    "RequestedFlightLevelPoint": "harry's test",
    "TrueAirspeed": "harry's test",
    "TrueAirspeedPoint": "harry's test"
  },
  "Description": "harry's test",
  "Identifier": "harry's test",
  "RequestedFlightLevel": "harry's test",
  "RequestedFlightLevelPoint": "harry's test",
  "RouteInternationalDomestic": "harry's test",
  "RouteText": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "StandardInstrumentDeparture": "harry's test"
}
flight-plan.tsx:122
Array [ "Route", "TrueAirspeed" ]
 
Array [ "TrueAirspeed" ]
 
Array [ "Route" ]
flight-plan.tsx:112
updateToFlightPlan {
  "Route": {
    "TrueAirspeed": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "RouteSegment": {
    "Description": "harry's test",
    "Identifier": "harry's test",
    "RequestedFlightLevel": "harry's test",
    "RequestedFlightLevelPoint": "harry's test",
    "TrueAirspeed": "harry's test",
    "TrueAirspeedPoint": "harry's test"
  },
  "Description": "harry's test",
  "Identifier": "harry's test",
  "RequestedFlightLevel": "harry's test",
  "RequestedFlightLevelPoint": "harry's test",
  "RouteInternationalDomestic": "harry's test",
  "RouteText": "harry's test",
  "StandardInstrumentDeparture": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "TrueAirspeed": "harry's test"
}
flight-plan.tsx:122
Array [ "Route", "TrueAirspeedPoint" ]
 
Array [ "TrueAirspeedPoint" ]
 
Array [ "Route" ]
flight-plan.tsx:112
updateToFlightPlan {
  "Route": {
    "TrueAirspeedPoint": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "RouteSegment": {
    "Description": "harry's test",
    "Identifier": "harry's test",
    "RequestedFlightLevel": "harry's test",
    "RequestedFlightLevelPoint": "harry's test",
    "TrueAirspeed": "harry's test",
    "TrueAirspeedPoint": "harry's test"
  },
  "Description": "harry's test",
  "Identifier": "harry's test",
  "RequestedFlightLevel": "harry's test",
  "RequestedFlightLevelPoint": "harry's test",
  "RouteInternationalDomestic": "harry's test",
  "RouteText": "harry's test",
  "StandardInstrumentDeparture": "harry's test",
  "TrueAirspeed": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "TrueAirspeedPoint": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "ScheduledAircraftMovement", "ScheduledAircraftMovementStatus", 0, "Code" ]
 
Array(4) [ "ScheduledAircraftMovement", "ScheduledAircraftMovementStatus", 0, "Code" ]
 
Array []
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledAircraftMovement": {
    "ScheduledAircraftMovementStatus": [
      {
        "Code": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange 
{
  "operatingAirline": {
    "iataCode": "harry's test",
    "icaoCode": "harry's test",
    "name": "harry's test"
  },
  "flightNumber": {
    "airlineCode": "harry's test",
    "trackNumber": "harry's test",
    "suffix": "harry's test"
  },
  "AircraftMovement": {
    "AircraftMovementStatus": {
      "Cancelled": "harry's test",
      "Cleared": "harry's test",
      "Code": "harry's test",
      "DeicingStatus": "harry's test",
      "Deleted": "harry's test",
      "OperationalStatus": "harry's test",
      "PublicStatus": "harry's test",
      "Regulated": "harry's test"
    },
    "AircraftMovementIdentification": {
      "AircraftMovementCodeShare": {
        "Number": "harry's test",
        "ShowToPublic": ""
      },
      "AirTrafficControlCallsign": "harry's test",
      "DisplayedIdentifier": "harry's test",
      "IATAFlightNumber": "harry's test",
      "IATAOperatorIdentifier": "harry's test",
      "ICAOIdentifier": "harry's test",
      "ICAONumber": "harry's test…
flight-plan.tsx:121
objectToAdd {
  "ScheduledAircraftMovement": {
    "ScheduledAircraftMovementStatus": [
      {
        "Code": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:122
Array(4) [ "ScheduledAircraftMovement", "ScheduledAircraftMovementStatus", 0, "Description" ]
 
Array [ 0, "Description" ]
 
Array [ "ScheduledAircraftMovement", "ScheduledAircraftMovementStatus" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledAircraftMovement": {
    "ScheduledAircraftMovementStatus": [
      {
        "Description": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "Code": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "Description": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledAircraftMovement", "ScheduledAircraftMovementIdentification", "AircraftMovementRuleType", "Code" ]
 
Array(3) [ "ScheduledAircraftMovementIdentification", "AircraftMovementRuleType", "Code" ]
 
Array [ "ScheduledAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledAircraftMovement": {
    "ScheduledAircraftMovementIdentification": {
      "AircraftMovementRuleType": {
        "Code": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "ScheduledAircraftMovementStatus": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ]
}
flight-plan.tsx:121
objectToAdd {
  "ScheduledAircraftMovementIdentification": {
    "AircraftMovementRuleType": {
      "Code": "harry's test"
    }
  }
}
flight-plan.tsx:122
Array(4) [ "ScheduledAircraftMovement", "ScheduledAircraftMovementIdentification", "AircraftMovementRuleType", "Description" ]
 
Array [ "Description" ]
 
Array(3) [ "ScheduledAircraftMovement", "ScheduledAircraftMovementIdentification", "AircraftMovementRuleType" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledAircraftMovement": {
    "ScheduledAircraftMovementIdentification": {
      "AircraftMovementRuleType": {
        "Description": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Code": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Description": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "ScheduledAircraftMovement", "ScheduledAircraftMovementIdentification", "AircraftMovementType", "Code" ]
 
Array [ "AircraftMovementType", "Code" ]
 
Array [ "ScheduledAircraftMovement", "ScheduledAircraftMovementIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledAircraftMovement": {
    "ScheduledAircraftMovementIdentification": {
      "AircraftMovementType": {
        "Code": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementRuleType": {
    "Code": "harry's test",
    "Description": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "AircraftMovementType": {
    "Code": "harry's test"
  }
}
flight-plan.tsx:122
Array(4) [ "ScheduledAircraftMovement", "ScheduledAircraftMovementIdentification", "AircraftMovementType", "Description" ]
 
Array [ "Description" ]
 
Array(3) [ "ScheduledAircraftMovement", "ScheduledAircraftMovementIdentification", "AircraftMovementType" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledAircraftMovement": {
    "ScheduledAircraftMovementIdentification": {
      "AircraftMovementType": {
        "Description": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Code": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Description": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "ScheduledAircraftMovement", "ScheduledAircraftMovementIdentification", "AirTrafficControlCallsign" ]
 
Array [ "AirTrafficControlCallsign" ]
 
Array [ "ScheduledAircraftMovement", "ScheduledAircraftMovementIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledAircraftMovement": {
    "ScheduledAircraftMovementIdentification": {
      "AirTrafficControlCallsign": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementRuleType": {
    "Code": "harry's test",
    "Description": "harry's test"
  },
  "AircraftMovementType": {
    "Code": "harry's test",
    "Description": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "AirTrafficControlCallsign": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "ScheduledAircraftMovement", "ScheduledAircraftMovementIdentification", "IATAFlightNumber" ]
 
Array [ "IATAFlightNumber" ]
 
Array [ "ScheduledAircraftMovement", "ScheduledAircraftMovementIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledAircraftMovement": {
    "ScheduledAircraftMovementIdentification": {
      "IATAFlightNumber": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementRuleType": {
    "Code": "harry's test",
    "Description": "harry's test"
  },
  "AircraftMovementType": {
    "Code": "harry's test",
    "Description": "harry's test"
  },
  "AirTrafficControlCallsign": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "IATAFlightNumber": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "ScheduledAircraftMovement", "ScheduledAircraftMovementIdentification", "IATAOperatorIdentifier" ]
 
Array [ "IATAOperatorIdentifier" ]
 
Array [ "ScheduledAircraftMovement", "ScheduledAircraftMovementIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledAircraftMovement": {
    "ScheduledAircraftMovementIdentification": {
      "IATAOperatorIdentifier": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementRuleType": {
    "Code": "harry's test",
    "Description": "harry's test"
  },
  "AircraftMovementType": {
    "Code": "harry's test",
    "Description": "harry's test"
  },
  "AirTrafficControlCallsign": "harry's test",
  "IATAFlightNumber": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "IATAOperatorIdentifier": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "ScheduledAircraftMovement", "ScheduledAircraftMovementIdentification", "ICAOIdentifier" ]
 
Array [ "ICAOIdentifier" ]
 
Array [ "ScheduledAircraftMovement", "ScheduledAircraftMovementIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledAircraftMovement": {
    "ScheduledAircraftMovementIdentification": {
      "ICAOIdentifier": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementRuleType": {
    "Code": "harry's test",
    "Description": "harry's test"
  },
  "AircraftMovementType": {
    "Code": "harry's test",
    "Description": "harry's test"
  },
  "AirTrafficControlCallsign": "harry's test",
  "IATAFlightNumber": "harry's test",
  "IATAOperatorIdentifier": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ICAOIdentifier": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "ScheduledAircraftMovement", "ScheduledAircraftMovementIdentification", "ICAONumber" ]
 
Array [ "ICAONumber" ]
 
Array [ "ScheduledAircraftMovement", "ScheduledAircraftMovementIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledAircraftMovement": {
    "ScheduledAircraftMovementIdentification": {
      "ICAONumber": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementRuleType": {
    "Code": "harry's test",
    "Description": "harry's test"
  },
  "AircraftMovementType": {
    "Code": "harry's test",
    "Description": "harry's test"
  },
  "AirTrafficControlCallsign": "harry's test",
  "IATAFlightNumber": "harry's test",
  "IATAOperatorIdentifier": "harry's test",
  "ICAOIdentifier": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ICAONumber": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "ScheduledAircraftMovement", "ScheduledAircraftMovementIdentification", "Identifier" ]
 
Array [ "Identifier" ]
 
Array [ "ScheduledAircraftMovement", "ScheduledAircraftMovementIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledAircraftMovement": {
    "ScheduledAircraftMovementIdentification": {
      "Identifier": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementRuleType": {
    "Code": "harry's test",
    "Description": "harry's test"
  },
  "AircraftMovementType": {
    "Code": "harry's test",
    "Description": "harry's test"
  },
  "AirTrafficControlCallsign": "harry's test",
  "IATAFlightNumber": "harry's test",
  "IATAOperatorIdentifier": "harry's test",
  "ICAOIdentifier": "harry's test",
  "ICAONumber": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Identifier": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "ScheduledAircraftMovement", "ScheduledAircraftMovementIdentification", "Number" ]
 
Array [ "Number" ]
 
Array [ "ScheduledAircraftMovement", "ScheduledAircraftMovementIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledAircraftMovement": {
    "ScheduledAircraftMovementIdentification": {
      "Number": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementRuleType": {
    "Code": "harry's test",
    "Description": "harry's test"
  },
  "AircraftMovementType": {
    "Code": "harry's test",
    "Description": "harry's test"
  },
  "AirTrafficControlCallsign": "harry's test",
  "IATAFlightNumber": "harry's test",
  "IATAOperatorIdentifier": "harry's test",
  "ICAOIdentifier": "harry's test",
  "ICAONumber": "harry's test",
  "Identifier": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Number": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "ScheduledAircraftMovement", "ScheduledAircraftMovementIdentification", "ScheduledDateTime" ]
 
Array [ "ScheduledDateTime" ]
 
Array [ "ScheduledAircraftMovement", "ScheduledAircraftMovementIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledAircraftMovement": {
    "ScheduledAircraftMovementIdentification": {
      "ScheduledDateTime": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementRuleType": {
    "Code": "harry's test",
    "Description": "harry's test"
  },
  "AircraftMovementType": {
    "Code": "harry's test",
    "Description": "harry's test"
  },
  "AirTrafficControlCallsign": "harry's test",
  "IATAFlightNumber": "harry's test",
  "IATAOperatorIdentifier": "harry's test",
  "ICAOIdentifier": "harry's test",
  "ICAONumber": "harry's test",
  "Identifier": "harry's test",
  "Number": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ScheduledDateTime": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "ScheduledAircraftMovement", "ScheduledAircraftMovementIdentification", "Suffix" ]
 
Array [ "Suffix" ]
 
Array [ "ScheduledAircraftMovement", "ScheduledAircraftMovementIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledAircraftMovement": {
    "ScheduledAircraftMovementIdentification": {
      "Suffix": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementRuleType": {
    "Code": "harry's test",
    "Description": "harry's test"
  },
  "AircraftMovementType": {
    "Code": "harry's test",
    "Description": "harry's test"
  },
  "AirTrafficControlCallsign": "harry's test",
  "IATAFlightNumber": "harry's test",
  "IATAOperatorIdentifier": "harry's test",
  "ICAOIdentifier": "harry's test",
  "ICAONumber": "harry's test",
  "Identifier": "harry's test",
  "Number": "harry's test",
  "ScheduledDateTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Suffix": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "ScheduledAircraftMovement", "ScheduledAircraftMovementIdentification", "SystemIdentifier" ]
 
Array [ "SystemIdentifier" ]
 
Array [ "ScheduledAircraftMovement", "ScheduledAircraftMovementIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledAircraftMovement": {
    "ScheduledAircraftMovementIdentification": {
      "SystemIdentifier": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementRuleType": {
    "Code": "harry's test",
    "Description": "harry's test"
  },
  "AircraftMovementType": {
    "Code": "harry's test",
    "Description": "harry's test"
  },
  "AirTrafficControlCallsign": "harry's test",
  "IATAFlightNumber": "harry's test",
  "IATAOperatorIdentifier": "harry's test",
  "ICAOIdentifier": "harry's test",
  "ICAONumber": "harry's test",
  "Identifier": "harry's test",
  "Number": "harry's test",
  "ScheduledDateTime": "harry's test",
  "Suffix": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "SystemIdentifier": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "ScheduledAircraftMovement", "ScheduledAircraftMovementIdentification", "TurnRoundIdentifier" ]
 
Array [ "TurnRoundIdentifier" ]
 
Array [ "ScheduledAircraftMovement", "ScheduledAircraftMovementIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledAircraftMovement": {
    "ScheduledAircraftMovementIdentification": {
      "TurnRoundIdentifier": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementRuleType": {
    "Code": "harry's test",
    "Description": "harry's test"
  },
  "AircraftMovementType": {
    "Code": "harry's test",
    "Description": "harry's test"
  },
  "AirTrafficControlCallsign": "harry's test",
  "IATAFlightNumber": "harry's test",
  "IATAOperatorIdentifier": "harry's test",
  "ICAOIdentifier": "harry's test",
  "ICAONumber": "harry's test",
  "Identifier": "harry's test",
  "Number": "harry's test",
  "ScheduledDateTime": "harry's test",
  "Suffix": "harry's test",
  "SystemIdentifier": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "TurnRoundIdentifier": "harry's test"
}
flight-plan.tsx:122
Array [ "ScheduledAircraftMovement", "AlternateAirport" ]
 
Array [ "AlternateAirport" ]
 
Array [ "ScheduledAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledAircraftMovement": {
    "AlternateAirport": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "ScheduledAircraftMovementStatus": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "ScheduledAircraftMovementIdentification": {
    "AircraftMovementRuleType": {
      "Code": "harry's test",
      "Description": "harry's test"
    },
    "AircraftMovementType": {
      "Code": "harry's test",
      "Description": "harry's test"
    },
    "AirTrafficControlCallsign": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Identifier": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "AlternateAirport": "harry's test"
}
flight-plan.tsx:122
Array [ "ScheduledAircraftMovement", "DepartureAirportICAOCode" ]
 
Array [ "DepartureAirportICAOCode" ]
 
Array [ "ScheduledAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledAircraftMovement": {
    "DepartureAirportICAOCode": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "ScheduledAircraftMovementStatus": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "ScheduledAircraftMovementIdentification": {
    "AircraftMovementRuleType": {
      "Code": "harry's test",
      "Description": "harry's test"
    },
    "AircraftMovementType": {
      "Code": "harry's test",
      "Description": "harry's test"
    },
    "AirTrafficControlCallsign": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Identifier": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "AlternateAirport": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "DepartureAirportICAOCode": "harry's test"
}
flight-plan.tsx:122
Array [ "ScheduledAircraftMovement", "DestinationAirportICAOCode" ]
 
Array [ "DestinationAirportICAOCode" ]
 
Array [ "ScheduledAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledAircraftMovement": {
    "DestinationAirportICAOCode": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "ScheduledAircraftMovementStatus": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "ScheduledAircraftMovementIdentification": {
    "AircraftMovementRuleType": {
      "Code": "harry's test",
      "Description": "harry's test"
    },
    "AircraftMovementType": {
      "Code": "harry's test",
      "Description": "harry's test"
    },
    "AirTrafficControlCallsign": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Identifier": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "AlternateAirport": "harry's test",
  "DepartureAirportICAOCode": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "DestinationAirportICAOCode": "harry's test"
}
flight-plan.tsx:122
Array [ "ScheduledAircraftMovement", "EstimatedDuration" ]
 
Array [ "EstimatedDuration" ]
 
Array [ "ScheduledAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledAircraftMovement": {
    "EstimatedDuration": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "ScheduledAircraftMovementStatus": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "ScheduledAircraftMovementIdentification": {
    "AircraftMovementRuleType": {
      "Code": "harry's test",
      "Description": "harry's test"
    },
    "AircraftMovementType": {
      "Code": "harry's test",
      "Description": "harry's test"
    },
    "AirTrafficControlCallsign": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Identifier": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "AlternateAirport": "harry's test",
  "DepartureAirportICAOCode": "harry's test",
  "DestinationAirportICAOCode": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedDuration": "harry's test"
}
flight-plan.tsx:122
Array [ "ScheduledAircraftMovement", "EstimatedTimeofArrival" ]
 
Array [ "EstimatedTimeofArrival" ]
 
Array [ "ScheduledAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledAircraftMovement": {
    "EstimatedTimeofArrival": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "ScheduledAircraftMovementStatus": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "ScheduledAircraftMovementIdentification": {
    "AircraftMovementRuleType": {
      "Code": "harry's test",
      "Description": "harry's test"
    },
    "AircraftMovementType": {
      "Code": "harry's test",
      "Description": "harry's test"
    },
    "AirTrafficControlCallsign": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Identifier": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "AlternateAirport": "harry's test",
  "DepartureAirportICAOCode": "harry's test",
  "DestinationAirportICAOCode": "harry's test",
  "EstimatedDuration": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedTimeofArrival": "harry's test"
}
flight-plan.tsx:122
Array [ "ScheduledAircraftMovement", "OtherInformation" ]
 
Array [ "OtherInformation" ]
 
Array [ "ScheduledAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledAircraftMovement": {
    "OtherInformation": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "ScheduledAircraftMovementStatus": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "ScheduledAircraftMovementIdentification": {
    "AircraftMovementRuleType": {
      "Code": "harry's test",
      "Description": "harry's test"
    },
    "AircraftMovementType": {
      "Code": "harry's test",
      "Description": "harry's test"
    },
    "AirTrafficControlCallsign": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Identifier": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "AlternateAirport": "harry's test",
  "DepartureAirportICAOCode": "harry's test",
  "DestinationAirportICAOCode": "harry's test",
  "EstimatedDuration": "harry's test",
  "EstimatedTimeofArrival": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "OtherInformation": "harry's test"
}
flight-plan.tsx:122
Array [ "ScheduledAircraftMovement", "Remark" ]
 
Array [ "Remark" ]
 
Array [ "ScheduledAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledAircraftMovement": {
    "Remark": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "ScheduledAircraftMovementStatus": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "ScheduledAircraftMovementIdentification": {
    "AircraftMovementRuleType": {
      "Code": "harry's test",
      "Description": "harry's test"
    },
    "AircraftMovementType": {
      "Code": "harry's test",
      "Description": "harry's test"
    },
    "AirTrafficControlCallsign": "harry's test",
    "IATAFlightNumber": "harry's test",
    "IATAOperatorIdentifier": "harry's test",
    "ICAOIdentifier": "harry's test",
    "ICAONumber": "harry's test",
    "Identifier": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test",
    "Suffix": "harry's test",
    "SystemIdentifier": "harry's test",
    "TurnRoundIdentifier": "harry's test"
  },
  "AlternateAirport": "harry's test",
  "DepartureAirportICAOCode": "harry's test",
  "DestinationAirportICAOCode": "harry's test",
  "EstimatedDuration": "harry's test",
  "EstimatedTimeofArrival": "harry's test",
  "OtherInformation": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Remark": "harry's test"
}
flight-plan.tsx:122
Array [ "DataQuality", "Completeness" ]
 
Array [ "DataQuality", "Completeness" ]
 
Array []
flight-plan.tsx:112
updateToFlightPlan {
  "DataQuality": {
    "Completeness": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange 
{
  "operatingAirline": {
    "iataCode": "harry's test",
    "icaoCode": "harry's test",
    "name": "harry's test"
  },
  "flightNumber": {
    "airlineCode": "harry's test",
    "trackNumber": "harry's test",
    "suffix": "harry's test"
  },
  "AircraftMovement": {
    "AircraftMovementStatus": {
      "Cancelled": "harry's test",
      "Cleared": "harry's test",
      "Code": "harry's test",
      "DeicingStatus": "harry's test",
      "Deleted": "harry's test",
      "OperationalStatus": "harry's test",
      "PublicStatus": "harry's test",
      "Regulated": "harry's test"
    },
    "AircraftMovementIdentification": {
      "AircraftMovementCodeShare": {
        "Number": "harry's test",
        "ShowToPublic": ""
      },
      "AirTrafficControlCallsign": "harry's test",
      "DisplayedIdentifier": "harry's test",
      "IATAFlightNumber": "harry's test",
      "IATAOperatorIdentifier": "harry's test",
      "ICAOIdentifier": "harry's test",
      "ICAONumber": "harry's test…
flight-plan.tsx:121
objectToAdd {
  "DataQuality": {
    "Completeness": "harry's test"
  }
}
flight-plan.tsx:122
Array [ "DataQuality", "Validity" ]
 
Array [ "Validity" ]
 
Array [ "DataQuality" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DataQuality": {
    "Validity": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "Completeness": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Validity": "harry's test"
}
flight-plan.tsx:122
Array [ "DataQuality", "UpdateTimestamp" ]
 
Array [ "UpdateTimestamp" ]
 
Array [ "DataQuality" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DataQuality": {
    "UpdateTimestamp": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "Completeness": "harry's test",
  "Validity": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "UpdateTimestamp": "harry's test"
}
flight-plan.tsx:122
Array [ "DataQuality", "UpdatedBy" ]
 
Array [ "UpdatedBy" ]
 
Array [ "DataQuality" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DataQuality": {
    "UpdatedBy": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "Completeness": "harry's test",
  "Validity": "harry's test",
  "UpdateTimestamp": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "UpdatedBy": "harry's test"
}
flight-plan.tsx:122
Array(10) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialReferenceSystemType", 0, "Code" ]
 
Array(10) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialReferenceSystemType", 0, "Code" ]
 
Array []
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialReferenceSystemType": [
                  {
                    "Code": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange 
{
  "operatingAirline": {
    "iataCode": "harry's test",
    "icaoCode": "harry's test",
    "name": "harry's test"
  },
  "flightNumber": {
    "airlineCode": "harry's test",
    "trackNumber": "harry's test",
    "suffix": "harry's test"
  },
  "AircraftMovement": {
    "AircraftMovementStatus": {
      "Cancelled": "harry's test",
      "Cleared": "harry's test",
      "Code": "harry's test",
      "DeicingStatus": "harry's test",
      "Deleted": "harry's test",
      "OperationalStatus": "harry's test",
      "PublicStatus": "harry's test",
      "Regulated": "harry's test"
    },
    "AircraftMovementIdentification": {
      "AircraftMovementCodeShare": {
        "Number": "harry's test",
        "ShowToPublic": ""
      },
      "AirTrafficControlCallsign": "harry's test",
      "DisplayedIdentifier": "harry's test",
      "IATAFlightNumber": "harry's test",
      "IATAOperatorIdentifier": "harry's test",
      "ICAOIdentifier": "harry's test",
      "ICAONumber": "harry's test…
flight-plan.tsx:121
objectToAdd {
  "DroneAircraftMovement": {
    "DestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialReferenceSystemType": [
                  {
                    "Code": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:122
Array(10) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialReferenceSystemType", 0, "Description" ]
 
Array [ 0, "Description" ]
 
Array(8) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialReferenceSystemType" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialReferenceSystemType": [
                  {
                    "Description": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "Code": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "Description": "harry's test"
  }
]
flight-plan.tsx:122
Array(16) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(10) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "ChildNamedLocation", 0, "GeopoliticalLocationType", 0, "Description" ]
 
Array(6) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "ChildNamedLocation": [
                          {
                            "GeopoliticalLocationType": [
                              {
                                "Description": "harry's test"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ChildNamedLocation": [
              {
                "GeopoliticalLocationType": [
                  {
                    "Description": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(16) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(10) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "ChildNamedLocation", 0, "GeopoliticalLocationType", 0, "Name" ]
 
Array(6) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "ChildNamedLocation": [
                          {
                            "GeopoliticalLocationType": [
                              {
                                "Name": "harry's test"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ChildNamedLocation": [
              {
                "GeopoliticalLocationType": [
                  {
                    "Description": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ChildNamedLocation": [
              {
                "GeopoliticalLocationType": [
                  {
                    "Name": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(14) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(8) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "ChildNamedLocation", 0, "Description" ]
 
Array(6) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "ChildNamedLocation": [
                          {
                            "Description": "harry's test"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ChildNamedLocation": [
              {
                "GeopoliticalLocationType": [
                  {
                    "Name": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ChildNamedLocation": [
              {
                "Description": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(14) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(8) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "ChildNamedLocation", 0, "Name" ]
 
Array(6) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "ChildNamedLocation": [
                          {
                            "Name": "harry's test"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ChildNamedLocation": [
              {
                "Description": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ChildNamedLocation": [
              {
                "Name": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(16) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(10) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "ParentNamedLocation", 0, "GeopoliticalLocationType", 0, "Description" ]
 
Array(6) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "ParentNamedLocation": [
                          {
                            "GeopoliticalLocationType": [
                              {
                                "Description": "harry's test"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ChildNamedLocation": [
              {
                "Name": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ParentNamedLocation": [
              {
                "GeopoliticalLocationType": [
                  {
                    "Description": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(16) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(10) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "ParentNamedLocation", 0, "GeopoliticalLocationType", 0, "Name" ]
 
Array(6) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "ParentNamedLocation": [
                          {
                            "GeopoliticalLocationType": [
                              {
                                "Name": "harry's test"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ParentNamedLocation": [
              {
                "GeopoliticalLocationType": [
                  {
                    "Description": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ParentNamedLocation": [
              {
                "GeopoliticalLocationType": [
                  {
                    "Name": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(14) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(8) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "ParentNamedLocation", 0, "Description" ]
 
Array(6) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "ParentNamedLocation": [
                          {
                            "Description": "harry's test"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ParentNamedLocation": [
              {
                "GeopoliticalLocationType": [
                  {
                    "Name": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ParentNamedLocation": [
              {
                "Description": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(14) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(8) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "ParentNamedLocation", 0, "Name" ]
 
Array(6) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "ParentNamedLocation": [
                          {
                            "Name": "harry's test"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ParentNamedLocation": [
              {
                "Description": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ParentNamedLocation": [
              {
                "Name": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(12) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(6) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "Description" ]
 
Array(6) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "Description": "harry's test"
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ParentNamedLocation": [
              {
                "Name": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "Description": "harry's test"
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(12) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(6) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "Name" ]
 
Array(6) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "Name": "harry's test"
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "Description": "harry's test"
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "Name": "harry's test"
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(11) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(5) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "Description" ]
 
Array(6) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "Description": "harry's test"
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "Name": "harry's test"
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "Description": "harry's test"
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(11) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(5) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "Name" ]
 
Array(6) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "Name": "harry's test"
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "Description": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "Name": "harry's test"
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(10) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "Description" ]
 
Array(4) [ 0, "SpatialStandardsAuthorityParty", 0, "Description" ]
 
Array(6) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "Description": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "Name": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "Description": "harry's test"
      }
    ]
  }
]
flight-plan.tsx:122
Array(10) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "Name" ]
 
Array(4) [ 0, "SpatialStandardsAuthorityParty", 0, "Name" ]
 
Array(6) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "Name": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "Description": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "Name": "harry's test"
      }
    ]
  }
]
flight-plan.tsx:122
Array(8) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "Description" ]
 
Array [ 0, "Description" ]
 
Array(6) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "Description": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "Name": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "Description": "harry's test"
  }
]
flight-plan.tsx:122
Array(8) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "Identifier" ]
 
Array [ 0, "Identifier" ]
 
Array(6) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "Identifier": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "Name": "harry's test"
      }
    ],
    "Description": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "Identifier": "harry's test"
  }
]
flight-plan.tsx:122
Array(6) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "CoordX" ]
 
Array [ "CoordX" ]
 
Array(5) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "CoordX": 1.1
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "SpatialReferenceSystem": [
    {
      "SpatialReferenceSystemType": [
        {
          "Code": "harry's test",
          "Description": "harry's test"
        }
      ],
      "SpatialStandardsAuthorityParty": [
        {
          "Name": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Identifier": "harry's test"
    }
  ]
}
flight-plan.tsx:121
objectToAdd {
  "CoordX": 1.1
}
flight-plan.tsx:122
Array(6) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "CoordY" ]
 
Array [ "CoordY" ]
 
Array(5) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "CoordY": 1.1
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "SpatialReferenceSystem": [
    {
      "SpatialReferenceSystemType": [
        {
          "Code": "harry's test",
          "Description": "harry's test"
        }
      ],
      "SpatialStandardsAuthorityParty": [
        {
          "Name": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Identifier": "harry's test"
    }
  ],
  "CoordX": 1.1
}
flight-plan.tsx:121
objectToAdd {
  "CoordY": 1.1
}
flight-plan.tsx:122
Array(6) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "CoordZ" ]
 
Array [ "CoordZ" ]
 
Array(5) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "CoordZ": 1.1
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "SpatialReferenceSystem": [
    {
      "SpatialReferenceSystemType": [
        {
          "Code": "harry's test",
          "Description": "harry's test"
        }
      ],
      "SpatialStandardsAuthorityParty": [
        {
          "Name": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Identifier": "harry's test"
    }
  ],
  "CoordX": 1.1,
  "CoordY": 1.1
}
flight-plan.tsx:121
objectToAdd {
  "CoordZ": 1.1
}
flight-plan.tsx:122
Array(6) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "Value" ]
 
Array [ "Value" ]
 
Array(5) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "Value": "harry's test"
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "SpatialReferenceSystem": [
    {
      "SpatialReferenceSystemType": [
        {
          "Code": "harry's test",
          "Description": "harry's test"
        }
      ],
      "SpatialStandardsAuthorityParty": [
        {
          "Name": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Identifier": "harry's test"
    }
  ],
  "CoordX": 1.1,
  "CoordY": 1.1,
  "CoordZ": 1.1
}
flight-plan.tsx:121
objectToAdd {
  "Value": "harry's test"
}
flight-plan.tsx:122
Array(5) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "Code" ]
 
Array [ "Code" ]
 
Array(4) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DestinationLocation": [
      {
        "GeographicLocation": {
          "Code": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "SpatialReferenceDefinition": {
    "SpatialReferenceSystem": [
      {
        "SpatialReferenceSystemType": [
          {
            "Code": "harry's test",
            "Description": "harry's test"
          }
        ],
        "SpatialStandardsAuthorityParty": [
          {
            "Name": "harry's test"
          }
        ],
        "Description": "harry's test",
        "Identifier": "harry's test"
      }
    ],
    "CoordX": 1.1,
    "CoordY": 1.1,
    "CoordZ": 1.1,
    "Value": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "Code": "harry's test"
}
flight-plan.tsx:122
Array(5) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation", "Name" ]
 
Array [ "Name" ]
 
Array(4) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeographicLocation" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DestinationLocation": [
      {
        "GeographicLocation": {
          "Name": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "SpatialReferenceDefinition": {
    "SpatialReferenceSystem": [
      {
        "SpatialReferenceSystemType": [
          {
            "Code": "harry's test",
            "Description": "harry's test"
          }
        ],
        "SpatialStandardsAuthorityParty": [
          {
            "Name": "harry's test"
          }
        ],
        "Description": "harry's test",
        "Identifier": "harry's test"
      }
    ],
    "CoordX": 1.1,
    "CoordY": 1.1,
    "CoordZ": 1.1,
    "Value": "harry's test"
  },
  "Code": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Name": "harry's test"
}
flight-plan.tsx:122
Array(7) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeopoliticalLocation", "GeopoliticalLocationType", 0, "Description" ]
 
Array(5) [ 0, "GeopoliticalLocation", "GeopoliticalLocationType", 0, "Description" ]
 
Array [ "DroneAircraftMovement", "DestinationLocation" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DestinationLocation": [
      {
        "GeopoliticalLocation": {
          "GeopoliticalLocationType": [
            {
              "Description": "harry's test"
            }
          ]
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "GeographicLocation": {
      "SpatialReferenceDefinition": {
        "SpatialReferenceSystem": [
          {
            "SpatialReferenceSystemType": [
              {
                "Code": "harry's test",
                "Description": "harry's test"
              }
            ],
            "SpatialStandardsAuthorityParty": [
              {
                "Name": "harry's test"
              }
            ],
            "Description": "harry's test",
            "Identifier": "harry's test"
          }
        ],
        "CoordX": 1.1,
        "CoordY": 1.1,
        "CoordZ": 1.1,
        "Value": "harry's test"
      },
      "Code": "harry's test",
      "Name": "harry's test"
    }
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "GeopoliticalLocation": {
      "GeopoliticalLocationType": [
        {
          "Description": "harry's test"
        }
      ]
    }
  }
]
flight-plan.tsx:122
Array(7) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeopoliticalLocation", "GeopoliticalLocationType", 0, "Name" ]
 
Array(5) [ 0, "GeopoliticalLocation", "GeopoliticalLocationType", 0, "Name" ]
 
Array [ "DroneAircraftMovement", "DestinationLocation" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DestinationLocation": [
      {
        "GeopoliticalLocation": {
          "GeopoliticalLocationType": [
            {
              "Name": "harry's test"
            }
          ]
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "GeographicLocation": {
      "SpatialReferenceDefinition": {
        "SpatialReferenceSystem": [
          {
            "SpatialReferenceSystemType": [
              {
                "Code": "harry's test",
                "Description": "harry's test"
              }
            ],
            "SpatialStandardsAuthorityParty": [
              {
                "Name": "harry's test"
              }
            ],
            "Description": "harry's test",
            "Identifier": "harry's test"
          }
        ],
        "CoordX": 1.1,
        "CoordY": 1.1,
        "CoordZ": 1.1,
        "Value": "harry's test"
      },
      "Code": "harry's test",
      "Name": "harry's test"
    },
    "GeopoliticalLocation": {
      "GeopoliticalLocationType": [
        {
          "Description": "harry's test"
        }
      ]
    }
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "GeopoliticalLocation": {
      "GeopoliticalLocationType": [
        {
          "Name": "harry's test"
        }
      ]
    }
  }
]
flight-plan.tsx:122
Array(5) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeopoliticalLocation", "Description" ]
 
Array(3) [ 0, "GeopoliticalLocation", "Description" ]
 
Array [ "DroneAircraftMovement", "DestinationLocation" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DestinationLocation": [
      {
        "GeopoliticalLocation": {
          "Description": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "GeographicLocation": {
      "SpatialReferenceDefinition": {
        "SpatialReferenceSystem": [
          {
            "SpatialReferenceSystemType": [
              {
                "Code": "harry's test",
                "Description": "harry's test"
              }
            ],
            "SpatialStandardsAuthorityParty": [
              {
                "Name": "harry's test"
              }
            ],
            "Description": "harry's test",
            "Identifier": "harry's test"
          }
        ],
        "CoordX": 1.1,
        "CoordY": 1.1,
        "CoordZ": 1.1,
        "Value": "harry's test"
      },
      "Code": "harry's test",
      "Name": "harry's test"
    },
    "GeopoliticalLocation": {
      "GeopoliticalLocationType": [
        {
          "Name": "harry's test"
        }
      ]
    }
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "GeopoliticalLocation": {
      "Description": "harry's test"
    }
  }
]
flight-plan.tsx:122
Array(5) [ "DroneAircraftMovement", "DestinationLocation", 0, "GeopoliticalLocation", "Name" ]
 
Array(3) [ 0, "GeopoliticalLocation", "Name" ]
 
Array [ "DroneAircraftMovement", "DestinationLocation" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DestinationLocation": [
      {
        "GeopoliticalLocation": {
          "Name": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "GeographicLocation": {
      "SpatialReferenceDefinition": {
        "SpatialReferenceSystem": [
          {
            "SpatialReferenceSystemType": [
              {
                "Code": "harry's test",
                "Description": "harry's test"
              }
            ],
            "SpatialStandardsAuthorityParty": [
              {
                "Name": "harry's test"
              }
            ],
            "Description": "harry's test",
            "Identifier": "harry's test"
          }
        ],
        "CoordX": 1.1,
        "CoordY": 1.1,
        "CoordZ": 1.1,
        "Value": "harry's test"
      },
      "Code": "harry's test",
      "Name": "harry's test"
    },
    "GeopoliticalLocation": {
      "Description": "harry's test"
    }
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "GeopoliticalLocation": {
      "Name": "harry's test"
    }
  }
]
flight-plan.tsx:122
Array(4) [ "DroneAircraftMovement", "DestinationLocation", 0, "Value" ]
 
Array [ 0, "Value" ]
 
Array [ "DroneAircraftMovement", "DestinationLocation" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DestinationLocation": [
      {
        "Value": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "GeographicLocation": {
      "SpatialReferenceDefinition": {
        "SpatialReferenceSystem": [
          {
            "SpatialReferenceSystemType": [
              {
                "Code": "harry's test",
                "Description": "harry's test"
              }
            ],
            "SpatialStandardsAuthorityParty": [
              {
                "Name": "harry's test"
              }
            ],
            "Description": "harry's test",
            "Identifier": "harry's test"
          }
        ],
        "CoordX": 1.1,
        "CoordY": 1.1,
        "CoordZ": 1.1,
        "Value": "harry's test"
      },
      "Code": "harry's test",
      "Name": "harry's test"
    },
    "GeopoliticalLocation": {
      "Name": "harry's test"
    }
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "Value": "harry's test"
  }
]
flight-plan.tsx:122
Array(5) [ "DroneAircraftMovement", "DroneOperatorParty", 0, "DroneOperatorPartyIdentification", "Description" ]
 
Array(4) [ "DroneOperatorParty", 0, "DroneOperatorPartyIdentification", "Description" ]
 
Array [ "DroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DroneOperatorParty": [
      {
        "DroneOperatorPartyIdentification": {
          "Description": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "DestinationLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ]
}
flight-plan.tsx:121
objectToAdd {
  "DroneOperatorParty": [
    {
      "DroneOperatorPartyIdentification": {
        "Description": "harry's test"
      }
    }
  ]
}
flight-plan.tsx:122
Array(5) [ "DroneAircraftMovement", "DroneOperatorParty", 0, "DroneOperatorPartyIdentification", "Identifier" ]
 
Array [ "Identifier" ]
 
Array(4) [ "DroneAircraftMovement", "DroneOperatorParty", 0, "DroneOperatorPartyIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DroneOperatorParty": [
      {
        "DroneOperatorPartyIdentification": {
          "Identifier": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "Description": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Identifier": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "DroneAircraftMovement", "DroneOperatorParty", 0, "Remark" ]
 
Array [ 0, "Remark" ]
 
Array [ "DroneAircraftMovement", "DroneOperatorParty" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DroneOperatorParty": [
      {
        "Remark": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "DroneOperatorPartyIdentification": {
      "Description": "harry's test",
      "Identifier": "harry's test"
    }
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "Remark": "harry's test"
  }
]
flight-plan.tsx:122
Array(10) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialReferenceSystemType", 0, "Code" ]
 
Array(9) [ "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialReferenceSystemType", 0, "Code" ]
 
Array [ "DroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialReferenceSystemType": [
                  {
                    "Code": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "DestinationLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "DroneOperatorParty": [
    {
      "DroneOperatorPartyIdentification": {
        "Description": "harry's test",
        "Identifier": "harry's test"
      },
      "Remark": "harry's test"
    }
  ]
}
flight-plan.tsx:121
objectToAdd {
  "OriginLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test"
                }
              ]
            }
          ]
        }
      }
    }
  ]
}
flight-plan.tsx:122
Array(10) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialReferenceSystemType", 0, "Description" ]
 
Array [ 0, "Description" ]
 
Array(8) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialReferenceSystemType" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialReferenceSystemType": [
                  {
                    "Description": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "Code": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "Description": "harry's test"
  }
]
flight-plan.tsx:122
Array(16) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(10) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "ChildNamedLocation", 0, "GeopoliticalLocationType", 0, "Description" ]
 
Array(6) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "ChildNamedLocation": [
                          {
                            "GeopoliticalLocationType": [
                              {
                                "Description": "harry's test"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ChildNamedLocation": [
              {
                "GeopoliticalLocationType": [
                  {
                    "Description": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(16) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(10) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "ChildNamedLocation", 0, "GeopoliticalLocationType", 0, "Name" ]
 
Array(6) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "ChildNamedLocation": [
                          {
                            "GeopoliticalLocationType": [
                              {
                                "Name": "harry's test"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ChildNamedLocation": [
              {
                "GeopoliticalLocationType": [
                  {
                    "Description": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ChildNamedLocation": [
              {
                "GeopoliticalLocationType": [
                  {
                    "Name": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(14) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(8) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "ChildNamedLocation", 0, "Description" ]
 
Array(6) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "ChildNamedLocation": [
                          {
                            "Description": "harry's test"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ChildNamedLocation": [
              {
                "GeopoliticalLocationType": [
                  {
                    "Name": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ChildNamedLocation": [
              {
                "Description": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(14) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(8) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "ChildNamedLocation", 0, "Name" ]
 
Array(6) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "ChildNamedLocation": [
                          {
                            "Name": "harry's test"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ChildNamedLocation": [
              {
                "Description": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ChildNamedLocation": [
              {
                "Name": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(16) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(10) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "ParentNamedLocation", 0, "GeopoliticalLocationType", 0, "Description" ]
 
Array(6) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "ParentNamedLocation": [
                          {
                            "GeopoliticalLocationType": [
                              {
                                "Description": "harry's test"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ChildNamedLocation": [
              {
                "Name": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ParentNamedLocation": [
              {
                "GeopoliticalLocationType": [
                  {
                    "Description": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(16) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(10) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "ParentNamedLocation", 0, "GeopoliticalLocationType", 0, "Name" ]
 
Array(6) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "ParentNamedLocation": [
                          {
                            "GeopoliticalLocationType": [
                              {
                                "Name": "harry's test"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ParentNamedLocation": [
              {
                "GeopoliticalLocationType": [
                  {
                    "Description": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ParentNamedLocation": [
              {
                "GeopoliticalLocationType": [
                  {
                    "Name": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(14) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(8) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "ParentNamedLocation", 0, "Description" ]
 
Array(6) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "ParentNamedLocation": [
                          {
                            "Description": "harry's test"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ParentNamedLocation": [
              {
                "GeopoliticalLocationType": [
                  {
                    "Name": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ParentNamedLocation": [
              {
                "Description": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(14) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(8) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "ParentNamedLocation", 0, "Name" ]
 
Array(6) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "ParentNamedLocation": [
                          {
                            "Name": "harry's test"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ParentNamedLocation": [
              {
                "Description": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ParentNamedLocation": [
              {
                "Name": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(12) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(6) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "Description" ]
 
Array(6) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "Description": "harry's test"
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ParentNamedLocation": [
              {
                "Name": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "Description": "harry's test"
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(12) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(6) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "Name" ]
 
Array(6) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "Name": "harry's test"
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "Description": "harry's test"
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "Name": "harry's test"
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(11) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(5) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "Description" ]
 
Array(6) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "Description": "harry's test"
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "Name": "harry's test"
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "Description": "harry's test"
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(11) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(5) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "Name" ]
 
Array(6) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "Name": "harry's test"
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "Description": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "Name": "harry's test"
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(10) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "Description" ]
 
Array(4) [ 0, "SpatialStandardsAuthorityParty", 0, "Description" ]
 
Array(6) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "Description": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "Name": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "Description": "harry's test"
      }
    ]
  }
]
flight-plan.tsx:122
Array(10) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "Name" ]
 
Array(4) [ 0, "SpatialStandardsAuthorityParty", 0, "Name" ]
 
Array(6) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "Name": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "Description": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "Name": "harry's test"
      }
    ]
  }
]
flight-plan.tsx:122
Array(8) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "Description" ]
 
Array [ 0, "Description" ]
 
Array(6) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "Description": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "Name": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "Description": "harry's test"
  }
]
flight-plan.tsx:122
Array(8) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "Identifier" ]
 
Array [ 0, "Identifier" ]
 
Array(6) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "Identifier": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "Name": "harry's test"
      }
    ],
    "Description": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "Identifier": "harry's test"
  }
]
flight-plan.tsx:122
Array(6) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "CoordX" ]
 
Array [ "CoordX" ]
 
Array(5) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "CoordX": 1.1
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "SpatialReferenceSystem": [
    {
      "SpatialReferenceSystemType": [
        {
          "Code": "harry's test",
          "Description": "harry's test"
        }
      ],
      "SpatialStandardsAuthorityParty": [
        {
          "Name": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Identifier": "harry's test"
    }
  ]
}
flight-plan.tsx:121
objectToAdd {
  "CoordX": 1.1
}
flight-plan.tsx:122
Array(6) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "CoordY" ]
 
Array [ "CoordY" ]
 
Array(5) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "CoordY": 1.1
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "SpatialReferenceSystem": [
    {
      "SpatialReferenceSystemType": [
        {
          "Code": "harry's test",
          "Description": "harry's test"
        }
      ],
      "SpatialStandardsAuthorityParty": [
        {
          "Name": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Identifier": "harry's test"
    }
  ],
  "CoordX": 1.1
}
flight-plan.tsx:121
objectToAdd {
  "CoordY": 1.1
}
flight-plan.tsx:122
Array(6) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "CoordZ" ]
 
Array [ "CoordZ" ]
 
Array(5) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "CoordZ": 1.1
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "SpatialReferenceSystem": [
    {
      "SpatialReferenceSystemType": [
        {
          "Code": "harry's test",
          "Description": "harry's test"
        }
      ],
      "SpatialStandardsAuthorityParty": [
        {
          "Name": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Identifier": "harry's test"
    }
  ],
  "CoordX": 1.1,
  "CoordY": 1.1
}
flight-plan.tsx:121
objectToAdd {
  "CoordZ": 1.1
}
flight-plan.tsx:122
Array(6) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "Value" ]
 
Array [ "Value" ]
 
Array(5) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "Value": "harry's test"
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "SpatialReferenceSystem": [
    {
      "SpatialReferenceSystemType": [
        {
          "Code": "harry's test",
          "Description": "harry's test"
        }
      ],
      "SpatialStandardsAuthorityParty": [
        {
          "Name": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Identifier": "harry's test"
    }
  ],
  "CoordX": 1.1,
  "CoordY": 1.1,
  "CoordZ": 1.1
}
flight-plan.tsx:121
objectToAdd {
  "Value": "harry's test"
}
flight-plan.tsx:122
Array(5) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "Code" ]
 
Array [ "Code" ]
 
Array(4) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OriginLocation": [
      {
        "GeographicLocation": {
          "Code": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "SpatialReferenceDefinition": {
    "SpatialReferenceSystem": [
      {
        "SpatialReferenceSystemType": [
          {
            "Code": "harry's test",
            "Description": "harry's test"
          }
        ],
        "SpatialStandardsAuthorityParty": [
          {
            "Name": "harry's test"
          }
        ],
        "Description": "harry's test",
        "Identifier": "harry's test"
      }
    ],
    "CoordX": 1.1,
    "CoordY": 1.1,
    "CoordZ": 1.1,
    "Value": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "Code": "harry's test"
}
flight-plan.tsx:122
Array(5) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation", "Name" ]
 
Array [ "Name" ]
 
Array(4) [ "DroneAircraftMovement", "OriginLocation", 0, "GeographicLocation" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OriginLocation": [
      {
        "GeographicLocation": {
          "Name": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "SpatialReferenceDefinition": {
    "SpatialReferenceSystem": [
      {
        "SpatialReferenceSystemType": [
          {
            "Code": "harry's test",
            "Description": "harry's test"
          }
        ],
        "SpatialStandardsAuthorityParty": [
          {
            "Name": "harry's test"
          }
        ],
        "Description": "harry's test",
        "Identifier": "harry's test"
      }
    ],
    "CoordX": 1.1,
    "CoordY": 1.1,
    "CoordZ": 1.1,
    "Value": "harry's test"
  },
  "Code": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Name": "harry's test"
}
flight-plan.tsx:122
Array(7) [ "DroneAircraftMovement", "OriginLocation", 0, "GeopoliticalLocation", "GeopoliticalLocationType", 0, "Description" ]
 
Array(5) [ 0, "GeopoliticalLocation", "GeopoliticalLocationType", 0, "Description" ]
 
Array [ "DroneAircraftMovement", "OriginLocation" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OriginLocation": [
      {
        "GeopoliticalLocation": {
          "GeopoliticalLocationType": [
            {
              "Description": "harry's test"
            }
          ]
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "GeographicLocation": {
      "SpatialReferenceDefinition": {
        "SpatialReferenceSystem": [
          {
            "SpatialReferenceSystemType": [
              {
                "Code": "harry's test",
                "Description": "harry's test"
              }
            ],
            "SpatialStandardsAuthorityParty": [
              {
                "Name": "harry's test"
              }
            ],
            "Description": "harry's test",
            "Identifier": "harry's test"
          }
        ],
        "CoordX": 1.1,
        "CoordY": 1.1,
        "CoordZ": 1.1,
        "Value": "harry's test"
      },
      "Code": "harry's test",
      "Name": "harry's test"
    }
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "GeopoliticalLocation": {
      "GeopoliticalLocationType": [
        {
          "Description": "harry's test"
        }
      ]
    }
  }
]
flight-plan.tsx:122
Array(7) [ "DroneAircraftMovement", "OriginLocation", 0, "GeopoliticalLocation", "GeopoliticalLocationType", 0, "Name" ]
 
Array(5) [ 0, "GeopoliticalLocation", "GeopoliticalLocationType", 0, "Name" ]
 
Array [ "DroneAircraftMovement", "OriginLocation" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OriginLocation": [
      {
        "GeopoliticalLocation": {
          "GeopoliticalLocationType": [
            {
              "Name": "harry's test"
            }
          ]
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "GeographicLocation": {
      "SpatialReferenceDefinition": {
        "SpatialReferenceSystem": [
          {
            "SpatialReferenceSystemType": [
              {
                "Code": "harry's test",
                "Description": "harry's test"
              }
            ],
            "SpatialStandardsAuthorityParty": [
              {
                "Name": "harry's test"
              }
            ],
            "Description": "harry's test",
            "Identifier": "harry's test"
          }
        ],
        "CoordX": 1.1,
        "CoordY": 1.1,
        "CoordZ": 1.1,
        "Value": "harry's test"
      },
      "Code": "harry's test",
      "Name": "harry's test"
    },
    "GeopoliticalLocation": {
      "GeopoliticalLocationType": [
        {
          "Description": "harry's test"
        }
      ]
    }
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "GeopoliticalLocation": {
      "GeopoliticalLocationType": [
        {
          "Name": "harry's test"
        }
      ]
    }
  }
]
flight-plan.tsx:122
Array(5) [ "DroneAircraftMovement", "OriginLocation", 0, "GeopoliticalLocation", "Description" ]
 
Array(3) [ 0, "GeopoliticalLocation", "Description" ]
 
Array [ "DroneAircraftMovement", "OriginLocation" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OriginLocation": [
      {
        "GeopoliticalLocation": {
          "Description": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "GeographicLocation": {
      "SpatialReferenceDefinition": {
        "SpatialReferenceSystem": [
          {
            "SpatialReferenceSystemType": [
              {
                "Code": "harry's test",
                "Description": "harry's test"
              }
            ],
            "SpatialStandardsAuthorityParty": [
              {
                "Name": "harry's test"
              }
            ],
            "Description": "harry's test",
            "Identifier": "harry's test"
          }
        ],
        "CoordX": 1.1,
        "CoordY": 1.1,
        "CoordZ": 1.1,
        "Value": "harry's test"
      },
      "Code": "harry's test",
      "Name": "harry's test"
    },
    "GeopoliticalLocation": {
      "GeopoliticalLocationType": [
        {
          "Name": "harry's test"
        }
      ]
    }
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "GeopoliticalLocation": {
      "Description": "harry's test"
    }
  }
]
flight-plan.tsx:122
Array(5) [ "DroneAircraftMovement", "OriginLocation", 0, "GeopoliticalLocation", "Name" ]
 
Array(3) [ 0, "GeopoliticalLocation", "Name" ]
 
Array [ "DroneAircraftMovement", "OriginLocation" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OriginLocation": [
      {
        "GeopoliticalLocation": {
          "Name": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "GeographicLocation": {
      "SpatialReferenceDefinition": {
        "SpatialReferenceSystem": [
          {
            "SpatialReferenceSystemType": [
              {
                "Code": "harry's test",
                "Description": "harry's test"
              }
            ],
            "SpatialStandardsAuthorityParty": [
              {
                "Name": "harry's test"
              }
            ],
            "Description": "harry's test",
            "Identifier": "harry's test"
          }
        ],
        "CoordX": 1.1,
        "CoordY": 1.1,
        "CoordZ": 1.1,
        "Value": "harry's test"
      },
      "Code": "harry's test",
      "Name": "harry's test"
    },
    "GeopoliticalLocation": {
      "Description": "harry's test"
    }
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "GeopoliticalLocation": {
      "Name": "harry's test"
    }
  }
]
flight-plan.tsx:122
Array(4) [ "DroneAircraftMovement", "OriginLocation", 0, "Value" ]
 
Array [ 0, "Value" ]
 
Array [ "DroneAircraftMovement", "OriginLocation" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OriginLocation": [
      {
        "Value": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "GeographicLocation": {
      "SpatialReferenceDefinition": {
        "SpatialReferenceSystem": [
          {
            "SpatialReferenceSystemType": [
              {
                "Code": "harry's test",
                "Description": "harry's test"
              }
            ],
            "SpatialStandardsAuthorityParty": [
              {
                "Name": "harry's test"
              }
            ],
            "Description": "harry's test",
            "Identifier": "harry's test"
          }
        ],
        "CoordX": 1.1,
        "CoordY": 1.1,
        "CoordZ": 1.1,
        "Value": "harry's test"
      },
      "Code": "harry's test",
      "Name": "harry's test"
    },
    "GeopoliticalLocation": {
      "Name": "harry's test"
    }
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "Value": "harry's test"
  }
]
flight-plan.tsx:122
Array(5) [ "DroneAircraftMovement", "Route", 0, "RouteSegment", "Description" ]
 
Array(4) [ "Route", 0, "RouteSegment", "Description" ]
 
Array [ "DroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "Route": [
      {
        "RouteSegment": {
          "Description": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "DestinationLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "DroneOperatorParty": [
    {
      "DroneOperatorPartyIdentification": {
        "Description": "harry's test",
        "Identifier": "harry's test"
      },
      "Remark": "harry's test"
    }
  ],
  "OriginLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ]
}
flight-plan.tsx:121
objectToAdd {
  "Route": [
    {
      "RouteSegment": {
        "Description": "harry's test"
      }
    }
  ]
}
flight-plan.tsx:122
Array(5) [ "DroneAircraftMovement", "Route", 0, "RouteSegment", "Identifier" ]
 
Array [ "Identifier" ]
 
Array(4) [ "DroneAircraftMovement", "Route", 0, "RouteSegment" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "Route": [
      {
        "RouteSegment": {
          "Identifier": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "Description": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Identifier": "harry's test"
}
flight-plan.tsx:122
Array(5) [ "DroneAircraftMovement", "Route", 0, "RouteSegment", "RequestedFlightLevel" ]
 
Array [ "RequestedFlightLevel" ]
 
Array(4) [ "DroneAircraftMovement", "Route", 0, "RouteSegment" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "Route": [
      {
        "RouteSegment": {
          "RequestedFlightLevel": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "Description": "harry's test",
  "Identifier": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "RequestedFlightLevel": "harry's test"
}
flight-plan.tsx:122
Array(5) [ "DroneAircraftMovement", "Route", 0, "RouteSegment", "RequestedFlightLevelPoint" ]
 
Array [ "RequestedFlightLevelPoint" ]
 
Array(4) [ "DroneAircraftMovement", "Route", 0, "RouteSegment" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "Route": [
      {
        "RouteSegment": {
          "RequestedFlightLevelPoint": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "Description": "harry's test",
  "Identifier": "harry's test",
  "RequestedFlightLevel": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "RequestedFlightLevelPoint": "harry's test"
}
flight-plan.tsx:122
Array(5) [ "DroneAircraftMovement", "Route", 0, "RouteSegment", "TrueAirspeed" ]
 
Array [ "TrueAirspeed" ]
 
Array(4) [ "DroneAircraftMovement", "Route", 0, "RouteSegment" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "Route": [
      {
        "RouteSegment": {
          "TrueAirspeed": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "Description": "harry's test",
  "Identifier": "harry's test",
  "RequestedFlightLevel": "harry's test",
  "RequestedFlightLevelPoint": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "TrueAirspeed": "harry's test"
}
flight-plan.tsx:122
Array(5) [ "DroneAircraftMovement", "Route", 0, "RouteSegment", "TrueAirspeedPoint" ]
 
Array [ "TrueAirspeedPoint" ]
 
Array(4) [ "DroneAircraftMovement", "Route", 0, "RouteSegment" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "Route": [
      {
        "RouteSegment": {
          "TrueAirspeedPoint": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "Description": "harry's test",
  "Identifier": "harry's test",
  "RequestedFlightLevel": "harry's test",
  "RequestedFlightLevelPoint": "harry's test",
  "TrueAirspeed": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "TrueAirspeedPoint": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "DroneAircraftMovement", "Route", 0, "Description" ]
 
Array [ 0, "Description" ]
 
Array [ "DroneAircraftMovement", "Route" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "Route": [
      {
        "Description": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "RouteSegment": {
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    }
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "Description": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "DroneAircraftMovement", "Route", 0, "Identifier" ]
 
Array [ 0, "Identifier" ]
 
Array [ "DroneAircraftMovement", "Route" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "Route": [
      {
        "Identifier": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "RouteSegment": {
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    },
    "Description": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "Identifier": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "DroneAircraftMovement", "Route", 0, "RequestedFlightLevel" ]
 
Array [ 0, "RequestedFlightLevel" ]
 
Array [ "DroneAircraftMovement", "Route" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "Route": [
      {
        "RequestedFlightLevel": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "RouteSegment": {
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    },
    "Description": "harry's test",
    "Identifier": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "RequestedFlightLevel": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "DroneAircraftMovement", "Route", 0, "RequestedFlightLevelPoint" ]
 
Array [ 0, "RequestedFlightLevelPoint" ]
 
Array [ "DroneAircraftMovement", "Route" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "Route": [
      {
        "RequestedFlightLevelPoint": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "RouteSegment": {
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    },
    "Description": "harry's test",
    "Identifier": "harry's test",
    "RequestedFlightLevel": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "RequestedFlightLevelPoint": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "DroneAircraftMovement", "Route", 0, "RouteInternationalDomestic" ]
 
Array [ 0, "RouteInternationalDomestic" ]
 
Array [ "DroneAircraftMovement", "Route" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "Route": [
      {
        "RouteInternationalDomestic": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "RouteSegment": {
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    },
    "Description": "harry's test",
    "Identifier": "harry's test",
    "RequestedFlightLevel": "harry's test",
    "RequestedFlightLevelPoint": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "RouteInternationalDomestic": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "DroneAircraftMovement", "Route", 0, "RouteText" ]
 
Array [ 0, "RouteText" ]
 
Array [ "DroneAircraftMovement", "Route" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "Route": [
      {
        "RouteText": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "RouteSegment": {
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    },
    "Description": "harry's test",
    "Identifier": "harry's test",
    "RequestedFlightLevel": "harry's test",
    "RequestedFlightLevelPoint": "harry's test",
    "RouteInternationalDomestic": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "RouteText": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "DroneAircraftMovement", "Route", 0, "StandardInstrumentDeparture" ]
 
Array [ 0, "StandardInstrumentDeparture" ]
 
Array [ "DroneAircraftMovement", "Route" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "Route": [
      {
        "StandardInstrumentDeparture": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "RouteSegment": {
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    },
    "Description": "harry's test",
    "Identifier": "harry's test",
    "RequestedFlightLevel": "harry's test",
    "RequestedFlightLevelPoint": "harry's test",
    "RouteInternationalDomestic": "harry's test",
    "RouteText": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "StandardInstrumentDeparture": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "DroneAircraftMovement", "Route", 0, "TrueAirspeed" ]
 
Array [ 0, "TrueAirspeed" ]
 
Array [ "DroneAircraftMovement", "Route" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "Route": [
      {
        "TrueAirspeed": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "RouteSegment": {
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    },
    "Description": "harry's test",
    "Identifier": "harry's test",
    "RequestedFlightLevel": "harry's test",
    "RequestedFlightLevelPoint": "harry's test",
    "RouteInternationalDomestic": "harry's test",
    "RouteText": "harry's test",
    "StandardInstrumentDeparture": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "TrueAirspeed": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "DroneAircraftMovement", "Route", 0, "TrueAirspeedPoint" ]
 
Array [ 0, "TrueAirspeedPoint" ]
 
Array [ "DroneAircraftMovement", "Route" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "Route": [
      {
        "TrueAirspeedPoint": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "RouteSegment": {
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    },
    "Description": "harry's test",
    "Identifier": "harry's test",
    "RequestedFlightLevel": "harry's test",
    "RequestedFlightLevelPoint": "harry's test",
    "RouteInternationalDomestic": "harry's test",
    "RouteText": "harry's test",
    "StandardInstrumentDeparture": "harry's test",
    "TrueAirspeed": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "TrueAirspeedPoint": "harry's test"
  }
]
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "DroneAircraftMovementIdentification", "DisplayedIdentifier" ]
 
Array [ "DroneAircraftMovementIdentification", "DisplayedIdentifier" ]
 
Array [ "DroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DroneAircraftMovementIdentification": {
      "DisplayedIdentifier": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "DestinationLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "DroneOperatorParty": [
    {
      "DroneOperatorPartyIdentification": {
        "Description": "harry's test",
        "Identifier": "harry's test"
      },
      "Remark": "harry's test"
    }
  ],
  "OriginLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "Route": [
    {
      "RouteSegment": {
        "Description": "harry's test",
        "Identifier": "harry's test",
        "RequestedFlightLevel": "harry's test",
        "RequestedFlightLevelPoint": "harry's test",
        "TrueAirspeed": "harry's test",
        "TrueAirspeedPoint": "harry's test"
      },
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "RouteInternationalDomestic": "harry's test",
      "RouteText": "harry's test",
      "StandardInstrumentDeparture": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    }
  ]
}
flight-plan.tsx:121
objectToAdd {
  "DroneAircraftMovementIdentification": {
    "DisplayedIdentifier": "harry's test"
  }
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "DroneAircraftMovementIdentification", "Number" ]
 
Array [ "Number" ]
 
Array [ "DroneAircraftMovement", "DroneAircraftMovementIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DroneAircraftMovementIdentification": {
      "Number": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "DisplayedIdentifier": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Number": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "DroneAircraftMovementIdentification", "ScheduledDateTime" ]
 
Array [ "ScheduledDateTime" ]
 
Array [ "DroneAircraftMovement", "DroneAircraftMovementIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DroneAircraftMovementIdentification": {
      "ScheduledDateTime": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "DisplayedIdentifier": "harry's test",
  "Number": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ScheduledDateTime": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "DroneAircraftMovementStatus", "Cancelled" ]
 
Array [ "DroneAircraftMovementStatus", "Cancelled" ]
 
Array [ "DroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DroneAircraftMovementStatus": {
      "Cancelled": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "DestinationLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "DroneOperatorParty": [
    {
      "DroneOperatorPartyIdentification": {
        "Description": "harry's test",
        "Identifier": "harry's test"
      },
      "Remark": "harry's test"
    }
  ],
  "OriginLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "Route": [
    {
      "RouteSegment": {
        "Description": "harry's test",
        "Identifier": "harry's test",
        "RequestedFlightLevel": "harry's test",
        "RequestedFlightLevelPoint": "harry's test",
        "TrueAirspeed": "harry's test",
        "TrueAirspeedPoint": "harry's test"
      },
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "RouteInternationalDomestic": "harry's test",
      "RouteText": "harry's test",
      "StandardInstrumentDeparture": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    }
  ],
  "DroneAircraftMovementIdentification": {
    "DisplayedIdentifier": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "DroneAircraftMovementStatus": {
    "Cancelled": "harry's test"
  }
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "DroneAircraftMovementStatus", "Cleared" ]
 
Array [ "Cleared" ]
 
Array [ "DroneAircraftMovement", "DroneAircraftMovementStatus" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DroneAircraftMovementStatus": {
      "Cleared": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Cancelled": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Cleared": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "DroneAircraftMovementStatus", "Code" ]
 
Array [ "Code" ]
 
Array [ "DroneAircraftMovement", "DroneAircraftMovementStatus" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DroneAircraftMovementStatus": {
      "Code": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Cancelled": "harry's test",
  "Cleared": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Code": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "DroneAircraftMovementStatus", "DeicingStatus" ]
 
Array [ "DeicingStatus" ]
 
Array [ "DroneAircraftMovement", "DroneAircraftMovementStatus" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DroneAircraftMovementStatus": {
      "DeicingStatus": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Cancelled": "harry's test",
  "Cleared": "harry's test",
  "Code": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "DeicingStatus": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "DroneAircraftMovementStatus", "Deleted" ]
 
Array [ "Deleted" ]
 
Array [ "DroneAircraftMovement", "DroneAircraftMovementStatus" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DroneAircraftMovementStatus": {
      "Deleted": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Cancelled": "harry's test",
  "Cleared": "harry's test",
  "Code": "harry's test",
  "DeicingStatus": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Deleted": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "DroneAircraftMovementStatus", "OperationalStatus" ]
 
Array [ "OperationalStatus" ]
 
Array [ "DroneAircraftMovement", "DroneAircraftMovementStatus" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DroneAircraftMovementStatus": {
      "OperationalStatus": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Cancelled": "harry's test",
  "Cleared": "harry's test",
  "Code": "harry's test",
  "DeicingStatus": "harry's test",
  "Deleted": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "OperationalStatus": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "DroneAircraftMovementStatus", "PublicStatus" ]
 
Array [ "PublicStatus" ]
 
Array [ "DroneAircraftMovement", "DroneAircraftMovementStatus" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DroneAircraftMovementStatus": {
      "PublicStatus": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Cancelled": "harry's test",
  "Cleared": "harry's test",
  "Code": "harry's test",
  "DeicingStatus": "harry's test",
  "Deleted": "harry's test",
  "OperationalStatus": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "PublicStatus": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "DroneAircraftMovementStatus", "Regulated" ]
 
Array [ "Regulated" ]
 
Array [ "DroneAircraftMovement", "DroneAircraftMovementStatus" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "DroneAircraftMovementStatus": {
      "Regulated": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Cancelled": "harry's test",
  "Cleared": "harry's test",
  "Code": "harry's test",
  "DeicingStatus": "harry's test",
  "Deleted": "harry's test",
  "OperationalStatus": "harry's test",
  "PublicStatus": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Regulated": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "DroneAircraftMovement", "OperationalTimes", "AircraftMovementMeasure", "Code" ]
 
Array(3) [ "OperationalTimes", "AircraftMovementMeasure", "Code" ]
 
Array [ "DroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "AircraftMovementMeasure": {
        "Code": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "DestinationLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "DroneOperatorParty": [
    {
      "DroneOperatorPartyIdentification": {
        "Description": "harry's test",
        "Identifier": "harry's test"
      },
      "Remark": "harry's test"
    }
  ],
  "OriginLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "Route": [
    {
      "RouteSegment": {
        "Description": "harry's test",
        "Identifier": "harry's test",
        "RequestedFlightLevel": "harry's test",
        "RequestedFlightLevelPoint": "harry's test",
        "TrueAirspeed": "harry's test",
        "TrueAirspeedPoint": "harry's test"
      },
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "RouteInternationalDomestic": "harry's test",
      "RouteText": "harry's test",
      "StandardInstrumentDeparture": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    }
  ],
  "DroneAircraftMovementIdentification": {
    "DisplayedIdentifier": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test"
  },
  "DroneAircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test"
    }
  }
}
flight-plan.tsx:122
Array(4) [ "DroneAircraftMovement", "OperationalTimes", "AircraftMovementMeasure", "Description" ]
 
Array [ "Description" ]
 
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "AircraftMovementMeasure" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "AircraftMovementMeasure": {
        "Description": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Code": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Description": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "DroneAircraftMovement", "OperationalTimes", "AircraftMovementMeasure", "Identifier" ]
 
Array [ "Identifier" ]
 
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "AircraftMovementMeasure" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "AircraftMovementMeasure": {
        "Identifier": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Code": "harry's test",
  "Description": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Identifier": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "DroneAircraftMovement", "OperationalTimes", "AircraftMovementMeasure", "Name" ]
 
Array [ "Name" ]
 
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "AircraftMovementMeasure" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "AircraftMovementMeasure": {
        "Name": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Code": "harry's test",
  "Description": "harry's test",
  "Identifier": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Name": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "DroneAircraftMovement", "OperationalTimes", "AircraftMovementMeasure", "Title" ]
 
Array [ "Title" ]
 
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "AircraftMovementMeasure" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "AircraftMovementMeasure": {
        "Title": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Code": "harry's test",
  "Description": "harry's test",
  "Identifier": "harry's test",
  "Name": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Title": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "DroneAircraftMovement", "OperationalTimes", "AircraftMovementMeasure", "Value" ]
 
Array [ "Value" ]
 
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "AircraftMovementMeasure" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "AircraftMovementMeasure": {
        "Value": "harry's test"
      }
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "Code": "harry's test",
  "Description": "harry's test",
  "Identifier": "harry's test",
  "Name": "harry's test",
  "Title": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Value": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "ActualCommenceofGroundHandlingTimeACGT" ]
 
Array [ "ActualCommenceofGroundHandlingTimeACGT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "ActualCommenceofGroundHandlingTimeACGT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "ActualCommencementofDeicingTimeACZT" ]
 
Array [ "ActualCommencementofDeicingTimeACZT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "ActualCommencementofDeicingTimeACZT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualCommencementofDeicingTimeACZT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "ActualDeIcingDurationADIT" ]
 
Array [ "ActualDeIcingDurationADIT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "ActualDeIcingDurationADIT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualDeIcingDurationADIT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "ActualEndBoardingTimeAEBT" ]
 
Array [ "ActualEndBoardingTimeAEBT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "ActualEndBoardingTimeAEBT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualEndBoardingTimeAEBT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "ActualEndofDeicingTimeAEZT" ]
 
Array [ "ActualEndofDeicingTimeAEZT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "ActualEndofDeicingTimeAEZT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualEndofDeicingTimeAEZT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "ActualEndofGroundHandlingTimeAEGT" ]
 
Array [ "ActualEndofGroundHandlingTimeAEGT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "ActualEndofGroundHandlingTimeAEGT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualEndofGroundHandlingTimeAEGT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "ActualFinalApproachTimeAFAT" ]
 
Array [ "ActualFinalApproachTimeAFAT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "ActualFinalApproachTimeAFAT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualFinalApproachTimeAFAT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "ActualGroundHandlingDurationAGHT" ]
 
Array [ "ActualGroundHandlingDurationAGHT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "ActualGroundHandlingDurationAGHT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualGroundHandlingDurationAGHT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "ActualInBlockTimeAIBT" ]
 
Array [ "ActualInBlockTimeAIBT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "ActualInBlockTimeAIBT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualInBlockTimeAIBT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "ActualLandingTimeALDT" ]
 
Array [ "ActualLandingTimeALDT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "ActualLandingTimeALDT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualLandingTimeALDT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "ActualLastCallTime" ]
 
Array [ "ActualLastCallTime" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "ActualLastCallTime": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualLastCallTime": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "ActualOffBlockTimeAOBT" ]
 
Array [ "ActualOffBlockTimeAOBT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "ActualOffBlockTimeAOBT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualOffBlockTimeAOBT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "ActualReadyforDeicingTimeARZT" ]
 
Array [ "ActualReadyforDeicingTimeARZT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "ActualReadyforDeicingTimeARZT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualReadyforDeicingTimeARZT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "ActualReadyforDepartureTimeARDT" ]
 
Array [ "ActualReadyforDepartureTimeARDT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "ActualReadyforDepartureTimeARDT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualReadyforDepartureTimeARDT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "ActualStartBoardingTimeASBT" ]
 
Array [ "ActualStartBoardingTimeASBT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "ActualStartBoardingTimeASBT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualStartBoardingTimeASBT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "ActualStartUpApprovalTimeASAT" ]
 
Array [ "ActualStartUpApprovalTimeASAT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "ActualStartUpApprovalTimeASAT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualStartUpApprovalTimeASAT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "ActualStartUpRequestTimeASRT" ]
 
Array [ "ActualStartUpRequestTimeASRT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "ActualStartUpRequestTimeASRT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualStartUpRequestTimeASRT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "ActualTakeOffTimeATOT" ]
 
Array [ "ActualTakeOffTimeATOT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "ActualTakeOffTimeATOT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualTakeOffTimeATOT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "ActualTaxiInDurationAXIT" ]
 
Array [ "ActualTaxiInDurationAXIT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "ActualTaxiInDurationAXIT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualTaxiInDurationAXIT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "ActualTaxiOutDurationAXOT" ]
 
Array [ "ActualTaxiOutDurationAXOT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "ActualTaxiOutDurationAXOT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualTaxiOutDurationAXOT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "ActualTimeOfOperationLastPortOfCallLPocATO" ]
 
Array [ "ActualTimeOfOperationLastPortOfCallLPocATO" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "ActualTurnaroundTimeATTT" ]
 
Array [ "ActualTurnaroundTimeATTT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "ActualTurnaroundTimeATTT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ActualTurnaroundTimeATTT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "CalculatedTakeOffTimeCTOT" ]
 
Array [ "CalculatedTakeOffTimeCTOT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "CalculatedTakeOffTimeCTOT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "CalculatedTakeOffTimeCTOT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "EntryintoApproachZoneTime" ]
 
Array [ "EntryintoApproachZoneTime" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "EntryintoApproachZoneTime": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EntryintoApproachZoneTime": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "EstimatedCommencementofDeIcingTimeECZT" ]
 
Array [ "EstimatedCommencementofDeIcingTimeECZT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "EstimatedCommencementofDeIcingTimeECZT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "EstimatedDeIcingDurationEDIT" ]
 
Array [ "EstimatedDeIcingDurationEDIT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "EstimatedDeIcingDurationEDIT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedDeIcingDurationEDIT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "EstimatedEndBoardingTimeEEBT" ]
 
Array [ "EstimatedEndBoardingTimeEEBT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "EstimatedEndBoardingTimeEEBT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedEndBoardingTimeEEBT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "EstimatedEndofDeicingTimeEEZT" ]
 
Array [ "EstimatedEndofDeicingTimeEEZT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "EstimatedEndofDeicingTimeEEZT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedEndofDeicingTimeEEZT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "EstimatedInBlockTimeEIBT" ]
 
Array [ "EstimatedInBlockTimeEIBT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "EstimatedInBlockTimeEIBT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedInBlockTimeEIBT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "EstimatedLandingTimeELDT" ]
 
Array [ "EstimatedLandingTimeELDT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "EstimatedLandingTimeELDT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedLandingTimeELDT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "EstimatedLastCallTime" ]
 
Array [ "EstimatedLastCallTime" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "EstimatedLastCallTime": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedLastCallTime": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "EstimatedOffBlockTimeEOBT" ]
 
Array [ "EstimatedOffBlockTimeEOBT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "EstimatedOffBlockTimeEOBT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedOffBlockTimeEOBT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "EstimatedReadyforDeicingTimeERZT" ]
 
Array [ "EstimatedReadyforDeicingTimeERZT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "EstimatedReadyforDeicingTimeERZT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test",
  "EstimatedOffBlockTimeEOBT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedReadyforDeicingTimeERZT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "EstimatedStartBoardingTime" ]
 
Array [ "EstimatedStartBoardingTime" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "EstimatedStartBoardingTime": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test",
  "EstimatedOffBlockTimeEOBT": "harry's test",
  "EstimatedReadyforDeicingTimeERZT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedStartBoardingTime": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "EstimatedTakeOffTimeETOT" ]
 
Array [ "EstimatedTakeOffTimeETOT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "EstimatedTakeOffTimeETOT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test",
  "EstimatedOffBlockTimeEOBT": "harry's test",
  "EstimatedReadyforDeicingTimeERZT": "harry's test",
  "EstimatedStartBoardingTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedTakeOffTimeETOT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "EstimatedTaxiInDurationEXIT" ]
 
Array [ "EstimatedTaxiInDurationEXIT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "EstimatedTaxiInDurationEXIT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test",
  "EstimatedOffBlockTimeEOBT": "harry's test",
  "EstimatedReadyforDeicingTimeERZT": "harry's test",
  "EstimatedStartBoardingTime": "harry's test",
  "EstimatedTakeOffTimeETOT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedTaxiInDurationEXIT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "EstimatedTaxiOutDurationEXOT" ]
 
Array [ "EstimatedTaxiOutDurationEXOT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "EstimatedTaxiOutDurationEXOT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test",
  "EstimatedOffBlockTimeEOBT": "harry's test",
  "EstimatedReadyforDeicingTimeERZT": "harry's test",
  "EstimatedStartBoardingTime": "harry's test",
  "EstimatedTakeOffTimeETOT": "harry's test",
  "EstimatedTaxiInDurationEXIT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedTaxiOutDurationEXOT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "EstimatedTurnAroundDurationETTT" ]
 
Array [ "EstimatedTurnAroundDurationETTT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "EstimatedTurnAroundDurationETTT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test",
  "EstimatedOffBlockTimeEOBT": "harry's test",
  "EstimatedReadyforDeicingTimeERZT": "harry's test",
  "EstimatedStartBoardingTime": "harry's test",
  "EstimatedTakeOffTimeETOT": "harry's test",
  "EstimatedTaxiInDurationEXIT": "harry's test",
  "EstimatedTaxiOutDurationEXOT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedTurnAroundDurationETTT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "MinimumTurnAroundTimeMTTT" ]
 
Array [ "MinimumTurnAroundTimeMTTT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "MinimumTurnAroundTimeMTTT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test",
  "EstimatedOffBlockTimeEOBT": "harry's test",
  "EstimatedReadyforDeicingTimeERZT": "harry's test",
  "EstimatedStartBoardingTime": "harry's test",
  "EstimatedTakeOffTimeETOT": "harry's test",
  "EstimatedTaxiInDurationEXIT": "harry's test",
  "EstimatedTaxiOutDurationEXOT": "harry's test",
  "EstimatedTurnAroundDurationETTT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "MinimumTurnAroundTimeMTTT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "PlannedLastCallTime" ]
 
Array [ "PlannedLastCallTime" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "PlannedLastCallTime": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test",
  "EstimatedOffBlockTimeEOBT": "harry's test",
  "EstimatedReadyforDeicingTimeERZT": "harry's test",
  "EstimatedStartBoardingTime": "harry's test",
  "EstimatedTakeOffTimeETOT": "harry's test",
  "EstimatedTaxiInDurationEXIT": "harry's test",
  "EstimatedTaxiOutDurationEXOT": "harry's test",
  "EstimatedTurnAroundDurationETTT": "harry's test",
  "MinimumTurnAroundTimeMTTT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "PlannedLastCallTime": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "PlannedStartBoardingTime" ]
 
Array [ "PlannedStartBoardingTime" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "PlannedStartBoardingTime": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test",
  "EstimatedOffBlockTimeEOBT": "harry's test",
  "EstimatedReadyforDeicingTimeERZT": "harry's test",
  "EstimatedStartBoardingTime": "harry's test",
  "EstimatedTakeOffTimeETOT": "harry's test",
  "EstimatedTaxiInDurationEXIT": "harry's test",
  "EstimatedTaxiOutDurationEXOT": "harry's test",
  "EstimatedTurnAroundDurationETTT": "harry's test",
  "MinimumTurnAroundTimeMTTT": "harry's test",
  "PlannedLastCallTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "PlannedStartBoardingTime": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "ScheduledInBlockTimeSIBT" ]
 
Array [ "ScheduledInBlockTimeSIBT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "ScheduledInBlockTimeSIBT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test",
  "EstimatedOffBlockTimeEOBT": "harry's test",
  "EstimatedReadyforDeicingTimeERZT": "harry's test",
  "EstimatedStartBoardingTime": "harry's test",
  "EstimatedTakeOffTimeETOT": "harry's test",
  "EstimatedTaxiInDurationEXIT": "harry's test",
  "EstimatedTaxiOutDurationEXOT": "harry's test",
  "EstimatedTurnAroundDurationETTT": "harry's test",
  "MinimumTurnAroundTimeMTTT": "harry's test",
  "PlannedLastCallTime": "harry's test",
  "PlannedStartBoardingTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ScheduledInBlockTimeSIBT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "ScheduledOffBlockTimeSOBT" ]
 
Array [ "ScheduledOffBlockTimeSOBT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "ScheduledOffBlockTimeSOBT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test",
  "EstimatedOffBlockTimeEOBT": "harry's test",
  "EstimatedReadyforDeicingTimeERZT": "harry's test",
  "EstimatedStartBoardingTime": "harry's test",
  "EstimatedTakeOffTimeETOT": "harry's test",
  "EstimatedTaxiInDurationEXIT": "harry's test",
  "EstimatedTaxiOutDurationEXOT": "harry's test",
  "EstimatedTurnAroundDurationETTT": "harry's test",
  "MinimumTurnAroundTimeMTTT": "harry's test",
  "PlannedLastCallTime": "harry's test",
  "PlannedStartBoardingTime": "harry's test",
  "ScheduledInBlockTimeSIBT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ScheduledOffBlockTimeSOBT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "ScheduledTurnAroundDurationSTTT" ]
 
Array [ "ScheduledTurnAroundDurationSTTT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "ScheduledTurnAroundDurationSTTT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test",
  "EstimatedOffBlockTimeEOBT": "harry's test",
  "EstimatedReadyforDeicingTimeERZT": "harry's test",
  "EstimatedStartBoardingTime": "harry's test",
  "EstimatedTakeOffTimeETOT": "harry's test",
  "EstimatedTaxiInDurationEXIT": "harry's test",
  "EstimatedTaxiOutDurationEXOT": "harry's test",
  "EstimatedTurnAroundDurationETTT": "harry's test",
  "MinimumTurnAroundTimeMTTT": "harry's test",
  "PlannedLastCallTime": "harry's test",
  "PlannedStartBoardingTime": "harry's test",
  "ScheduledInBlockTimeSIBT": "harry's test",
  "ScheduledOffBlockTimeSOBT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ScheduledTurnAroundDurationSTTT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "TargetLandingTimeTLDT" ]
 
Array [ "TargetLandingTimeTLDT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "TargetLandingTimeTLDT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test",
  "EstimatedOffBlockTimeEOBT": "harry's test",
  "EstimatedReadyforDeicingTimeERZT": "harry's test",
  "EstimatedStartBoardingTime": "harry's test",
  "EstimatedTakeOffTimeETOT": "harry's test",
  "EstimatedTaxiInDurationEXIT": "harry's test",
  "EstimatedTaxiOutDurationEXOT": "harry's test",
  "EstimatedTurnAroundDurationETTT": "harry's test",
  "MinimumTurnAroundTimeMTTT": "harry's test",
  "PlannedLastCallTime": "harry's test",
  "PlannedStartBoardingTime": "harry's test",
  "ScheduledInBlockTimeSIBT": "harry's test",
  "ScheduledOffBlockTimeSOBT": "harry's test",
  "ScheduledTurnAroundDurationSTTT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "TargetLandingTimeTLDT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "TargetOffBlockTimeTOBT" ]
 
Array [ "TargetOffBlockTimeTOBT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "TargetOffBlockTimeTOBT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test",
  "EstimatedOffBlockTimeEOBT": "harry's test",
  "EstimatedReadyforDeicingTimeERZT": "harry's test",
  "EstimatedStartBoardingTime": "harry's test",
  "EstimatedTakeOffTimeETOT": "harry's test",
  "EstimatedTaxiInDurationEXIT": "harry's test",
  "EstimatedTaxiOutDurationEXOT": "harry's test",
  "EstimatedTurnAroundDurationETTT": "harry's test",
  "MinimumTurnAroundTimeMTTT": "harry's test",
  "PlannedLastCallTime": "harry's test",
  "PlannedStartBoardingTime": "harry's test",
  "ScheduledInBlockTimeSIBT": "harry's test",
  "ScheduledOffBlockTimeSOBT": "harry's test",
  "ScheduledTurnAroundDurationSTTT": "harry's test",
  "TargetLandingTimeTLDT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "TargetOffBlockTimeTOBT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "TargetStartUpApprovalTimeTSAT" ]
 
Array [ "TargetStartUpApprovalTimeTSAT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "TargetStartUpApprovalTimeTSAT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test",
  "EstimatedOffBlockTimeEOBT": "harry's test",
  "EstimatedReadyforDeicingTimeERZT": "harry's test",
  "EstimatedStartBoardingTime": "harry's test",
  "EstimatedTakeOffTimeETOT": "harry's test",
  "EstimatedTaxiInDurationEXIT": "harry's test",
  "EstimatedTaxiOutDurationEXOT": "harry's test",
  "EstimatedTurnAroundDurationETTT": "harry's test",
  "MinimumTurnAroundTimeMTTT": "harry's test",
  "PlannedLastCallTime": "harry's test",
  "PlannedStartBoardingTime": "harry's test",
  "ScheduledInBlockTimeSIBT": "harry's test",
  "ScheduledOffBlockTimeSOBT": "harry's test",
  "ScheduledTurnAroundDurationSTTT": "harry's test",
  "TargetLandingTimeTLDT": "harry's test",
  "TargetOffBlockTimeTOBT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "TargetStartUpApprovalTimeTSAT": "harry's test"
}
flight-plan.tsx:122
Array(3) [ "DroneAircraftMovement", "OperationalTimes", "TargetTakeOffTimeTTOT" ]
 
Array [ "TargetTakeOffTimeTTOT" ]
 
Array [ "DroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperationalTimes": {
      "TargetTakeOffTimeTTOT": "harry's test"
    }
  }
}
flight-plan.tsx:115
objectToChange {
  "AircraftMovementMeasure": {
    "Code": "harry's test",
    "Description": "harry's test",
    "Identifier": "harry's test",
    "Name": "harry's test",
    "Title": "harry's test",
    "Value": "harry's test"
  },
  "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
  "ActualCommencementofDeicingTimeACZT": "harry's test",
  "ActualDeIcingDurationADIT": "harry's test",
  "ActualEndBoardingTimeAEBT": "harry's test",
  "ActualEndofDeicingTimeAEZT": "harry's test",
  "ActualEndofGroundHandlingTimeAEGT": "harry's test",
  "ActualFinalApproachTimeAFAT": "harry's test",
  "ActualGroundHandlingDurationAGHT": "harry's test",
  "ActualInBlockTimeAIBT": "harry's test",
  "ActualLandingTimeALDT": "harry's test",
  "ActualLastCallTime": "harry's test",
  "ActualOffBlockTimeAOBT": "harry's test",
  "ActualReadyforDeicingTimeARZT": "harry's test",
  "ActualReadyforDepartureTimeARDT": "harry's test",
  "ActualStartBoardingTimeASBT": "harry's test",
  "ActualStartUpApprovalTimeASAT": "harry's test",
  "ActualStartUpRequestTimeASRT": "harry's test",
  "ActualTakeOffTimeATOT": "harry's test",
  "ActualTaxiInDurationAXIT": "harry's test",
  "ActualTaxiOutDurationAXOT": "harry's test",
  "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
  "ActualTurnaroundTimeATTT": "harry's test",
  "CalculatedTakeOffTimeCTOT": "harry's test",
  "EntryintoApproachZoneTime": "harry's test",
  "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
  "EstimatedDeIcingDurationEDIT": "harry's test",
  "EstimatedEndBoardingTimeEEBT": "harry's test",
  "EstimatedEndofDeicingTimeEEZT": "harry's test",
  "EstimatedInBlockTimeEIBT": "harry's test",
  "EstimatedLandingTimeELDT": "harry's test",
  "EstimatedLastCallTime": "harry's test",
  "EstimatedOffBlockTimeEOBT": "harry's test",
  "EstimatedReadyforDeicingTimeERZT": "harry's test",
  "EstimatedStartBoardingTime": "harry's test",
  "EstimatedTakeOffTimeETOT": "harry's test",
  "EstimatedTaxiInDurationEXIT": "harry's test",
  "EstimatedTaxiOutDurationEXOT": "harry's test",
  "EstimatedTurnAroundDurationETTT": "harry's test",
  "MinimumTurnAroundTimeMTTT": "harry's test",
  "PlannedLastCallTime": "harry's test",
  "PlannedStartBoardingTime": "harry's test",
  "ScheduledInBlockTimeSIBT": "harry's test",
  "ScheduledOffBlockTimeSOBT": "harry's test",
  "ScheduledTurnAroundDurationSTTT": "harry's test",
  "TargetLandingTimeTLDT": "harry's test",
  "TargetOffBlockTimeTOBT": "harry's test",
  "TargetStartUpApprovalTimeTSAT": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "TargetTakeOffTimeTTOT": "harry's test"
}
flight-plan.tsx:122
Array [ "DroneAircraftMovement", "AircraftMovementStatus" ]
 
Array [ "AircraftMovementStatus" ]
 
Array [ "DroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "AircraftMovementStatus": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "DestinationLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "DroneOperatorParty": [
    {
      "DroneOperatorPartyIdentification": {
        "Description": "harry's test",
        "Identifier": "harry's test"
      },
      "Remark": "harry's test"
    }
  ],
  "OriginLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "Route": [
    {
      "RouteSegment": {
        "Description": "harry's test",
        "Identifier": "harry's test",
        "RequestedFlightLevel": "harry's test",
        "RequestedFlightLevelPoint": "harry's test",
        "TrueAirspeed": "harry's test",
        "TrueAirspeedPoint": "harry's test"
      },
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "RouteInternationalDomestic": "harry's test",
      "RouteText": "harry's test",
      "StandardInstrumentDeparture": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    }
  ],
  "DroneAircraftMovementIdentification": {
    "DisplayedIdentifier": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test"
  },
  "DroneAircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "AircraftMovementStatus": "harry's test"
}
flight-plan.tsx:122
Array [ "DroneAircraftMovement", "ArrivalOrDeparture" ]
 
Array [ "ArrivalOrDeparture" ]
 
Array [ "DroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "ArrivalOrDeparture": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "DestinationLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "DroneOperatorParty": [
    {
      "DroneOperatorPartyIdentification": {
        "Description": "harry's test",
        "Identifier": "harry's test"
      },
      "Remark": "harry's test"
    }
  ],
  "OriginLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "Route": [
    {
      "RouteSegment": {
        "Description": "harry's test",
        "Identifier": "harry's test",
        "RequestedFlightLevel": "harry's test",
        "RequestedFlightLevelPoint": "harry's test",
        "TrueAirspeed": "harry's test",
        "TrueAirspeedPoint": "harry's test"
      },
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "RouteInternationalDomestic": "harry's test",
      "RouteText": "harry's test",
      "StandardInstrumentDeparture": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    }
  ],
  "DroneAircraftMovementIdentification": {
    "DisplayedIdentifier": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test"
  },
  "DroneAircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "AircraftMovementStatus": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ArrivalOrDeparture": "harry's test"
}
flight-plan.tsx:122
Array [ "DroneAircraftMovement", "Comments" ]
 
Array [ "Comments" ]
 
Array [ "DroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "Comments": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "DestinationLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "DroneOperatorParty": [
    {
      "DroneOperatorPartyIdentification": {
        "Description": "harry's test",
        "Identifier": "harry's test"
      },
      "Remark": "harry's test"
    }
  ],
  "OriginLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "Route": [
    {
      "RouteSegment": {
        "Description": "harry's test",
        "Identifier": "harry's test",
        "RequestedFlightLevel": "harry's test",
        "RequestedFlightLevelPoint": "harry's test",
        "TrueAirspeed": "harry's test",
        "TrueAirspeedPoint": "harry's test"
      },
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "RouteInternationalDomestic": "harry's test",
      "RouteText": "harry's test",
      "StandardInstrumentDeparture": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    }
  ],
  "DroneAircraftMovementIdentification": {
    "DisplayedIdentifier": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test"
  },
  "DroneAircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "AircraftMovementStatus": "harry's test",
  "ArrivalOrDeparture": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Comments": "harry's test"
}
flight-plan.tsx:122
Array [ "DroneAircraftMovement", "Description" ]
 
Array [ "Description" ]
 
Array [ "DroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "Description": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "DestinationLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "DroneOperatorParty": [
    {
      "DroneOperatorPartyIdentification": {
        "Description": "harry's test",
        "Identifier": "harry's test"
      },
      "Remark": "harry's test"
    }
  ],
  "OriginLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "Route": [
    {
      "RouteSegment": {
        "Description": "harry's test",
        "Identifier": "harry's test",
        "RequestedFlightLevel": "harry's test",
        "RequestedFlightLevelPoint": "harry's test",
        "TrueAirspeed": "harry's test",
        "TrueAirspeedPoint": "harry's test"
      },
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "RouteInternationalDomestic": "harry's test",
      "RouteText": "harry's test",
      "StandardInstrumentDeparture": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    }
  ],
  "DroneAircraftMovementIdentification": {
    "DisplayedIdentifier": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test"
  },
  "DroneAircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "AircraftMovementStatus": "harry's test",
  "ArrivalOrDeparture": "harry's test",
  "Comments": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Description": "harry's test"
}
flight-plan.tsx:122
Array [ "DroneAircraftMovement", "FlightOriginOrDestination" ]
 
Array [ "FlightOriginOrDestination" ]
 
Array [ "DroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "FlightOriginOrDestination": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "DestinationLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "DroneOperatorParty": [
    {
      "DroneOperatorPartyIdentification": {
        "Description": "harry's test",
        "Identifier": "harry's test"
      },
      "Remark": "harry's test"
    }
  ],
  "OriginLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "Route": [
    {
      "RouteSegment": {
        "Description": "harry's test",
        "Identifier": "harry's test",
        "RequestedFlightLevel": "harry's test",
        "RequestedFlightLevelPoint": "harry's test",
        "TrueAirspeed": "harry's test",
        "TrueAirspeedPoint": "harry's test"
      },
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "RouteInternationalDomestic": "harry's test",
      "RouteText": "harry's test",
      "StandardInstrumentDeparture": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    }
  ],
  "DroneAircraftMovementIdentification": {
    "DisplayedIdentifier": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test"
  },
  "DroneAircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "AircraftMovementStatus": "harry's test",
  "ArrivalOrDeparture": "harry's test",
  "Comments": "harry's test",
  "Description": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "FlightOriginOrDestination": "harry's test"
}
flight-plan.tsx:122
Array [ "DroneAircraftMovement", "Identifier" ]
 
Array [ "Identifier" ]
 
Array [ "DroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "Identifier": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "DestinationLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "DroneOperatorParty": [
    {
      "DroneOperatorPartyIdentification": {
        "Description": "harry's test",
        "Identifier": "harry's test"
      },
      "Remark": "harry's test"
    }
  ],
  "OriginLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "Route": [
    {
      "RouteSegment": {
        "Description": "harry's test",
        "Identifier": "harry's test",
        "RequestedFlightLevel": "harry's test",
        "RequestedFlightLevelPoint": "harry's test",
        "TrueAirspeed": "harry's test",
        "TrueAirspeedPoint": "harry's test"
      },
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "RouteInternationalDomestic": "harry's test",
      "RouteText": "harry's test",
      "StandardInstrumentDeparture": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    }
  ],
  "DroneAircraftMovementIdentification": {
    "DisplayedIdentifier": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test"
  },
  "DroneAircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "AircraftMovementStatus": "harry's test",
  "ArrivalOrDeparture": "harry's test",
  "Comments": "harry's test",
  "Description": "harry's test",
  "FlightOriginOrDestination": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Identifier": "harry's test"
}
flight-plan.tsx:122
Array [ "DroneAircraftMovement", "OperatedDateTime" ]
 
Array [ "OperatedDateTime" ]
 
Array [ "DroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "OperatedDateTime": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "DestinationLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "DroneOperatorParty": [
    {
      "DroneOperatorPartyIdentification": {
        "Description": "harry's test",
        "Identifier": "harry's test"
      },
      "Remark": "harry's test"
    }
  ],
  "OriginLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "Route": [
    {
      "RouteSegment": {
        "Description": "harry's test",
        "Identifier": "harry's test",
        "RequestedFlightLevel": "harry's test",
        "RequestedFlightLevelPoint": "harry's test",
        "TrueAirspeed": "harry's test",
        "TrueAirspeedPoint": "harry's test"
      },
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "RouteInternationalDomestic": "harry's test",
      "RouteText": "harry's test",
      "StandardInstrumentDeparture": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    }
  ],
  "DroneAircraftMovementIdentification": {
    "DisplayedIdentifier": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test"
  },
  "DroneAircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "AircraftMovementStatus": "harry's test",
  "ArrivalOrDeparture": "harry's test",
  "Comments": "harry's test",
  "Description": "harry's test",
  "FlightOriginOrDestination": "harry's test",
  "Identifier": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "OperatedDateTime": "harry's test"
}
flight-plan.tsx:122
Array [ "DroneAircraftMovement", "Priority" ]
 
Array [ "Priority" ]
 
Array [ "DroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "Priority": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "DestinationLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "DroneOperatorParty": [
    {
      "DroneOperatorPartyIdentification": {
        "Description": "harry's test",
        "Identifier": "harry's test"
      },
      "Remark": "harry's test"
    }
  ],
  "OriginLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "Route": [
    {
      "RouteSegment": {
        "Description": "harry's test",
        "Identifier": "harry's test",
        "RequestedFlightLevel": "harry's test",
        "RequestedFlightLevelPoint": "harry's test",
        "TrueAirspeed": "harry's test",
        "TrueAirspeedPoint": "harry's test"
      },
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "RouteInternationalDomestic": "harry's test",
      "RouteText": "harry's test",
      "StandardInstrumentDeparture": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    }
  ],
  "DroneAircraftMovementIdentification": {
    "DisplayedIdentifier": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test"
  },
  "DroneAircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "AircraftMovementStatus": "harry's test",
  "ArrivalOrDeparture": "harry's test",
  "Comments": "harry's test",
  "Description": "harry's test",
  "FlightOriginOrDestination": "harry's test",
  "Identifier": "harry's test",
  "OperatedDateTime": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Priority": "harry's test"
}
flight-plan.tsx:122
Array [ "DroneAircraftMovement", "ScheduledDateTime" ]
 
Array [ "ScheduledDateTime" ]
 
Array [ "DroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "DroneAircraftMovement": {
    "ScheduledDateTime": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "DestinationLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "DroneOperatorParty": [
    {
      "DroneOperatorPartyIdentification": {
        "Description": "harry's test",
        "Identifier": "harry's test"
      },
      "Remark": "harry's test"
    }
  ],
  "OriginLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "Route": [
    {
      "RouteSegment": {
        "Description": "harry's test",
        "Identifier": "harry's test",
        "RequestedFlightLevel": "harry's test",
        "RequestedFlightLevelPoint": "harry's test",
        "TrueAirspeed": "harry's test",
        "TrueAirspeedPoint": "harry's test"
      },
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "RouteInternationalDomestic": "harry's test",
      "RouteText": "harry's test",
      "StandardInstrumentDeparture": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    }
  ],
  "DroneAircraftMovementIdentification": {
    "DisplayedIdentifier": "harry's test",
    "Number": "harry's test",
    "ScheduledDateTime": "harry's test"
  },
  "DroneAircraftMovementStatus": {
    "Cancelled": "harry's test",
    "Cleared": "harry's test",
    "Code": "harry's test",
    "DeicingStatus": "harry's test",
    "Deleted": "harry's test",
    "OperationalStatus": "harry's test",
    "PublicStatus": "harry's test",
    "Regulated": "harry's test"
  },
  "OperationalTimes": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test",
    "TargetTakeOffTimeTTOT": "harry's test"
  },
  "AircraftMovementStatus": "harry's test",
  "ArrivalOrDeparture": "harry's test",
  "Comments": "harry's test",
  "Description": "harry's test",
  "FlightOriginOrDestination": "harry's test",
  "Identifier": "harry's test",
  "OperatedDateTime": "harry's test",
  "Priority": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "ScheduledDateTime": "harry's test"
}
flight-plan.tsx:122
Array(6) [ "ScheduledDroneAircraftMovement", "Activity", 0, "ActivityType", 0, "Description" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "Activity", 0, "ActivityType", 0, "Description" ]
 
Array []
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "Activity": [
      {
        "ActivityType": [
          {
            "Description": "harry's test"
          }
        ]
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange 
{
  "operatingAirline": {
    "iataCode": "harry's test",
    "icaoCode": "harry's test",
    "name": "harry's test"
  },
  "flightNumber": {
    "airlineCode": "harry's test",
    "trackNumber": "harry's test",
    "suffix": "harry's test"
  },
  "AircraftMovement": {
    "AircraftMovementStatus": {
      "Cancelled": "harry's test",
      "Cleared": "harry's test",
      "Code": "harry's test",
      "DeicingStatus": "harry's test",
      "Deleted": "harry's test",
      "OperationalStatus": "harry's test",
      "PublicStatus": "harry's test",
      "Regulated": "harry's test"
    },
    "AircraftMovementIdentification": {
      "AircraftMovementCodeShare": {
        "Number": "harry's test",
        "ShowToPublic": ""
      },
      "AirTrafficControlCallsign": "harry's test",
      "DisplayedIdentifier": "harry's test",
      "IATAFlightNumber": "harry's test",
      "IATAOperatorIdentifier": "harry's test",
      "ICAOIdentifier": "harry's test",
      "ICAONumber": "harry's test…
flight-plan.tsx:121
objectToAdd {
  "ScheduledDroneAircraftMovement": {
    "Activity": [
      {
        "ActivityType": [
          {
            "Description": "harry's test"
          }
        ]
      }
    ]
  }
}
flight-plan.tsx:122
Array(6) [ "ScheduledDroneAircraftMovement", "Activity", 0, "ActivityType", 0, "Value" ]
 
Array [ 0, "Value" ]
 
Array(4) [ "ScheduledDroneAircraftMovement", "Activity", 0, "ActivityType" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "Activity": [
      {
        "ActivityType": [
          {
            "Value": "harry's test"
          }
        ]
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "Description": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "Value": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "Activity", 0, "Description" ]
 
Array [ 0, "Description" ]
 
Array [ "ScheduledDroneAircraftMovement", "Activity" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "Activity": [
      {
        "Description": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "ActivityType": [
      {
        "Description": "harry's test",
        "Value": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "Description": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "Activity", 0, "Value" ]
 
Array [ 0, "Value" ]
 
Array [ "ScheduledDroneAircraftMovement", "Activity" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "Activity": [
      {
        "Value": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "ActivityType": [
      {
        "Description": "harry's test",
        "Value": "harry's test"
      }
    ],
    "Description": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "Value": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "DroneAircraftMovementRuleType", 0, "Code" ]
 
Array(3) [ "DroneAircraftMovementRuleType", 0, "Code" ]
 
Array [ "ScheduledDroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "DroneAircraftMovementRuleType": [
      {
        "Code": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "Activity": [
    {
      "ActivityType": [
        {
          "Description": "harry's test",
          "Value": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Value": "harry's test"
    }
  ]
}
flight-plan.tsx:121
objectToAdd {
  "DroneAircraftMovementRuleType": [
    {
      "Code": "harry's test"
    }
  ]
}
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "DroneAircraftMovementRuleType", 0, "Description" ]
 
Array [ 0, "Description" ]
 
Array [ "ScheduledDroneAircraftMovement", "DroneAircraftMovementRuleType" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "DroneAircraftMovementRuleType": [
      {
        "Description": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "Code": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "Description": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "DroneAircraftMovementType", 0, "Code" ]
 
Array(3) [ "DroneAircraftMovementType", 0, "Code" ]
 
Array [ "ScheduledDroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "DroneAircraftMovementType": [
      {
        "Code": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "Activity": [
    {
      "ActivityType": [
        {
          "Description": "harry's test",
          "Value": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Value": "harry's test"
    }
  ],
  "DroneAircraftMovementRuleType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ]
}
flight-plan.tsx:121
objectToAdd {
  "DroneAircraftMovementType": [
    {
      "Code": "harry's test"
    }
  ]
}
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "DroneAircraftMovementType", 0, "Description" ]
 
Array [ 0, "Description" ]
 
Array [ "ScheduledDroneAircraftMovement", "DroneAircraftMovementType" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "DroneAircraftMovementType": [
      {
        "Description": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "Code": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "Description": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport", 0, "FutureMaximumTakeOffWeight" ]
 
Array(3) [ "DroneAircraftTransport", 0, "FutureMaximumTakeOffWeight" ]
 
Array [ "ScheduledDroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "DroneAircraftTransport": [
      {
        "FutureMaximumTakeOffWeight": 1.1
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "Activity": [
    {
      "ActivityType": [
        {
          "Description": "harry's test",
          "Value": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Value": "harry's test"
    }
  ],
  "DroneAircraftMovementRuleType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "DroneAircraftMovementType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ]
}
flight-plan.tsx:121
objectToAdd {
  "DroneAircraftTransport": [
    {
      "FutureMaximumTakeOffWeight": 1.1
    }
  ]
}
flight-plan.tsx:122
Array(7) [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport", 0, "AircraftTransportEquipment", 0, "AircraftTransportEquipmentCategory", "Description" ]
 
Array(5) [ 0, "AircraftTransportEquipment", 0, "AircraftTransportEquipmentCategory", "Description" ]
 
Array [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "DroneAircraftTransport": [
      {
        "AircraftTransportEquipment": [
          {
            "AircraftTransportEquipmentCategory": {
              "Description": "harry's test"
            }
          }
        ]
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "FutureMaximumTakeOffWeight": 1.1
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "AircraftTransportEquipment": [
      {
        "AircraftTransportEquipmentCategory": {
          "Description": "harry's test"
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(7) [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport", 0, "AircraftTransportEquipment", 0, "AircraftTransportEquipmentCategory", "Identifier" ]
 
Array(5) [ 0, "AircraftTransportEquipment", 0, "AircraftTransportEquipmentCategory", "Identifier" ]
 
Array [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "DroneAircraftTransport": [
      {
        "AircraftTransportEquipment": [
          {
            "AircraftTransportEquipmentCategory": {
              "Identifier": "harry's test"
            }
          }
        ]
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "FutureMaximumTakeOffWeight": 1.1,
    "AircraftTransportEquipment": [
      {
        "AircraftTransportEquipmentCategory": {
          "Description": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "AircraftTransportEquipment": [
      {
        "AircraftTransportEquipmentCategory": {
          "Identifier": "harry's test"
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(7) [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport", 0, "AircraftTransportEquipment", 0, "AircraftTransportEquipmentType", "Description" ]
 
Array(5) [ 0, "AircraftTransportEquipment", 0, "AircraftTransportEquipmentType", "Description" ]
 
Array [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "DroneAircraftTransport": [
      {
        "AircraftTransportEquipment": [
          {
            "AircraftTransportEquipmentType": {
              "Description": "harry's test"
            }
          }
        ]
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "FutureMaximumTakeOffWeight": 1.1,
    "AircraftTransportEquipment": [
      {
        "AircraftTransportEquipmentCategory": {
          "Identifier": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "AircraftTransportEquipment": [
      {
        "AircraftTransportEquipmentType": {
          "Description": "harry's test"
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(7) [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport", 0, "AircraftTransportEquipment", 0, "AircraftTransportEquipmentType", "Identifier" ]
 
Array(5) [ 0, "AircraftTransportEquipment", 0, "AircraftTransportEquipmentType", "Identifier" ]
 
Array [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "DroneAircraftTransport": [
      {
        "AircraftTransportEquipment": [
          {
            "AircraftTransportEquipmentType": {
              "Identifier": "harry's test"
            }
          }
        ]
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "FutureMaximumTakeOffWeight": 1.1,
    "AircraftTransportEquipment": [
      {
        "AircraftTransportEquipmentType": {
          "Description": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "AircraftTransportEquipment": [
      {
        "AircraftTransportEquipmentType": {
          "Identifier": "harry's test"
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(6) [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport", 0, "AircraftTransportEquipment", 0, "Description" ]
 
Array(4) [ 0, "AircraftTransportEquipment", 0, "Description" ]
 
Array [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "DroneAircraftTransport": [
      {
        "AircraftTransportEquipment": [
          {
            "Description": "harry's test"
          }
        ]
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "FutureMaximumTakeOffWeight": 1.1,
    "AircraftTransportEquipment": [
      {
        "AircraftTransportEquipmentType": {
          "Identifier": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "AircraftTransportEquipment": [
      {
        "Description": "harry's test"
      }
    ]
  }
]
flight-plan.tsx:122
Array(6) [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport", 0, "AircraftTransportEquipment", 0, "Identifier" ]
 
Array(4) [ 0, "AircraftTransportEquipment", 0, "Identifier" ]
 
Array [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "DroneAircraftTransport": [
      {
        "AircraftTransportEquipment": [
          {
            "Identifier": "harry's test"
          }
        ]
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "FutureMaximumTakeOffWeight": 1.1,
    "AircraftTransportEquipment": [
      {
        "Description": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "AircraftTransportEquipment": [
      {
        "Identifier": "harry's test"
      }
    ]
  }
]
flight-plan.tsx:122
Array(6) [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport", 0, "AircraftTransportEquipment", 0, "Mode" ]
 
Array(4) [ 0, "AircraftTransportEquipment", 0, "Mode" ]
 
Array [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "DroneAircraftTransport": [
      {
        "AircraftTransportEquipment": [
          {
            "Mode": "harry's test"
          }
        ]
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "FutureMaximumTakeOffWeight": 1.1,
    "AircraftTransportEquipment": [
      {
        "Identifier": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "AircraftTransportEquipment": [
      {
        "Mode": "harry's test"
      }
    ]
  }
]
flight-plan.tsx:122
Array(6) [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport", 0, "DroneAircraftTransportType", 0, "Description" ]
 
Array(4) [ 0, "DroneAircraftTransportType", 0, "Description" ]
 
Array [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "DroneAircraftTransport": [
      {
        "DroneAircraftTransportType": [
          {
            "Description": "harry's test"
          }
        ]
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "FutureMaximumTakeOffWeight": 1.1,
    "AircraftTransportEquipment": [
      {
        "Mode": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "DroneAircraftTransportType": [
      {
        "Description": "harry's test"
      }
    ]
  }
]
flight-plan.tsx:122
Array(6) [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport", 0, "DroneAircraftTransportType", 0, "Name" ]
 
Array(4) [ 0, "DroneAircraftTransportType", 0, "Name" ]
 
Array [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "DroneAircraftTransport": [
      {
        "DroneAircraftTransportType": [
          {
            "Name": "harry's test"
          }
        ]
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "FutureMaximumTakeOffWeight": 1.1,
    "AircraftTransportEquipment": [
      {
        "Mode": "harry's test"
      }
    ],
    "DroneAircraftTransportType": [
      {
        "Description": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "DroneAircraftTransportType": [
      {
        "Name": "harry's test"
      }
    ]
  }
]
flight-plan.tsx:122
Array(6) [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport", 0, "DroneAircraftTransportType", 0, "Value" ]
 
Array(4) [ 0, "DroneAircraftTransportType", 0, "Value" ]
 
Array [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "DroneAircraftTransport": [
      {
        "DroneAircraftTransportType": [
          {
            "Value": "harry's test"
          }
        ]
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "FutureMaximumTakeOffWeight": 1.1,
    "AircraftTransportEquipment": [
      {
        "Mode": "harry's test"
      }
    ],
    "DroneAircraftTransportType": [
      {
        "Name": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "DroneAircraftTransportType": [
      {
        "Value": "harry's test"
      }
    ]
  }
]
flight-plan.tsx:122
Array(5) [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport", 0, "DroneAircraftTransportIdentification", "AircraftBodyType" ]
 
Array(3) [ 0, "DroneAircraftTransportIdentification", "AircraftBodyType" ]
 
Array [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "DroneAircraftTransport": [
      {
        "DroneAircraftTransportIdentification": {
          "AircraftBodyType": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "FutureMaximumTakeOffWeight": 1.1,
    "AircraftTransportEquipment": [
      {
        "Mode": "harry's test"
      }
    ],
    "DroneAircraftTransportType": [
      {
        "Value": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "DroneAircraftTransportIdentification": {
      "AircraftBodyType": "harry's test"
    }
  }
]
flight-plan.tsx:122
Array(5) [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport", 0, "DroneAircraftTransportIdentification", "AircraftVersion" ]
 
Array(3) [ 0, "DroneAircraftTransportIdentification", "AircraftVersion" ]
 
Array [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "DroneAircraftTransport": [
      {
        "DroneAircraftTransportIdentification": {
          "AircraftVersion": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "FutureMaximumTakeOffWeight": 1.1,
    "AircraftTransportEquipment": [
      {
        "Mode": "harry's test"
      }
    ],
    "DroneAircraftTransportType": [
      {
        "Value": "harry's test"
      }
    ],
    "DroneAircraftTransportIdentification": {
      "AircraftBodyType": "harry's test"
    }
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "DroneAircraftTransportIdentification": {
      "AircraftVersion": "harry's test"
    }
  }
]
flight-plan.tsx:122
Array(5) [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport", 0, "DroneAircraftTransportIdentification", "CodeRequired" ]
 
Array(3) [ 0, "DroneAircraftTransportIdentification", "CodeRequired" ]
 
Array [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "DroneAircraftTransport": [
      {
        "DroneAircraftTransportIdentification": {
          "CodeRequired": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "FutureMaximumTakeOffWeight": 1.1,
    "AircraftTransportEquipment": [
      {
        "Mode": "harry's test"
      }
    ],
    "DroneAircraftTransportType": [
      {
        "Value": "harry's test"
      }
    ],
    "DroneAircraftTransportIdentification": {
      "AircraftVersion": "harry's test"
    }
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "DroneAircraftTransportIdentification": {
      "CodeRequired": "harry's test"
    }
  }
]
flight-plan.tsx:122
Array(5) [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport", 0, "DroneAircraftTransportIdentification", "GeneralTypeCode" ]
 
Array(3) [ 0, "DroneAircraftTransportIdentification", "GeneralTypeCode" ]
 
Array [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "DroneAircraftTransport": [
      {
        "DroneAircraftTransportIdentification": {
          "GeneralTypeCode": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "FutureMaximumTakeOffWeight": 1.1,
    "AircraftTransportEquipment": [
      {
        "Mode": "harry's test"
      }
    ],
    "DroneAircraftTransportType": [
      {
        "Value": "harry's test"
      }
    ],
    "DroneAircraftTransportIdentification": {
      "CodeRequired": "harry's test"
    }
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "DroneAircraftTransportIdentification": {
      "GeneralTypeCode": "harry's test"
    }
  }
]
flight-plan.tsx:122
Array(5) [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport", 0, "DroneAircraftTransportIdentification", "GroupCode" ]
 
Array(3) [ 0, "DroneAircraftTransportIdentification", "GroupCode" ]
 
Array [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "DroneAircraftTransport": [
      {
        "DroneAircraftTransportIdentification": {
          "GroupCode": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "FutureMaximumTakeOffWeight": 1.1,
    "AircraftTransportEquipment": [
      {
        "Mode": "harry's test"
      }
    ],
    "DroneAircraftTransportType": [
      {
        "Value": "harry's test"
      }
    ],
    "DroneAircraftTransportIdentification": {
      "GeneralTypeCode": "harry's test"
    }
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "DroneAircraftTransportIdentification": {
      "GroupCode": "harry's test"
    }
  }
]
flight-plan.tsx:122
Array(5) [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport", 0, "DroneAircraftTransportIdentification", "OtherIdentifier" ]
 
Array(3) [ 0, "DroneAircraftTransportIdentification", "OtherIdentifier" ]
 
Array [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "DroneAircraftTransport": [
      {
        "DroneAircraftTransportIdentification": {
          "OtherIdentifier": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "FutureMaximumTakeOffWeight": 1.1,
    "AircraftTransportEquipment": [
      {
        "Mode": "harry's test"
      }
    ],
    "DroneAircraftTransportType": [
      {
        "Value": "harry's test"
      }
    ],
    "DroneAircraftTransportIdentification": {
      "GroupCode": "harry's test"
    }
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "DroneAircraftTransportIdentification": {
      "OtherIdentifier": "harry's test"
    }
  }
]
flight-plan.tsx:122
Array(5) [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport", 0, "DroneAircraftTransportIdentification", "Registration" ]
 
Array(3) [ 0, "DroneAircraftTransportIdentification", "Registration" ]
 
Array [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "DroneAircraftTransport": [
      {
        "DroneAircraftTransportIdentification": {
          "Registration": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "FutureMaximumTakeOffWeight": 1.1,
    "AircraftTransportEquipment": [
      {
        "Mode": "harry's test"
      }
    ],
    "DroneAircraftTransportType": [
      {
        "Value": "harry's test"
      }
    ],
    "DroneAircraftTransportIdentification": {
      "OtherIdentifier": "harry's test"
    }
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "DroneAircraftTransportIdentification": {
      "Registration": "harry's test"
    }
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport", 0, "AircraftDescription" ]
 
Array [ 0, "AircraftDescription" ]
 
Array [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "DroneAircraftTransport": [
      {
        "AircraftDescription": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "FutureMaximumTakeOffWeight": 1.1,
    "AircraftTransportEquipment": [
      {
        "Mode": "harry's test"
      }
    ],
    "DroneAircraftTransportType": [
      {
        "Value": "harry's test"
      }
    ],
    "DroneAircraftTransportIdentification": {
      "Registration": "harry's test"
    }
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "AircraftDescription": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport", 0, "Mode" ]
 
Array [ 0, "Mode" ]
 
Array [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "DroneAircraftTransport": [
      {
        "Mode": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "FutureMaximumTakeOffWeight": 1.1,
    "AircraftTransportEquipment": [
      {
        "Mode": "harry's test"
      }
    ],
    "DroneAircraftTransportType": [
      {
        "Value": "harry's test"
      }
    ],
    "DroneAircraftTransportIdentification": {
      "Registration": "harry's test"
    },
    "AircraftDescription": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "Mode": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport", 0, "GuidanceRequired" ]
 
Array [ 0, "GuidanceRequired" ]
 
Array [ "ScheduledDroneAircraftMovement", "DroneAircraftTransport" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "DroneAircraftTransport": [
      {
        "GuidanceRequired": ""
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "FutureMaximumTakeOffWeight": 1.1,
    "AircraftTransportEquipment": [
      {
        "Mode": "harry's test"
      }
    ],
    "DroneAircraftTransportType": [
      {
        "Value": "harry's test"
      }
    ],
    "DroneAircraftTransportIdentification": {
      "Registration": "harry's test"
    },
    "AircraftDescription": "harry's test",
    "Mode": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "GuidanceRequired": ""
  }
]
flight-plan.tsx:122
Array(5) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "AircraftMovementMeasure", "Code" ]
 
Array(4) [ "OperationalTimes", 0, "AircraftMovementMeasure", "Code" ]
 
Array [ "ScheduledDroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "AircraftMovementMeasure": {
          "Code": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "Activity": [
    {
      "ActivityType": [
        {
          "Description": "harry's test",
          "Value": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Value": "harry's test"
    }
  ],
  "DroneAircraftMovementRuleType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "DroneAircraftMovementType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "DroneAircraftTransport": [
    {
      "FutureMaximumTakeOffWeight": 1.1,
      "AircraftTransportEquipment": [
        {
          "Mode": "harry's test"
        }
      ],
      "DroneAircraftTransportType": [
        {
          "Value": "harry's test"
        }
      ],
      "DroneAircraftTransportIdentification": {
        "Registration": "harry's test"
      },
      "AircraftDescription": "harry's test",
      "Mode": "harry's test",
      "GuidanceRequired": ""
    }
  ]
}
flight-plan.tsx:121
objectToAdd {
  "OperationalTimes": [
    {
      "AircraftMovementMeasure": {
        "Code": "harry's test"
      }
    }
  ]
}
flight-plan.tsx:122
Array(5) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "AircraftMovementMeasure", "Description" ]
 
Array [ "Description" ]
 
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "AircraftMovementMeasure" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "AircraftMovementMeasure": {
          "Description": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "Code": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Description": "harry's test"
}
flight-plan.tsx:122
Array(5) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "AircraftMovementMeasure", "Identifier" ]
 
Array [ "Identifier" ]
 
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "AircraftMovementMeasure" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "AircraftMovementMeasure": {
          "Identifier": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "Code": "harry's test",
  "Description": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Identifier": "harry's test"
}
flight-plan.tsx:122
Array(5) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "AircraftMovementMeasure", "Name" ]
 
Array [ "Name" ]
 
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "AircraftMovementMeasure" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "AircraftMovementMeasure": {
          "Name": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "Code": "harry's test",
  "Description": "harry's test",
  "Identifier": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Name": "harry's test"
}
flight-plan.tsx:122
Array(5) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "AircraftMovementMeasure", "Title" ]
 
Array [ "Title" ]
 
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "AircraftMovementMeasure" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "AircraftMovementMeasure": {
          "Title": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "Code": "harry's test",
  "Description": "harry's test",
  "Identifier": "harry's test",
  "Name": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Title": "harry's test"
}
flight-plan.tsx:122
Array(5) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "AircraftMovementMeasure", "Value" ]
 
Array [ "Value" ]
 
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "AircraftMovementMeasure" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "AircraftMovementMeasure": {
          "Value": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "Code": "harry's test",
  "Description": "harry's test",
  "Identifier": "harry's test",
  "Name": "harry's test",
  "Title": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Value": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "ActualCommenceofGroundHandlingTimeACGT" ]
 
Array [ 0, "ActualCommenceofGroundHandlingTimeACGT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "ActualCommenceofGroundHandlingTimeACGT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    }
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "ActualCommencementofDeicingTimeACZT" ]
 
Array [ 0, "ActualCommencementofDeicingTimeACZT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "ActualCommencementofDeicingTimeACZT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "ActualCommencementofDeicingTimeACZT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "ActualDeIcingDurationADIT" ]
 
Array [ 0, "ActualDeIcingDurationADIT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "ActualDeIcingDurationADIT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "ActualDeIcingDurationADIT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "ActualEndBoardingTimeAEBT" ]
 
Array [ 0, "ActualEndBoardingTimeAEBT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "ActualEndBoardingTimeAEBT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "ActualEndBoardingTimeAEBT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "ActualEndofDeicingTimeAEZT" ]
 
Array [ 0, "ActualEndofDeicingTimeAEZT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "ActualEndofDeicingTimeAEZT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "ActualEndofDeicingTimeAEZT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "ActualEndofGroundHandlingTimeAEGT" ]
 
Array [ 0, "ActualEndofGroundHandlingTimeAEGT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "ActualEndofGroundHandlingTimeAEGT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "ActualEndofGroundHandlingTimeAEGT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "ActualFinalApproachTimeAFAT" ]
 
Array [ 0, "ActualFinalApproachTimeAFAT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "ActualFinalApproachTimeAFAT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "ActualFinalApproachTimeAFAT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "ActualGroundHandlingDurationAGHT" ]
 
Array [ 0, "ActualGroundHandlingDurationAGHT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "ActualGroundHandlingDurationAGHT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "ActualGroundHandlingDurationAGHT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "ActualInBlockTimeAIBT" ]
 
Array [ 0, "ActualInBlockTimeAIBT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "ActualInBlockTimeAIBT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "ActualInBlockTimeAIBT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "ActualLandingTimeALDT" ]
 
Array [ 0, "ActualLandingTimeALDT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "ActualLandingTimeALDT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "ActualLandingTimeALDT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "ActualLastCallTime" ]
 
Array [ 0, "ActualLastCallTime" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "ActualLastCallTime": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "ActualLastCallTime": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "ActualOffBlockTimeAOBT" ]
 
Array [ 0, "ActualOffBlockTimeAOBT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "ActualOffBlockTimeAOBT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "ActualOffBlockTimeAOBT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "ActualReadyforDeicingTimeARZT" ]
 
Array [ 0, "ActualReadyforDeicingTimeARZT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "ActualReadyforDeicingTimeARZT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "ActualReadyforDeicingTimeARZT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "ActualReadyforDepartureTimeARDT" ]
 
Array [ 0, "ActualReadyforDepartureTimeARDT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "ActualReadyforDepartureTimeARDT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "ActualReadyforDepartureTimeARDT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "ActualStartBoardingTimeASBT" ]
 
Array [ 0, "ActualStartBoardingTimeASBT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "ActualStartBoardingTimeASBT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "ActualStartBoardingTimeASBT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "ActualStartUpApprovalTimeASAT" ]
 
Array [ 0, "ActualStartUpApprovalTimeASAT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "ActualStartUpApprovalTimeASAT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "ActualStartUpApprovalTimeASAT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "ActualStartUpRequestTimeASRT" ]
 
Array [ 0, "ActualStartUpRequestTimeASRT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "ActualStartUpRequestTimeASRT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "ActualStartUpRequestTimeASRT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "ActualTakeOffTimeATOT" ]
 
Array [ 0, "ActualTakeOffTimeATOT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "ActualTakeOffTimeATOT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "ActualTakeOffTimeATOT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "ActualTaxiInDurationAXIT" ]
 
Array [ 0, "ActualTaxiInDurationAXIT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "ActualTaxiInDurationAXIT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "ActualTaxiInDurationAXIT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "ActualTaxiOutDurationAXOT" ]
 
Array [ 0, "ActualTaxiOutDurationAXOT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "ActualTaxiOutDurationAXOT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "ActualTaxiOutDurationAXOT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "ActualTimeOfOperationLastPortOfCallLPocATO" ]
 
Array [ 0, "ActualTimeOfOperationLastPortOfCallLPocATO" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "ActualTurnaroundTimeATTT" ]
 
Array [ 0, "ActualTurnaroundTimeATTT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "ActualTurnaroundTimeATTT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "ActualTurnaroundTimeATTT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "CalculatedTakeOffTimeCTOT" ]
 
Array [ 0, "CalculatedTakeOffTimeCTOT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "CalculatedTakeOffTimeCTOT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "CalculatedTakeOffTimeCTOT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "EntryintoApproachZoneTime" ]
 
Array [ 0, "EntryintoApproachZoneTime" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "EntryintoApproachZoneTime": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "EntryintoApproachZoneTime": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "EstimatedCommencementofDeIcingTimeECZT" ]
 
Array [ 0, "EstimatedCommencementofDeIcingTimeECZT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "EstimatedCommencementofDeIcingTimeECZT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "EstimatedDeIcingDurationEDIT" ]
 
Array [ 0, "EstimatedDeIcingDurationEDIT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "EstimatedDeIcingDurationEDIT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "EstimatedDeIcingDurationEDIT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "EstimatedEndBoardingTimeEEBT" ]
 
Array [ 0, "EstimatedEndBoardingTimeEEBT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "EstimatedEndBoardingTimeEEBT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "EstimatedEndBoardingTimeEEBT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "EstimatedEndofDeicingTimeEEZT" ]
 
Array [ 0, "EstimatedEndofDeicingTimeEEZT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "EstimatedEndofDeicingTimeEEZT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "EstimatedEndofDeicingTimeEEZT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "EstimatedInBlockTimeEIBT" ]
 
Array [ 0, "EstimatedInBlockTimeEIBT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "EstimatedInBlockTimeEIBT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "EstimatedInBlockTimeEIBT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "EstimatedLandingTimeELDT" ]
 
Array [ 0, "EstimatedLandingTimeELDT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "EstimatedLandingTimeELDT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "EstimatedLandingTimeELDT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "EstimatedLastCallTime" ]
 
Array [ 0, "EstimatedLastCallTime" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "EstimatedLastCallTime": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "EstimatedLastCallTime": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "EstimatedOffBlockTimeEOBT" ]
 
Array [ 0, "EstimatedOffBlockTimeEOBT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "EstimatedOffBlockTimeEOBT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "EstimatedOffBlockTimeEOBT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "EstimatedReadyforDeicingTimeERZT" ]
 
Array [ 0, "EstimatedReadyforDeicingTimeERZT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "EstimatedReadyforDeicingTimeERZT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "EstimatedReadyforDeicingTimeERZT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "EstimatedStartBoardingTime" ]
 
Array [ 0, "EstimatedStartBoardingTime" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "EstimatedStartBoardingTime": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "EstimatedStartBoardingTime": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "EstimatedTakeOffTimeETOT" ]
 
Array [ 0, "EstimatedTakeOffTimeETOT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "EstimatedTakeOffTimeETOT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "EstimatedTakeOffTimeETOT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "EstimatedTaxiInDurationEXIT" ]
 
Array [ 0, "EstimatedTaxiInDurationEXIT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "EstimatedTaxiInDurationEXIT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "EstimatedTaxiInDurationEXIT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "EstimatedTaxiOutDurationEXOT" ]
 
Array [ 0, "EstimatedTaxiOutDurationEXOT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "EstimatedTaxiOutDurationEXOT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "EstimatedTaxiOutDurationEXOT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "EstimatedTurnAroundDurationETTT" ]
 
Array [ 0, "EstimatedTurnAroundDurationETTT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "EstimatedTurnAroundDurationETTT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "EstimatedTurnAroundDurationETTT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "MinimumTurnAroundTimeMTTT" ]
 
Array [ 0, "MinimumTurnAroundTimeMTTT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "MinimumTurnAroundTimeMTTT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "MinimumTurnAroundTimeMTTT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "PlannedLastCallTime" ]
 
Array [ 0, "PlannedLastCallTime" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "PlannedLastCallTime": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "PlannedLastCallTime": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "PlannedStartBoardingTime" ]
 
Array [ 0, "PlannedStartBoardingTime" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "PlannedStartBoardingTime": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "PlannedStartBoardingTime": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "ScheduledInBlockTimeSIBT" ]
 
Array [ 0, "ScheduledInBlockTimeSIBT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "ScheduledInBlockTimeSIBT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "ScheduledInBlockTimeSIBT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "ScheduledOffBlockTimeSOBT" ]
 
Array [ 0, "ScheduledOffBlockTimeSOBT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "ScheduledOffBlockTimeSOBT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "ScheduledOffBlockTimeSOBT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "ScheduledTurnAroundDurationSTTT" ]
 
Array [ 0, "ScheduledTurnAroundDurationSTTT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "ScheduledTurnAroundDurationSTTT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "ScheduledTurnAroundDurationSTTT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "TargetLandingTimeTLDT" ]
 
Array [ 0, "TargetLandingTimeTLDT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "TargetLandingTimeTLDT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "TargetLandingTimeTLDT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "TargetOffBlockTimeTOBT" ]
 
Array [ 0, "TargetOffBlockTimeTOBT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "TargetOffBlockTimeTOBT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "TargetOffBlockTimeTOBT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "TargetStartUpApprovalTimeTSAT" ]
 
Array [ 0, "TargetStartUpApprovalTimeTSAT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "TargetStartUpApprovalTimeTSAT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "TargetStartUpApprovalTimeTSAT": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "OperationalTimes", 0, "TargetTakeOffTimeTTOT" ]
 
Array [ 0, "TargetTakeOffTimeTTOT" ]
 
Array [ "ScheduledDroneAircraftMovement", "OperationalTimes" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OperationalTimes": [
      {
        "TargetTakeOffTimeTTOT": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "AircraftMovementMeasure": {
      "Code": "harry's test",
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Name": "harry's test",
      "Title": "harry's test",
      "Value": "harry's test"
    },
    "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
    "ActualCommencementofDeicingTimeACZT": "harry's test",
    "ActualDeIcingDurationADIT": "harry's test",
    "ActualEndBoardingTimeAEBT": "harry's test",
    "ActualEndofDeicingTimeAEZT": "harry's test",
    "ActualEndofGroundHandlingTimeAEGT": "harry's test",
    "ActualFinalApproachTimeAFAT": "harry's test",
    "ActualGroundHandlingDurationAGHT": "harry's test",
    "ActualInBlockTimeAIBT": "harry's test",
    "ActualLandingTimeALDT": "harry's test",
    "ActualLastCallTime": "harry's test",
    "ActualOffBlockTimeAOBT": "harry's test",
    "ActualReadyforDeicingTimeARZT": "harry's test",
    "ActualReadyforDepartureTimeARDT": "harry's test",
    "ActualStartBoardingTimeASBT": "harry's test",
    "ActualStartUpApprovalTimeASAT": "harry's test",
    "ActualStartUpRequestTimeASRT": "harry's test",
    "ActualTakeOffTimeATOT": "harry's test",
    "ActualTaxiInDurationAXIT": "harry's test",
    "ActualTaxiOutDurationAXOT": "harry's test",
    "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
    "ActualTurnaroundTimeATTT": "harry's test",
    "CalculatedTakeOffTimeCTOT": "harry's test",
    "EntryintoApproachZoneTime": "harry's test",
    "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
    "EstimatedDeIcingDurationEDIT": "harry's test",
    "EstimatedEndBoardingTimeEEBT": "harry's test",
    "EstimatedEndofDeicingTimeEEZT": "harry's test",
    "EstimatedInBlockTimeEIBT": "harry's test",
    "EstimatedLandingTimeELDT": "harry's test",
    "EstimatedLastCallTime": "harry's test",
    "EstimatedOffBlockTimeEOBT": "harry's test",
    "EstimatedReadyforDeicingTimeERZT": "harry's test",
    "EstimatedStartBoardingTime": "harry's test",
    "EstimatedTakeOffTimeETOT": "harry's test",
    "EstimatedTaxiInDurationEXIT": "harry's test",
    "EstimatedTaxiOutDurationEXOT": "harry's test",
    "EstimatedTurnAroundDurationETTT": "harry's test",
    "MinimumTurnAroundTimeMTTT": "harry's test",
    "PlannedLastCallTime": "harry's test",
    "PlannedStartBoardingTime": "harry's test",
    "ScheduledInBlockTimeSIBT": "harry's test",
    "ScheduledOffBlockTimeSOBT": "harry's test",
    "ScheduledTurnAroundDurationSTTT": "harry's test",
    "TargetLandingTimeTLDT": "harry's test",
    "TargetOffBlockTimeTOBT": "harry's test",
    "TargetStartUpApprovalTimeTSAT": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "TargetTakeOffTimeTTOT": "harry's test"
  }
]
flight-plan.tsx:122
Array(10) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialReferenceSystemType", 0, "Code" ]
 
Array(9) [ "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialReferenceSystemType", 0, "Code" ]
 
Array [ "ScheduledDroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedDestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialReferenceSystemType": [
                  {
                    "Code": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "Activity": [
    {
      "ActivityType": [
        {
          "Description": "harry's test",
          "Value": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Value": "harry's test"
    }
  ],
  "DroneAircraftMovementRuleType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "DroneAircraftMovementType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "DroneAircraftTransport": [
    {
      "FutureMaximumTakeOffWeight": 1.1,
      "AircraftTransportEquipment": [
        {
          "Mode": "harry's test"
        }
      ],
      "DroneAircraftTransportType": [
        {
          "Value": "harry's test"
        }
      ],
      "DroneAircraftTransportIdentification": {
        "Registration": "harry's test"
      },
      "AircraftDescription": "harry's test",
      "Mode": "harry's test",
      "GuidanceRequired": ""
    }
  ],
  "OperationalTimes": [
    {
      "AircraftMovementMeasure": {
        "Code": "harry's test",
        "Description": "harry's test",
        "Identifier": "harry's test",
        "Name": "harry's test",
        "Title": "harry's test",
        "Value": "harry's test"
      },
      "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
      "ActualCommencementofDeicingTimeACZT": "harry's test",
      "ActualDeIcingDurationADIT": "harry's test",
      "ActualEndBoardingTimeAEBT": "harry's test",
      "ActualEndofDeicingTimeAEZT": "harry's test",
      "ActualEndofGroundHandlingTimeAEGT": "harry's test",
      "ActualFinalApproachTimeAFAT": "harry's test",
      "ActualGroundHandlingDurationAGHT": "harry's test",
      "ActualInBlockTimeAIBT": "harry's test",
      "ActualLandingTimeALDT": "harry's test",
      "ActualLastCallTime": "harry's test",
      "ActualOffBlockTimeAOBT": "harry's test",
      "ActualReadyforDeicingTimeARZT": "harry's test",
      "ActualReadyforDepartureTimeARDT": "harry's test",
      "ActualStartBoardingTimeASBT": "harry's test",
      "ActualStartUpApprovalTimeASAT": "harry's test",
      "ActualStartUpRequestTimeASRT": "harry's test",
      "ActualTakeOffTimeATOT": "harry's test",
      "ActualTaxiInDurationAXIT": "harry's test",
      "ActualTaxiOutDurationAXOT": "harry's test",
      "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
      "ActualTurnaroundTimeATTT": "harry's test",
      "CalculatedTakeOffTimeCTOT": "harry's test",
      "EntryintoApproachZoneTime": "harry's test",
      "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
      "EstimatedDeIcingDurationEDIT": "harry's test",
      "EstimatedEndBoardingTimeEEBT": "harry's test",
      "EstimatedEndofDeicingTimeEEZT": "harry's test",
      "EstimatedInBlockTimeEIBT": "harry's test",
      "EstimatedLandingTimeELDT": "harry's test",
      "EstimatedLastCallTime": "harry's test",
      "EstimatedOffBlockTimeEOBT": "harry's test",
      "EstimatedReadyforDeicingTimeERZT": "harry's test",
      "EstimatedStartBoardingTime": "harry's test",
      "EstimatedTakeOffTimeETOT": "harry's test",
      "EstimatedTaxiInDurationEXIT": "harry's test",
      "EstimatedTaxiOutDurationEXOT": "harry's test",
      "EstimatedTurnAroundDurationETTT": "harry's test",
      "MinimumTurnAroundTimeMTTT": "harry's test",
      "PlannedLastCallTime": "harry's test",
      "PlannedStartBoardingTime": "harry's test",
      "ScheduledInBlockTimeSIBT": "harry's test",
      "ScheduledOffBlockTimeSOBT": "harry's test",
      "ScheduledTurnAroundDurationSTTT": "harry's test",
      "TargetLandingTimeTLDT": "harry's test",
      "TargetOffBlockTimeTOBT": "harry's test",
      "TargetStartUpApprovalTimeTSAT": "harry's test",
      "TargetTakeOffTimeTTOT": "harry's test"
    }
  ]
}
flight-plan.tsx:121
objectToAdd {
  "PlannedDestinationLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test"
                }
              ]
            }
          ]
        }
      }
    }
  ]
}
flight-plan.tsx:122
Array(10) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialReferenceSystemType", 0, "Description" ]
 
Array [ 0, "Description" ]
 
Array(8) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialReferenceSystemType" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedDestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialReferenceSystemType": [
                  {
                    "Description": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "Code": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "Description": "harry's test"
  }
]
flight-plan.tsx:122
Array(16) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(10) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "ChildNamedLocation", 0, "GeopoliticalLocationType", 0, "Description" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedDestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "ChildNamedLocation": [
                          {
                            "GeopoliticalLocationType": [
                              {
                                "Description": "harry's test"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ChildNamedLocation": [
              {
                "GeopoliticalLocationType": [
                  {
                    "Description": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(16) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(10) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "ChildNamedLocation", 0, "GeopoliticalLocationType", 0, "Name" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedDestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "ChildNamedLocation": [
                          {
                            "GeopoliticalLocationType": [
                              {
                                "Name": "harry's test"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ChildNamedLocation": [
              {
                "GeopoliticalLocationType": [
                  {
                    "Description": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ChildNamedLocation": [
              {
                "GeopoliticalLocationType": [
                  {
                    "Name": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(14) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(8) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "ChildNamedLocation", 0, "Description" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedDestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "ChildNamedLocation": [
                          {
                            "Description": "harry's test"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ChildNamedLocation": [
              {
                "GeopoliticalLocationType": [
                  {
                    "Name": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ChildNamedLocation": [
              {
                "Description": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(14) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(8) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "ChildNamedLocation", 0, "Name" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedDestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "ChildNamedLocation": [
                          {
                            "Name": "harry's test"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ChildNamedLocation": [
              {
                "Description": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ChildNamedLocation": [
              {
                "Name": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(16) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(10) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "ParentNamedLocation", 0, "GeopoliticalLocationType", 0, "Description" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedDestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "ParentNamedLocation": [
                          {
                            "GeopoliticalLocationType": [
                              {
                                "Description": "harry's test"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ChildNamedLocation": [
              {
                "Name": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ParentNamedLocation": [
              {
                "GeopoliticalLocationType": [
                  {
                    "Description": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(16) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(10) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "ParentNamedLocation", 0, "GeopoliticalLocationType", 0, "Name" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedDestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "ParentNamedLocation": [
                          {
                            "GeopoliticalLocationType": [
                              {
                                "Name": "harry's test"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ParentNamedLocation": [
              {
                "GeopoliticalLocationType": [
                  {
                    "Description": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ParentNamedLocation": [
              {
                "GeopoliticalLocationType": [
                  {
                    "Name": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(14) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(8) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "ParentNamedLocation", 0, "Description" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedDestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "ParentNamedLocation": [
                          {
                            "Description": "harry's test"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ParentNamedLocation": [
              {
                "GeopoliticalLocationType": [
                  {
                    "Name": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ParentNamedLocation": [
              {
                "Description": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(14) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(8) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "ParentNamedLocation", 0, "Name" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedDestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "ParentNamedLocation": [
                          {
                            "Name": "harry's test"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ParentNamedLocation": [
              {
                "Description": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ParentNamedLocation": [
              {
                "Name": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(12) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(6) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "Description" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedDestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "Description": "harry's test"
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ParentNamedLocation": [
              {
                "Name": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "Description": "harry's test"
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(12) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(6) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "Name" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedDestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "Name": "harry's test"
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "Description": "harry's test"
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "Name": "harry's test"
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(11) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(5) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "Description" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedDestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "Description": "harry's test"
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "Name": "harry's test"
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "Description": "harry's test"
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(11) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(5) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "Name" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedDestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "Name": "harry's test"
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "Description": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "Name": "harry's test"
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(10) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "Description" ]
 
Array(4) [ 0, "SpatialStandardsAuthorityParty", 0, "Description" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedDestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "Description": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "Name": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "Description": "harry's test"
      }
    ]
  }
]
flight-plan.tsx:122
Array(10) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "Name" ]
 
Array(4) [ 0, "SpatialStandardsAuthorityParty", 0, "Name" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedDestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "Name": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "Description": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "Name": "harry's test"
      }
    ]
  }
]
flight-plan.tsx:122
Array(8) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "Description" ]
 
Array [ 0, "Description" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedDestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "Description": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "Name": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "Description": "harry's test"
  }
]
flight-plan.tsx:122
Array(8) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "Identifier" ]
 
Array [ 0, "Identifier" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedDestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "Identifier": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "Name": "harry's test"
      }
    ],
    "Description": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "Identifier": "harry's test"
  }
]
flight-plan.tsx:122
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "CoordX" ]
 
Array [ "CoordX" ]
 
Array(5) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedDestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "CoordX": 1.1
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "SpatialReferenceSystem": [
    {
      "SpatialReferenceSystemType": [
        {
          "Code": "harry's test",
          "Description": "harry's test"
        }
      ],
      "SpatialStandardsAuthorityParty": [
        {
          "Name": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Identifier": "harry's test"
    }
  ]
}
flight-plan.tsx:121
objectToAdd {
  "CoordX": 1.1
}
flight-plan.tsx:122
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "CoordY" ]
 
Array [ "CoordY" ]
 
Array(5) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedDestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "CoordY": 1.1
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "SpatialReferenceSystem": [
    {
      "SpatialReferenceSystemType": [
        {
          "Code": "harry's test",
          "Description": "harry's test"
        }
      ],
      "SpatialStandardsAuthorityParty": [
        {
          "Name": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Identifier": "harry's test"
    }
  ],
  "CoordX": 1.1
}
flight-plan.tsx:121
objectToAdd {
  "CoordY": 1.1
}
flight-plan.tsx:122
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "CoordZ" ]
 
Array [ "CoordZ" ]
 
Array(5) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedDestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "CoordZ": 1.1
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "SpatialReferenceSystem": [
    {
      "SpatialReferenceSystemType": [
        {
          "Code": "harry's test",
          "Description": "harry's test"
        }
      ],
      "SpatialStandardsAuthorityParty": [
        {
          "Name": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Identifier": "harry's test"
    }
  ],
  "CoordX": 1.1,
  "CoordY": 1.1
}
flight-plan.tsx:121
objectToAdd {
  "CoordZ": 1.1
}
flight-plan.tsx:122
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "Value" ]
 
Array [ "Value" ]
 
Array(5) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "SpatialReferenceDefinition" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedDestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "Value": "harry's test"
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "SpatialReferenceSystem": [
    {
      "SpatialReferenceSystemType": [
        {
          "Code": "harry's test",
          "Description": "harry's test"
        }
      ],
      "SpatialStandardsAuthorityParty": [
        {
          "Name": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Identifier": "harry's test"
    }
  ],
  "CoordX": 1.1,
  "CoordY": 1.1,
  "CoordZ": 1.1
}
flight-plan.tsx:121
objectToAdd {
  "Value": "harry's test"
}
flight-plan.tsx:122
Array(5) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "Code" ]
 
Array [ "Code" ]
 
Array(4) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedDestinationLocation": [
      {
        "GeographicLocation": {
          "Code": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "SpatialReferenceDefinition": {
    "SpatialReferenceSystem": [
      {
        "SpatialReferenceSystemType": [
          {
            "Code": "harry's test",
            "Description": "harry's test"
          }
        ],
        "SpatialStandardsAuthorityParty": [
          {
            "Name": "harry's test"
          }
        ],
        "Description": "harry's test",
        "Identifier": "harry's test"
      }
    ],
    "CoordX": 1.1,
    "CoordY": 1.1,
    "CoordZ": 1.1,
    "Value": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "Code": "harry's test"
}
flight-plan.tsx:122
Array(5) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation", "Name" ]
 
Array [ "Name" ]
 
Array(4) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeographicLocation" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedDestinationLocation": [
      {
        "GeographicLocation": {
          "Name": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "SpatialReferenceDefinition": {
    "SpatialReferenceSystem": [
      {
        "SpatialReferenceSystemType": [
          {
            "Code": "harry's test",
            "Description": "harry's test"
          }
        ],
        "SpatialStandardsAuthorityParty": [
          {
            "Name": "harry's test"
          }
        ],
        "Description": "harry's test",
        "Identifier": "harry's test"
      }
    ],
    "CoordX": 1.1,
    "CoordY": 1.1,
    "CoordZ": 1.1,
    "Value": "harry's test"
  },
  "Code": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Name": "harry's test"
}
flight-plan.tsx:122
Array(7) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeopoliticalLocation", "GeopoliticalLocationType", 0, "Description" ]
 
Array(5) [ 0, "GeopoliticalLocation", "GeopoliticalLocationType", 0, "Description" ]
 
Array [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedDestinationLocation": [
      {
        "GeopoliticalLocation": {
          "GeopoliticalLocationType": [
            {
              "Description": "harry's test"
            }
          ]
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "GeographicLocation": {
      "SpatialReferenceDefinition": {
        "SpatialReferenceSystem": [
          {
            "SpatialReferenceSystemType": [
              {
                "Code": "harry's test",
                "Description": "harry's test"
              }
            ],
            "SpatialStandardsAuthorityParty": [
              {
                "Name": "harry's test"
              }
            ],
            "Description": "harry's test",
            "Identifier": "harry's test"
          }
        ],
        "CoordX": 1.1,
        "CoordY": 1.1,
        "CoordZ": 1.1,
        "Value": "harry's test"
      },
      "Code": "harry's test",
      "Name": "harry's test"
    }
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "GeopoliticalLocation": {
      "GeopoliticalLocationType": [
        {
          "Description": "harry's test"
        }
      ]
    }
  }
]
flight-plan.tsx:122
Array(7) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeopoliticalLocation", "GeopoliticalLocationType", 0, "Name" ]
 
Array(5) [ 0, "GeopoliticalLocation", "GeopoliticalLocationType", 0, "Name" ]
 
Array [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedDestinationLocation": [
      {
        "GeopoliticalLocation": {
          "GeopoliticalLocationType": [
            {
              "Name": "harry's test"
            }
          ]
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "GeographicLocation": {
      "SpatialReferenceDefinition": {
        "SpatialReferenceSystem": [
          {
            "SpatialReferenceSystemType": [
              {
                "Code": "harry's test",
                "Description": "harry's test"
              }
            ],
            "SpatialStandardsAuthorityParty": [
              {
                "Name": "harry's test"
              }
            ],
            "Description": "harry's test",
            "Identifier": "harry's test"
          }
        ],
        "CoordX": 1.1,
        "CoordY": 1.1,
        "CoordZ": 1.1,
        "Value": "harry's test"
      },
      "Code": "harry's test",
      "Name": "harry's test"
    },
    "GeopoliticalLocation": {
      "GeopoliticalLocationType": [
        {
          "Description": "harry's test"
        }
      ]
    }
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "GeopoliticalLocation": {
      "GeopoliticalLocationType": [
        {
          "Name": "harry's test"
        }
      ]
    }
  }
]
flight-plan.tsx:122
Array(5) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeopoliticalLocation", "Description" ]
 
Array(3) [ 0, "GeopoliticalLocation", "Description" ]
 
Array [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedDestinationLocation": [
      {
        "GeopoliticalLocation": {
          "Description": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "GeographicLocation": {
      "SpatialReferenceDefinition": {
        "SpatialReferenceSystem": [
          {
            "SpatialReferenceSystemType": [
              {
                "Code": "harry's test",
                "Description": "harry's test"
              }
            ],
            "SpatialStandardsAuthorityParty": [
              {
                "Name": "harry's test"
              }
            ],
            "Description": "harry's test",
            "Identifier": "harry's test"
          }
        ],
        "CoordX": 1.1,
        "CoordY": 1.1,
        "CoordZ": 1.1,
        "Value": "harry's test"
      },
      "Code": "harry's test",
      "Name": "harry's test"
    },
    "GeopoliticalLocation": {
      "GeopoliticalLocationType": [
        {
          "Name": "harry's test"
        }
      ]
    }
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "GeopoliticalLocation": {
      "Description": "harry's test"
    }
  }
]
flight-plan.tsx:122
Array(5) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "GeopoliticalLocation", "Name" ]
 
Array(3) [ 0, "GeopoliticalLocation", "Name" ]
 
Array [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedDestinationLocation": [
      {
        "GeopoliticalLocation": {
          "Name": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "GeographicLocation": {
      "SpatialReferenceDefinition": {
        "SpatialReferenceSystem": [
          {
            "SpatialReferenceSystemType": [
              {
                "Code": "harry's test",
                "Description": "harry's test"
              }
            ],
            "SpatialStandardsAuthorityParty": [
              {
                "Name": "harry's test"
              }
            ],
            "Description": "harry's test",
            "Identifier": "harry's test"
          }
        ],
        "CoordX": 1.1,
        "CoordY": 1.1,
        "CoordZ": 1.1,
        "Value": "harry's test"
      },
      "Code": "harry's test",
      "Name": "harry's test"
    },
    "GeopoliticalLocation": {
      "Description": "harry's test"
    }
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "GeopoliticalLocation": {
      "Name": "harry's test"
    }
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation", 0, "Value" ]
 
Array [ 0, "Value" ]
 
Array [ "ScheduledDroneAircraftMovement", "PlannedDestinationLocation" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedDestinationLocation": [
      {
        "Value": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "GeographicLocation": {
      "SpatialReferenceDefinition": {
        "SpatialReferenceSystem": [
          {
            "SpatialReferenceSystemType": [
              {
                "Code": "harry's test",
                "Description": "harry's test"
              }
            ],
            "SpatialStandardsAuthorityParty": [
              {
                "Name": "harry's test"
              }
            ],
            "Description": "harry's test",
            "Identifier": "harry's test"
          }
        ],
        "CoordX": 1.1,
        "CoordY": 1.1,
        "CoordZ": 1.1,
        "Value": "harry's test"
      },
      "Code": "harry's test",
      "Name": "harry's test"
    },
    "GeopoliticalLocation": {
      "Name": "harry's test"
    }
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "Value": "harry's test"
  }
]
flight-plan.tsx:122
Array(10) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialReferenceSystemType", 0, "Code" ]
 
Array(9) [ "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialReferenceSystemType", 0, "Code" ]
 
Array [ "ScheduledDroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedOriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialReferenceSystemType": [
                  {
                    "Code": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "Activity": [
    {
      "ActivityType": [
        {
          "Description": "harry's test",
          "Value": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Value": "harry's test"
    }
  ],
  "DroneAircraftMovementRuleType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "DroneAircraftMovementType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "DroneAircraftTransport": [
    {
      "FutureMaximumTakeOffWeight": 1.1,
      "AircraftTransportEquipment": [
        {
          "Mode": "harry's test"
        }
      ],
      "DroneAircraftTransportType": [
        {
          "Value": "harry's test"
        }
      ],
      "DroneAircraftTransportIdentification": {
        "Registration": "harry's test"
      },
      "AircraftDescription": "harry's test",
      "Mode": "harry's test",
      "GuidanceRequired": ""
    }
  ],
  "OperationalTimes": [
    {
      "AircraftMovementMeasure": {
        "Code": "harry's test",
        "Description": "harry's test",
        "Identifier": "harry's test",
        "Name": "harry's test",
        "Title": "harry's test",
        "Value": "harry's test"
      },
      "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
      "ActualCommencementofDeicingTimeACZT": "harry's test",
      "ActualDeIcingDurationADIT": "harry's test",
      "ActualEndBoardingTimeAEBT": "harry's test",
      "ActualEndofDeicingTimeAEZT": "harry's test",
      "ActualEndofGroundHandlingTimeAEGT": "harry's test",
      "ActualFinalApproachTimeAFAT": "harry's test",
      "ActualGroundHandlingDurationAGHT": "harry's test",
      "ActualInBlockTimeAIBT": "harry's test",
      "ActualLandingTimeALDT": "harry's test",
      "ActualLastCallTime": "harry's test",
      "ActualOffBlockTimeAOBT": "harry's test",
      "ActualReadyforDeicingTimeARZT": "harry's test",
      "ActualReadyforDepartureTimeARDT": "harry's test",
      "ActualStartBoardingTimeASBT": "harry's test",
      "ActualStartUpApprovalTimeASAT": "harry's test",
      "ActualStartUpRequestTimeASRT": "harry's test",
      "ActualTakeOffTimeATOT": "harry's test",
      "ActualTaxiInDurationAXIT": "harry's test",
      "ActualTaxiOutDurationAXOT": "harry's test",
      "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
      "ActualTurnaroundTimeATTT": "harry's test",
      "CalculatedTakeOffTimeCTOT": "harry's test",
      "EntryintoApproachZoneTime": "harry's test",
      "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
      "EstimatedDeIcingDurationEDIT": "harry's test",
      "EstimatedEndBoardingTimeEEBT": "harry's test",
      "EstimatedEndofDeicingTimeEEZT": "harry's test",
      "EstimatedInBlockTimeEIBT": "harry's test",
      "EstimatedLandingTimeELDT": "harry's test",
      "EstimatedLastCallTime": "harry's test",
      "EstimatedOffBlockTimeEOBT": "harry's test",
      "EstimatedReadyforDeicingTimeERZT": "harry's test",
      "EstimatedStartBoardingTime": "harry's test",
      "EstimatedTakeOffTimeETOT": "harry's test",
      "EstimatedTaxiInDurationEXIT": "harry's test",
      "EstimatedTaxiOutDurationEXOT": "harry's test",
      "EstimatedTurnAroundDurationETTT": "harry's test",
      "MinimumTurnAroundTimeMTTT": "harry's test",
      "PlannedLastCallTime": "harry's test",
      "PlannedStartBoardingTime": "harry's test",
      "ScheduledInBlockTimeSIBT": "harry's test",
      "ScheduledOffBlockTimeSOBT": "harry's test",
      "ScheduledTurnAroundDurationSTTT": "harry's test",
      "TargetLandingTimeTLDT": "harry's test",
      "TargetOffBlockTimeTOBT": "harry's test",
      "TargetStartUpApprovalTimeTSAT": "harry's test",
      "TargetTakeOffTimeTTOT": "harry's test"
    }
  ],
  "PlannedDestinationLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ]
}
flight-plan.tsx:121
objectToAdd {
  "PlannedOriginLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test"
                }
              ]
            }
          ]
        }
      }
    }
  ]
}
flight-plan.tsx:122
Array(10) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialReferenceSystemType", 0, "Description" ]
 
Array [ 0, "Description" ]
 
Array(8) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialReferenceSystemType" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedOriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialReferenceSystemType": [
                  {
                    "Description": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "Code": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "Description": "harry's test"
  }
]
flight-plan.tsx:122
Array(16) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(10) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "ChildNamedLocation", 0, "GeopoliticalLocationType", 0, "Description" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedOriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "ChildNamedLocation": [
                          {
                            "GeopoliticalLocationType": [
                              {
                                "Description": "harry's test"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ChildNamedLocation": [
              {
                "GeopoliticalLocationType": [
                  {
                    "Description": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(16) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(10) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "ChildNamedLocation", 0, "GeopoliticalLocationType", 0, "Name" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedOriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "ChildNamedLocation": [
                          {
                            "GeopoliticalLocationType": [
                              {
                                "Name": "harry's test"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ChildNamedLocation": [
              {
                "GeopoliticalLocationType": [
                  {
                    "Description": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ChildNamedLocation": [
              {
                "GeopoliticalLocationType": [
                  {
                    "Name": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(14) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(8) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "ChildNamedLocation", 0, "Description" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedOriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "ChildNamedLocation": [
                          {
                            "Description": "harry's test"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ChildNamedLocation": [
              {
                "GeopoliticalLocationType": [
                  {
                    "Name": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ChildNamedLocation": [
              {
                "Description": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(14) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(8) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "ChildNamedLocation", 0, "Name" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedOriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "ChildNamedLocation": [
                          {
                            "Name": "harry's test"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ChildNamedLocation": [
              {
                "Description": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ChildNamedLocation": [
              {
                "Name": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(16) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(10) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "ParentNamedLocation", 0, "GeopoliticalLocationType", 0, "Description" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedOriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "ParentNamedLocation": [
                          {
                            "GeopoliticalLocationType": [
                              {
                                "Description": "harry's test"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ChildNamedLocation": [
              {
                "Name": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ParentNamedLocation": [
              {
                "GeopoliticalLocationType": [
                  {
                    "Description": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(16) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(10) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "ParentNamedLocation", 0, "GeopoliticalLocationType", 0, "Name" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedOriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "ParentNamedLocation": [
                          {
                            "GeopoliticalLocationType": [
                              {
                                "Name": "harry's test"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ParentNamedLocation": [
              {
                "GeopoliticalLocationType": [
                  {
                    "Description": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ParentNamedLocation": [
              {
                "GeopoliticalLocationType": [
                  {
                    "Name": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(14) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(8) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "ParentNamedLocation", 0, "Description" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedOriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "ParentNamedLocation": [
                          {
                            "Description": "harry's test"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ParentNamedLocation": [
              {
                "GeopoliticalLocationType": [
                  {
                    "Name": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ParentNamedLocation": [
              {
                "Description": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(14) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(8) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "ParentNamedLocation", 0, "Name" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedOriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "ParentNamedLocation": [
                          {
                            "Name": "harry's test"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ParentNamedLocation": [
              {
                "Description": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ParentNamedLocation": [
              {
                "Name": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(12) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(6) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "Description" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedOriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "Description": "harry's test"
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "ParentNamedLocation": [
              {
                "Name": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "Description": "harry's test"
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(12) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(6) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "GeopoliticalLocationCategory", "Name" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedOriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "GeopoliticalLocationCategory": {
                        "Name": "harry's test"
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "Description": "harry's test"
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "Name": "harry's test"
          }
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(11) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(5) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "Description" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedOriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "Description": "harry's test"
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "GeopoliticalLocationCategory": {
            "Name": "harry's test"
          }
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "Description": "harry's test"
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(11) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", … ]
 
Array(5) [ 0, "SpatialStandardsAuthorityParty", 0, "GeopoliticalLocationHierarchy", "Name" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedOriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "GeopoliticalLocationHierarchy": {
                      "Name": "harry's test"
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "Description": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "Name": "harry's test"
        }
      }
    ]
  }
]
flight-plan.tsx:122
Array(10) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "Description" ]
 
Array(4) [ 0, "SpatialStandardsAuthorityParty", 0, "Description" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedOriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "Description": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "GeopoliticalLocationHierarchy": {
          "Name": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "Description": "harry's test"
      }
    ]
  }
]
flight-plan.tsx:122
Array(10) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "SpatialStandardsAuthorityParty", 0, "Name" ]
 
Array(4) [ 0, "SpatialStandardsAuthorityParty", 0, "Name" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedOriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialStandardsAuthorityParty": [
                  {
                    "Name": "harry's test"
                  }
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "Description": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SpatialStandardsAuthorityParty": [
      {
        "Name": "harry's test"
      }
    ]
  }
]
flight-plan.tsx:122
Array(8) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "Description" ]
 
Array [ 0, "Description" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedOriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "Description": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "Name": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "Description": "harry's test"
  }
]
flight-plan.tsx:122
Array(8) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem", 0, "Identifier" ]
 
Array [ 0, "Identifier" ]
 
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "SpatialReferenceSystem" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedOriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "Identifier": "harry's test"
              }
            ]
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "SpatialReferenceSystemType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "SpatialStandardsAuthorityParty": [
      {
        "Name": "harry's test"
      }
    ],
    "Description": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "Identifier": "harry's test"
  }
]
flight-plan.tsx:122
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "CoordX" ]
 
Array [ "CoordX" ]
 
Array(5) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedOriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "CoordX": 1.1
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "SpatialReferenceSystem": [
    {
      "SpatialReferenceSystemType": [
        {
          "Code": "harry's test",
          "Description": "harry's test"
        }
      ],
      "SpatialStandardsAuthorityParty": [
        {
          "Name": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Identifier": "harry's test"
    }
  ]
}
flight-plan.tsx:121
objectToAdd {
  "CoordX": 1.1
}
flight-plan.tsx:122
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "CoordY" ]
 
Array [ "CoordY" ]
 
Array(5) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedOriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "CoordY": 1.1
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "SpatialReferenceSystem": [
    {
      "SpatialReferenceSystemType": [
        {
          "Code": "harry's test",
          "Description": "harry's test"
        }
      ],
      "SpatialStandardsAuthorityParty": [
        {
          "Name": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Identifier": "harry's test"
    }
  ],
  "CoordX": 1.1
}
flight-plan.tsx:121
objectToAdd {
  "CoordY": 1.1
}
flight-plan.tsx:122
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "CoordZ" ]
 
Array [ "CoordZ" ]
 
Array(5) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedOriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "CoordZ": 1.1
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "SpatialReferenceSystem": [
    {
      "SpatialReferenceSystemType": [
        {
          "Code": "harry's test",
          "Description": "harry's test"
        }
      ],
      "SpatialStandardsAuthorityParty": [
        {
          "Name": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Identifier": "harry's test"
    }
  ],
  "CoordX": 1.1,
  "CoordY": 1.1
}
flight-plan.tsx:121
objectToAdd {
  "CoordZ": 1.1
}
flight-plan.tsx:122
Array(6) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition", "Value" ]
 
Array [ "Value" ]
 
Array(5) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "SpatialReferenceDefinition" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedOriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "Value": "harry's test"
          }
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "SpatialReferenceSystem": [
    {
      "SpatialReferenceSystemType": [
        {
          "Code": "harry's test",
          "Description": "harry's test"
        }
      ],
      "SpatialStandardsAuthorityParty": [
        {
          "Name": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Identifier": "harry's test"
    }
  ],
  "CoordX": 1.1,
  "CoordY": 1.1,
  "CoordZ": 1.1
}
flight-plan.tsx:121
objectToAdd {
  "Value": "harry's test"
}
flight-plan.tsx:122
Array(5) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "Code" ]
 
Array [ "Code" ]
 
Array(4) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedOriginLocation": [
      {
        "GeographicLocation": {
          "Code": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "SpatialReferenceDefinition": {
    "SpatialReferenceSystem": [
      {
        "SpatialReferenceSystemType": [
          {
            "Code": "harry's test",
            "Description": "harry's test"
          }
        ],
        "SpatialStandardsAuthorityParty": [
          {
            "Name": "harry's test"
          }
        ],
        "Description": "harry's test",
        "Identifier": "harry's test"
      }
    ],
    "CoordX": 1.1,
    "CoordY": 1.1,
    "CoordZ": 1.1,
    "Value": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd {
  "Code": "harry's test"
}
flight-plan.tsx:122
Array(5) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation", "Name" ]
 
Array [ "Name" ]
 
Array(4) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeographicLocation" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedOriginLocation": [
      {
        "GeographicLocation": {
          "Name": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "SpatialReferenceDefinition": {
    "SpatialReferenceSystem": [
      {
        "SpatialReferenceSystemType": [
          {
            "Code": "harry's test",
            "Description": "harry's test"
          }
        ],
        "SpatialStandardsAuthorityParty": [
          {
            "Name": "harry's test"
          }
        ],
        "Description": "harry's test",
        "Identifier": "harry's test"
      }
    ],
    "CoordX": 1.1,
    "CoordY": 1.1,
    "CoordZ": 1.1,
    "Value": "harry's test"
  },
  "Code": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Name": "harry's test"
}
flight-plan.tsx:122
Array(7) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeopoliticalLocation", "GeopoliticalLocationType", 0, "Description" ]
 
Array(5) [ 0, "GeopoliticalLocation", "GeopoliticalLocationType", 0, "Description" ]
 
Array [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedOriginLocation": [
      {
        "GeopoliticalLocation": {
          "GeopoliticalLocationType": [
            {
              "Description": "harry's test"
            }
          ]
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "GeographicLocation": {
      "SpatialReferenceDefinition": {
        "SpatialReferenceSystem": [
          {
            "SpatialReferenceSystemType": [
              {
                "Code": "harry's test",
                "Description": "harry's test"
              }
            ],
            "SpatialStandardsAuthorityParty": [
              {
                "Name": "harry's test"
              }
            ],
            "Description": "harry's test",
            "Identifier": "harry's test"
          }
        ],
        "CoordX": 1.1,
        "CoordY": 1.1,
        "CoordZ": 1.1,
        "Value": "harry's test"
      },
      "Code": "harry's test",
      "Name": "harry's test"
    }
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "GeopoliticalLocation": {
      "GeopoliticalLocationType": [
        {
          "Description": "harry's test"
        }
      ]
    }
  }
]
flight-plan.tsx:122
Array(7) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeopoliticalLocation", "GeopoliticalLocationType", 0, "Name" ]
 
Array(5) [ 0, "GeopoliticalLocation", "GeopoliticalLocationType", 0, "Name" ]
 
Array [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedOriginLocation": [
      {
        "GeopoliticalLocation": {
          "GeopoliticalLocationType": [
            {
              "Name": "harry's test"
            }
          ]
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "GeographicLocation": {
      "SpatialReferenceDefinition": {
        "SpatialReferenceSystem": [
          {
            "SpatialReferenceSystemType": [
              {
                "Code": "harry's test",
                "Description": "harry's test"
              }
            ],
            "SpatialStandardsAuthorityParty": [
              {
                "Name": "harry's test"
              }
            ],
            "Description": "harry's test",
            "Identifier": "harry's test"
          }
        ],
        "CoordX": 1.1,
        "CoordY": 1.1,
        "CoordZ": 1.1,
        "Value": "harry's test"
      },
      "Code": "harry's test",
      "Name": "harry's test"
    },
    "GeopoliticalLocation": {
      "GeopoliticalLocationType": [
        {
          "Description": "harry's test"
        }
      ]
    }
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "GeopoliticalLocation": {
      "GeopoliticalLocationType": [
        {
          "Name": "harry's test"
        }
      ]
    }
  }
]
flight-plan.tsx:122
Array(5) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeopoliticalLocation", "Description" ]
 
Array(3) [ 0, "GeopoliticalLocation", "Description" ]
 
Array [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedOriginLocation": [
      {
        "GeopoliticalLocation": {
          "Description": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "GeographicLocation": {
      "SpatialReferenceDefinition": {
        "SpatialReferenceSystem": [
          {
            "SpatialReferenceSystemType": [
              {
                "Code": "harry's test",
                "Description": "harry's test"
              }
            ],
            "SpatialStandardsAuthorityParty": [
              {
                "Name": "harry's test"
              }
            ],
            "Description": "harry's test",
            "Identifier": "harry's test"
          }
        ],
        "CoordX": 1.1,
        "CoordY": 1.1,
        "CoordZ": 1.1,
        "Value": "harry's test"
      },
      "Code": "harry's test",
      "Name": "harry's test"
    },
    "GeopoliticalLocation": {
      "GeopoliticalLocationType": [
        {
          "Name": "harry's test"
        }
      ]
    }
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "GeopoliticalLocation": {
      "Description": "harry's test"
    }
  }
]
flight-plan.tsx:122
Array(5) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "GeopoliticalLocation", "Name" ]
 
Array(3) [ 0, "GeopoliticalLocation", "Name" ]
 
Array [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedOriginLocation": [
      {
        "GeopoliticalLocation": {
          "Name": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "GeographicLocation": {
      "SpatialReferenceDefinition": {
        "SpatialReferenceSystem": [
          {
            "SpatialReferenceSystemType": [
              {
                "Code": "harry's test",
                "Description": "harry's test"
              }
            ],
            "SpatialStandardsAuthorityParty": [
              {
                "Name": "harry's test"
              }
            ],
            "Description": "harry's test",
            "Identifier": "harry's test"
          }
        ],
        "CoordX": 1.1,
        "CoordY": 1.1,
        "CoordZ": 1.1,
        "Value": "harry's test"
      },
      "Code": "harry's test",
      "Name": "harry's test"
    },
    "GeopoliticalLocation": {
      "Description": "harry's test"
    }
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "GeopoliticalLocation": {
      "Name": "harry's test"
    }
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation", 0, "Value" ]
 
Array [ 0, "Value" ]
 
Array [ "ScheduledDroneAircraftMovement", "PlannedOriginLocation" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "PlannedOriginLocation": [
      {
        "Value": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "GeographicLocation": {
      "SpatialReferenceDefinition": {
        "SpatialReferenceSystem": [
          {
            "SpatialReferenceSystemType": [
              {
                "Code": "harry's test",
                "Description": "harry's test"
              }
            ],
            "SpatialStandardsAuthorityParty": [
              {
                "Name": "harry's test"
              }
            ],
            "Description": "harry's test",
            "Identifier": "harry's test"
          }
        ],
        "CoordX": 1.1,
        "CoordY": 1.1,
        "CoordZ": 1.1,
        "Value": "harry's test"
      },
      "Code": "harry's test",
      "Name": "harry's test"
    },
    "GeopoliticalLocation": {
      "Name": "harry's test"
    }
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "Value": "harry's test"
  }
]
flight-plan.tsx:122
Array(5) [ "ScheduledDroneAircraftMovement", "Route", 0, "RouteSegment", "Description" ]
 
Array(4) [ "Route", 0, "RouteSegment", "Description" ]
 
Array [ "ScheduledDroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "Route": [
      {
        "RouteSegment": {
          "Description": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "Activity": [
    {
      "ActivityType": [
        {
          "Description": "harry's test",
          "Value": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Value": "harry's test"
    }
  ],
  "DroneAircraftMovementRuleType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "DroneAircraftMovementType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "DroneAircraftTransport": [
    {
      "FutureMaximumTakeOffWeight": 1.1,
      "AircraftTransportEquipment": [
        {
          "Mode": "harry's test"
        }
      ],
      "DroneAircraftTransportType": [
        {
          "Value": "harry's test"
        }
      ],
      "DroneAircraftTransportIdentification": {
        "Registration": "harry's test"
      },
      "AircraftDescription": "harry's test",
      "Mode": "harry's test",
      "GuidanceRequired": ""
    }
  ],
  "OperationalTimes": [
    {
      "AircraftMovementMeasure": {
        "Code": "harry's test",
        "Description": "harry's test",
        "Identifier": "harry's test",
        "Name": "harry's test",
        "Title": "harry's test",
        "Value": "harry's test"
      },
      "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
      "ActualCommencementofDeicingTimeACZT": "harry's test",
      "ActualDeIcingDurationADIT": "harry's test",
      "ActualEndBoardingTimeAEBT": "harry's test",
      "ActualEndofDeicingTimeAEZT": "harry's test",
      "ActualEndofGroundHandlingTimeAEGT": "harry's test",
      "ActualFinalApproachTimeAFAT": "harry's test",
      "ActualGroundHandlingDurationAGHT": "harry's test",
      "ActualInBlockTimeAIBT": "harry's test",
      "ActualLandingTimeALDT": "harry's test",
      "ActualLastCallTime": "harry's test",
      "ActualOffBlockTimeAOBT": "harry's test",
      "ActualReadyforDeicingTimeARZT": "harry's test",
      "ActualReadyforDepartureTimeARDT": "harry's test",
      "ActualStartBoardingTimeASBT": "harry's test",
      "ActualStartUpApprovalTimeASAT": "harry's test",
      "ActualStartUpRequestTimeASRT": "harry's test",
      "ActualTakeOffTimeATOT": "harry's test",
      "ActualTaxiInDurationAXIT": "harry's test",
      "ActualTaxiOutDurationAXOT": "harry's test",
      "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
      "ActualTurnaroundTimeATTT": "harry's test",
      "CalculatedTakeOffTimeCTOT": "harry's test",
      "EntryintoApproachZoneTime": "harry's test",
      "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
      "EstimatedDeIcingDurationEDIT": "harry's test",
      "EstimatedEndBoardingTimeEEBT": "harry's test",
      "EstimatedEndofDeicingTimeEEZT": "harry's test",
      "EstimatedInBlockTimeEIBT": "harry's test",
      "EstimatedLandingTimeELDT": "harry's test",
      "EstimatedLastCallTime": "harry's test",
      "EstimatedOffBlockTimeEOBT": "harry's test",
      "EstimatedReadyforDeicingTimeERZT": "harry's test",
      "EstimatedStartBoardingTime": "harry's test",
      "EstimatedTakeOffTimeETOT": "harry's test",
      "EstimatedTaxiInDurationEXIT": "harry's test",
      "EstimatedTaxiOutDurationEXOT": "harry's test",
      "EstimatedTurnAroundDurationETTT": "harry's test",
      "MinimumTurnAroundTimeMTTT": "harry's test",
      "PlannedLastCallTime": "harry's test",
      "PlannedStartBoardingTime": "harry's test",
      "ScheduledInBlockTimeSIBT": "harry's test",
      "ScheduledOffBlockTimeSOBT": "harry's test",
      "ScheduledTurnAroundDurationSTTT": "harry's test",
      "TargetLandingTimeTLDT": "harry's test",
      "TargetOffBlockTimeTOBT": "harry's test",
      "TargetStartUpApprovalTimeTSAT": "harry's test",
      "TargetTakeOffTimeTTOT": "harry's test"
    }
  ],
  "PlannedDestinationLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "PlannedOriginLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ]
}
flight-plan.tsx:121
objectToAdd {
  "Route": [
    {
      "RouteSegment": {
        "Description": "harry's test"
      }
    }
  ]
}
flight-plan.tsx:122
Array(5) [ "ScheduledDroneAircraftMovement", "Route", 0, "RouteSegment", "Identifier" ]
 
Array [ "Identifier" ]
 
Array(4) [ "ScheduledDroneAircraftMovement", "Route", 0, "RouteSegment" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "Route": [
      {
        "RouteSegment": {
          "Identifier": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "Description": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Identifier": "harry's test"
}
flight-plan.tsx:122
Array(5) [ "ScheduledDroneAircraftMovement", "Route", 0, "RouteSegment", "RequestedFlightLevel" ]
 
Array [ "RequestedFlightLevel" ]
 
Array(4) [ "ScheduledDroneAircraftMovement", "Route", 0, "RouteSegment" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "Route": [
      {
        "RouteSegment": {
          "RequestedFlightLevel": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "Description": "harry's test",
  "Identifier": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "RequestedFlightLevel": "harry's test"
}
flight-plan.tsx:122
Array(5) [ "ScheduledDroneAircraftMovement", "Route", 0, "RouteSegment", "RequestedFlightLevelPoint" ]
 
Array [ "RequestedFlightLevelPoint" ]
 
Array(4) [ "ScheduledDroneAircraftMovement", "Route", 0, "RouteSegment" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "Route": [
      {
        "RouteSegment": {
          "RequestedFlightLevelPoint": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "Description": "harry's test",
  "Identifier": "harry's test",
  "RequestedFlightLevel": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "RequestedFlightLevelPoint": "harry's test"
}
flight-plan.tsx:122
Array(5) [ "ScheduledDroneAircraftMovement", "Route", 0, "RouteSegment", "TrueAirspeed" ]
 
Array [ "TrueAirspeed" ]
 
Array(4) [ "ScheduledDroneAircraftMovement", "Route", 0, "RouteSegment" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "Route": [
      {
        "RouteSegment": {
          "TrueAirspeed": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "Description": "harry's test",
  "Identifier": "harry's test",
  "RequestedFlightLevel": "harry's test",
  "RequestedFlightLevelPoint": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "TrueAirspeed": "harry's test"
}
flight-plan.tsx:122
Array(5) [ "ScheduledDroneAircraftMovement", "Route", 0, "RouteSegment", "TrueAirspeedPoint" ]
 
Array [ "TrueAirspeedPoint" ]
 
Array(4) [ "ScheduledDroneAircraftMovement", "Route", 0, "RouteSegment" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "Route": [
      {
        "RouteSegment": {
          "TrueAirspeedPoint": "harry's test"
        }
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "Description": "harry's test",
  "Identifier": "harry's test",
  "RequestedFlightLevel": "harry's test",
  "RequestedFlightLevelPoint": "harry's test",
  "TrueAirspeed": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "TrueAirspeedPoint": "harry's test"
}
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "Route", 0, "Description" ]
 
Array [ 0, "Description" ]
 
Array [ "ScheduledDroneAircraftMovement", "Route" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "Route": [
      {
        "Description": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "RouteSegment": {
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    }
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "Description": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "Route", 0, "Identifier" ]
 
Array [ 0, "Identifier" ]
 
Array [ "ScheduledDroneAircraftMovement", "Route" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "Route": [
      {
        "Identifier": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "RouteSegment": {
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    },
    "Description": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "Identifier": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "Route", 0, "RequestedFlightLevel" ]
 
Array [ 0, "RequestedFlightLevel" ]
 
Array [ "ScheduledDroneAircraftMovement", "Route" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "Route": [
      {
        "RequestedFlightLevel": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "RouteSegment": {
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    },
    "Description": "harry's test",
    "Identifier": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "RequestedFlightLevel": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "Route", 0, "RequestedFlightLevelPoint" ]
 
Array [ 0, "RequestedFlightLevelPoint" ]
 
Array [ "ScheduledDroneAircraftMovement", "Route" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "Route": [
      {
        "RequestedFlightLevelPoint": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "RouteSegment": {
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    },
    "Description": "harry's test",
    "Identifier": "harry's test",
    "RequestedFlightLevel": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "RequestedFlightLevelPoint": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "Route", 0, "RouteInternationalDomestic" ]
 
Array [ 0, "RouteInternationalDomestic" ]
 
Array [ "ScheduledDroneAircraftMovement", "Route" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "Route": [
      {
        "RouteInternationalDomestic": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "RouteSegment": {
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    },
    "Description": "harry's test",
    "Identifier": "harry's test",
    "RequestedFlightLevel": "harry's test",
    "RequestedFlightLevelPoint": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "RouteInternationalDomestic": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "Route", 0, "RouteText" ]
 
Array [ 0, "RouteText" ]
 
Array [ "ScheduledDroneAircraftMovement", "Route" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "Route": [
      {
        "RouteText": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "RouteSegment": {
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    },
    "Description": "harry's test",
    "Identifier": "harry's test",
    "RequestedFlightLevel": "harry's test",
    "RequestedFlightLevelPoint": "harry's test",
    "RouteInternationalDomestic": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "RouteText": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "Route", 0, "StandardInstrumentDeparture" ]
 
Array [ 0, "StandardInstrumentDeparture" ]
 
Array [ "ScheduledDroneAircraftMovement", "Route" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "Route": [
      {
        "StandardInstrumentDeparture": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "RouteSegment": {
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    },
    "Description": "harry's test",
    "Identifier": "harry's test",
    "RequestedFlightLevel": "harry's test",
    "RequestedFlightLevelPoint": "harry's test",
    "RouteInternationalDomestic": "harry's test",
    "RouteText": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "StandardInstrumentDeparture": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "Route", 0, "TrueAirspeed" ]
 
Array [ 0, "TrueAirspeed" ]
 
Array [ "ScheduledDroneAircraftMovement", "Route" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "Route": [
      {
        "TrueAirspeed": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "RouteSegment": {
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    },
    "Description": "harry's test",
    "Identifier": "harry's test",
    "RequestedFlightLevel": "harry's test",
    "RequestedFlightLevelPoint": "harry's test",
    "RouteInternationalDomestic": "harry's test",
    "RouteText": "harry's test",
    "StandardInstrumentDeparture": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "TrueAirspeed": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "Route", 0, "TrueAirspeedPoint" ]
 
Array [ 0, "TrueAirspeedPoint" ]
 
Array [ "ScheduledDroneAircraftMovement", "Route" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "Route": [
      {
        "TrueAirspeedPoint": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "RouteSegment": {
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    },
    "Description": "harry's test",
    "Identifier": "harry's test",
    "RequestedFlightLevel": "harry's test",
    "RequestedFlightLevelPoint": "harry's test",
    "RouteInternationalDomestic": "harry's test",
    "RouteText": "harry's test",
    "StandardInstrumentDeparture": "harry's test",
    "TrueAirspeed": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "TrueAirspeedPoint": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "ScheduledAircraftMovementStatus", 0, "Code" ]
 
Array(3) [ "ScheduledAircraftMovementStatus", 0, "Code" ]
 
Array [ "ScheduledDroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "ScheduledAircraftMovementStatus": [
      {
        "Code": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "Activity": [
    {
      "ActivityType": [
        {
          "Description": "harry's test",
          "Value": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Value": "harry's test"
    }
  ],
  "DroneAircraftMovementRuleType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "DroneAircraftMovementType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "DroneAircraftTransport": [
    {
      "FutureMaximumTakeOffWeight": 1.1,
      "AircraftTransportEquipment": [
        {
          "Mode": "harry's test"
        }
      ],
      "DroneAircraftTransportType": [
        {
          "Value": "harry's test"
        }
      ],
      "DroneAircraftTransportIdentification": {
        "Registration": "harry's test"
      },
      "AircraftDescription": "harry's test",
      "Mode": "harry's test",
      "GuidanceRequired": ""
    }
  ],
  "OperationalTimes": [
    {
      "AircraftMovementMeasure": {
        "Code": "harry's test",
        "Description": "harry's test",
        "Identifier": "harry's test",
        "Name": "harry's test",
        "Title": "harry's test",
        "Value": "harry's test"
      },
      "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
      "ActualCommencementofDeicingTimeACZT": "harry's test",
      "ActualDeIcingDurationADIT": "harry's test",
      "ActualEndBoardingTimeAEBT": "harry's test",
      "ActualEndofDeicingTimeAEZT": "harry's test",
      "ActualEndofGroundHandlingTimeAEGT": "harry's test",
      "ActualFinalApproachTimeAFAT": "harry's test",
      "ActualGroundHandlingDurationAGHT": "harry's test",
      "ActualInBlockTimeAIBT": "harry's test",
      "ActualLandingTimeALDT": "harry's test",
      "ActualLastCallTime": "harry's test",
      "ActualOffBlockTimeAOBT": "harry's test",
      "ActualReadyforDeicingTimeARZT": "harry's test",
      "ActualReadyforDepartureTimeARDT": "harry's test",
      "ActualStartBoardingTimeASBT": "harry's test",
      "ActualStartUpApprovalTimeASAT": "harry's test",
      "ActualStartUpRequestTimeASRT": "harry's test",
      "ActualTakeOffTimeATOT": "harry's test",
      "ActualTaxiInDurationAXIT": "harry's test",
      "ActualTaxiOutDurationAXOT": "harry's test",
      "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
      "ActualTurnaroundTimeATTT": "harry's test",
      "CalculatedTakeOffTimeCTOT": "harry's test",
      "EntryintoApproachZoneTime": "harry's test",
      "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
      "EstimatedDeIcingDurationEDIT": "harry's test",
      "EstimatedEndBoardingTimeEEBT": "harry's test",
      "EstimatedEndofDeicingTimeEEZT": "harry's test",
      "EstimatedInBlockTimeEIBT": "harry's test",
      "EstimatedLandingTimeELDT": "harry's test",
      "EstimatedLastCallTime": "harry's test",
      "EstimatedOffBlockTimeEOBT": "harry's test",
      "EstimatedReadyforDeicingTimeERZT": "harry's test",
      "EstimatedStartBoardingTime": "harry's test",
      "EstimatedTakeOffTimeETOT": "harry's test",
      "EstimatedTaxiInDurationEXIT": "harry's test",
      "EstimatedTaxiOutDurationEXOT": "harry's test",
      "EstimatedTurnAroundDurationETTT": "harry's test",
      "MinimumTurnAroundTimeMTTT": "harry's test",
      "PlannedLastCallTime": "harry's test",
      "PlannedStartBoardingTime": "harry's test",
      "ScheduledInBlockTimeSIBT": "harry's test",
      "ScheduledOffBlockTimeSOBT": "harry's test",
      "ScheduledTurnAroundDurationSTTT": "harry's test",
      "TargetLandingTimeTLDT": "harry's test",
      "TargetOffBlockTimeTOBT": "harry's test",
      "TargetStartUpApprovalTimeTSAT": "harry's test",
      "TargetTakeOffTimeTTOT": "harry's test"
    }
  ],
  "PlannedDestinationLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "PlannedOriginLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "Route": [
    {
      "RouteSegment": {
        "Description": "harry's test",
        "Identifier": "harry's test",
        "RequestedFlightLevel": "harry's test",
        "RequestedFlightLevelPoint": "harry's test",
        "TrueAirspeed": "harry's test",
        "TrueAirspeedPoint": "harry's test"
      },
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "RouteInternationalDomestic": "harry's test",
      "RouteText": "harry's test",
      "StandardInstrumentDeparture": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    }
  ]
}
flight-plan.tsx:121
objectToAdd {
  "ScheduledAircraftMovementStatus": [
    {
      "Code": "harry's test"
    }
  ]
}
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "ScheduledAircraftMovementStatus", 0, "Description" ]
 
Array [ 0, "Description" ]
 
Array [ "ScheduledDroneAircraftMovement", "ScheduledAircraftMovementStatus" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "ScheduledAircraftMovementStatus": [
      {
        "Description": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "Code": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "Description": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "ScheduledDroneAircraftMovementIdentification", 0, "Identifier" ]
 
Array(3) [ "ScheduledDroneAircraftMovementIdentification", 0, "Identifier" ]
 
Array [ "ScheduledDroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "ScheduledDroneAircraftMovementIdentification": [
      {
        "Identifier": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "Activity": [
    {
      "ActivityType": [
        {
          "Description": "harry's test",
          "Value": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Value": "harry's test"
    }
  ],
  "DroneAircraftMovementRuleType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "DroneAircraftMovementType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "DroneAircraftTransport": [
    {
      "FutureMaximumTakeOffWeight": 1.1,
      "AircraftTransportEquipment": [
        {
          "Mode": "harry's test"
        }
      ],
      "DroneAircraftTransportType": [
        {
          "Value": "harry's test"
        }
      ],
      "DroneAircraftTransportIdentification": {
        "Registration": "harry's test"
      },
      "AircraftDescription": "harry's test",
      "Mode": "harry's test",
      "GuidanceRequired": ""
    }
  ],
  "OperationalTimes": [
    {
      "AircraftMovementMeasure": {
        "Code": "harry's test",
        "Description": "harry's test",
        "Identifier": "harry's test",
        "Name": "harry's test",
        "Title": "harry's test",
        "Value": "harry's test"
      },
      "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
      "ActualCommencementofDeicingTimeACZT": "harry's test",
      "ActualDeIcingDurationADIT": "harry's test",
      "ActualEndBoardingTimeAEBT": "harry's test",
      "ActualEndofDeicingTimeAEZT": "harry's test",
      "ActualEndofGroundHandlingTimeAEGT": "harry's test",
      "ActualFinalApproachTimeAFAT": "harry's test",
      "ActualGroundHandlingDurationAGHT": "harry's test",
      "ActualInBlockTimeAIBT": "harry's test",
      "ActualLandingTimeALDT": "harry's test",
      "ActualLastCallTime": "harry's test",
      "ActualOffBlockTimeAOBT": "harry's test",
      "ActualReadyforDeicingTimeARZT": "harry's test",
      "ActualReadyforDepartureTimeARDT": "harry's test",
      "ActualStartBoardingTimeASBT": "harry's test",
      "ActualStartUpApprovalTimeASAT": "harry's test",
      "ActualStartUpRequestTimeASRT": "harry's test",
      "ActualTakeOffTimeATOT": "harry's test",
      "ActualTaxiInDurationAXIT": "harry's test",
      "ActualTaxiOutDurationAXOT": "harry's test",
      "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
      "ActualTurnaroundTimeATTT": "harry's test",
      "CalculatedTakeOffTimeCTOT": "harry's test",
      "EntryintoApproachZoneTime": "harry's test",
      "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
      "EstimatedDeIcingDurationEDIT": "harry's test",
      "EstimatedEndBoardingTimeEEBT": "harry's test",
      "EstimatedEndofDeicingTimeEEZT": "harry's test",
      "EstimatedInBlockTimeEIBT": "harry's test",
      "EstimatedLandingTimeELDT": "harry's test",
      "EstimatedLastCallTime": "harry's test",
      "EstimatedOffBlockTimeEOBT": "harry's test",
      "EstimatedReadyforDeicingTimeERZT": "harry's test",
      "EstimatedStartBoardingTime": "harry's test",
      "EstimatedTakeOffTimeETOT": "harry's test",
      "EstimatedTaxiInDurationEXIT": "harry's test",
      "EstimatedTaxiOutDurationEXOT": "harry's test",
      "EstimatedTurnAroundDurationETTT": "harry's test",
      "MinimumTurnAroundTimeMTTT": "harry's test",
      "PlannedLastCallTime": "harry's test",
      "PlannedStartBoardingTime": "harry's test",
      "ScheduledInBlockTimeSIBT": "harry's test",
      "ScheduledOffBlockTimeSOBT": "harry's test",
      "ScheduledTurnAroundDurationSTTT": "harry's test",
      "TargetLandingTimeTLDT": "harry's test",
      "TargetOffBlockTimeTOBT": "harry's test",
      "TargetStartUpApprovalTimeTSAT": "harry's test",
      "TargetTakeOffTimeTTOT": "harry's test"
    }
  ],
  "PlannedDestinationLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "PlannedOriginLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "Route": [
    {
      "RouteSegment": {
        "Description": "harry's test",
        "Identifier": "harry's test",
        "RequestedFlightLevel": "harry's test",
        "RequestedFlightLevelPoint": "harry's test",
        "TrueAirspeed": "harry's test",
        "TrueAirspeedPoint": "harry's test"
      },
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "RouteInternationalDomestic": "harry's test",
      "RouteText": "harry's test",
      "StandardInstrumentDeparture": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    }
  ],
  "ScheduledAircraftMovementStatus": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ]
}
flight-plan.tsx:121
objectToAdd {
  "ScheduledDroneAircraftMovementIdentification": [
    {
      "Identifier": "harry's test"
    }
  ]
}
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "ScheduledDroneAircraftMovementIdentification", 0, "ScheduledDateTime" ]
 
Array [ 0, "ScheduledDateTime" ]
 
Array [ "ScheduledDroneAircraftMovement", "ScheduledDroneAircraftMovementIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "ScheduledDroneAircraftMovementIdentification": [
      {
        "ScheduledDateTime": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "Identifier": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "ScheduledDateTime": "harry's test"
  }
]
flight-plan.tsx:122
Array(4) [ "ScheduledDroneAircraftMovement", "ScheduledDroneAircraftMovementIdentification", 0, "SystemIdentifier" ]
 
Array [ 0, "SystemIdentifier" ]
 
Array [ "ScheduledDroneAircraftMovement", "ScheduledDroneAircraftMovementIdentification" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "ScheduledDroneAircraftMovementIdentification": [
      {
        "SystemIdentifier": "harry's test"
      }
    ]
  }
}
flight-plan.tsx:115
objectToChange {
  "0": {
    "Identifier": "harry's test",
    "ScheduledDateTime": "harry's test"
  }
}
flight-plan.tsx:121
objectToAdd [
  {
    "SystemIdentifier": "harry's test"
  }
]
flight-plan.tsx:122
Array [ "ScheduledDroneAircraftMovement", "ContactResolutionScope" ]
 
Array [ "ContactResolutionScope" ]
 
Array [ "ScheduledDroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "ContactResolutionScope": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "Activity": [
    {
      "ActivityType": [
        {
          "Description": "harry's test",
          "Value": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Value": "harry's test"
    }
  ],
  "DroneAircraftMovementRuleType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "DroneAircraftMovementType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "DroneAircraftTransport": [
    {
      "FutureMaximumTakeOffWeight": 1.1,
      "AircraftTransportEquipment": [
        {
          "Mode": "harry's test"
        }
      ],
      "DroneAircraftTransportType": [
        {
          "Value": "harry's test"
        }
      ],
      "DroneAircraftTransportIdentification": {
        "Registration": "harry's test"
      },
      "AircraftDescription": "harry's test",
      "Mode": "harry's test",
      "GuidanceRequired": ""
    }
  ],
  "OperationalTimes": [
    {
      "AircraftMovementMeasure": {
        "Code": "harry's test",
        "Description": "harry's test",
        "Identifier": "harry's test",
        "Name": "harry's test",
        "Title": "harry's test",
        "Value": "harry's test"
      },
      "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
      "ActualCommencementofDeicingTimeACZT": "harry's test",
      "ActualDeIcingDurationADIT": "harry's test",
      "ActualEndBoardingTimeAEBT": "harry's test",
      "ActualEndofDeicingTimeAEZT": "harry's test",
      "ActualEndofGroundHandlingTimeAEGT": "harry's test",
      "ActualFinalApproachTimeAFAT": "harry's test",
      "ActualGroundHandlingDurationAGHT": "harry's test",
      "ActualInBlockTimeAIBT": "harry's test",
      "ActualLandingTimeALDT": "harry's test",
      "ActualLastCallTime": "harry's test",
      "ActualOffBlockTimeAOBT": "harry's test",
      "ActualReadyforDeicingTimeARZT": "harry's test",
      "ActualReadyforDepartureTimeARDT": "harry's test",
      "ActualStartBoardingTimeASBT": "harry's test",
      "ActualStartUpApprovalTimeASAT": "harry's test",
      "ActualStartUpRequestTimeASRT": "harry's test",
      "ActualTakeOffTimeATOT": "harry's test",
      "ActualTaxiInDurationAXIT": "harry's test",
      "ActualTaxiOutDurationAXOT": "harry's test",
      "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
      "ActualTurnaroundTimeATTT": "harry's test",
      "CalculatedTakeOffTimeCTOT": "harry's test",
      "EntryintoApproachZoneTime": "harry's test",
      "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
      "EstimatedDeIcingDurationEDIT": "harry's test",
      "EstimatedEndBoardingTimeEEBT": "harry's test",
      "EstimatedEndofDeicingTimeEEZT": "harry's test",
      "EstimatedInBlockTimeEIBT": "harry's test",
      "EstimatedLandingTimeELDT": "harry's test",
      "EstimatedLastCallTime": "harry's test",
      "EstimatedOffBlockTimeEOBT": "harry's test",
      "EstimatedReadyforDeicingTimeERZT": "harry's test",
      "EstimatedStartBoardingTime": "harry's test",
      "EstimatedTakeOffTimeETOT": "harry's test",
      "EstimatedTaxiInDurationEXIT": "harry's test",
      "EstimatedTaxiOutDurationEXOT": "harry's test",
      "EstimatedTurnAroundDurationETTT": "harry's test",
      "MinimumTurnAroundTimeMTTT": "harry's test",
      "PlannedLastCallTime": "harry's test",
      "PlannedStartBoardingTime": "harry's test",
      "ScheduledInBlockTimeSIBT": "harry's test",
      "ScheduledOffBlockTimeSOBT": "harry's test",
      "ScheduledTurnAroundDurationSTTT": "harry's test",
      "TargetLandingTimeTLDT": "harry's test",
      "TargetOffBlockTimeTOBT": "harry's test",
      "TargetStartUpApprovalTimeTSAT": "harry's test",
      "TargetTakeOffTimeTTOT": "harry's test"
    }
  ],
  "PlannedDestinationLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "PlannedOriginLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "Route": [
    {
      "RouteSegment": {
        "Description": "harry's test",
        "Identifier": "harry's test",
        "RequestedFlightLevel": "harry's test",
        "RequestedFlightLevelPoint": "harry's test",
        "TrueAirspeed": "harry's test",
        "TrueAirspeedPoint": "harry's test"
      },
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "RouteInternationalDomestic": "harry's test",
      "RouteText": "harry's test",
      "StandardInstrumentDeparture": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    }
  ],
  "ScheduledAircraftMovementStatus": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "ScheduledDroneAircraftMovementIdentification": [
    {
      "Identifier": "harry's test",
      "ScheduledDateTime": "harry's test",
      "SystemIdentifier": "harry's test"
    }
  ]
}
flight-plan.tsx:121
objectToAdd {
  "ContactResolutionScope": "harry's test"
}
flight-plan.tsx:122
Array [ "ScheduledDroneAircraftMovement", "Description" ]
 
Array [ "Description" ]
 
Array [ "ScheduledDroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "Description": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "Activity": [
    {
      "ActivityType": [
        {
          "Description": "harry's test",
          "Value": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Value": "harry's test"
    }
  ],
  "DroneAircraftMovementRuleType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "DroneAircraftMovementType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "DroneAircraftTransport": [
    {
      "FutureMaximumTakeOffWeight": 1.1,
      "AircraftTransportEquipment": [
        {
          "Mode": "harry's test"
        }
      ],
      "DroneAircraftTransportType": [
        {
          "Value": "harry's test"
        }
      ],
      "DroneAircraftTransportIdentification": {
        "Registration": "harry's test"
      },
      "AircraftDescription": "harry's test",
      "Mode": "harry's test",
      "GuidanceRequired": ""
    }
  ],
  "OperationalTimes": [
    {
      "AircraftMovementMeasure": {
        "Code": "harry's test",
        "Description": "harry's test",
        "Identifier": "harry's test",
        "Name": "harry's test",
        "Title": "harry's test",
        "Value": "harry's test"
      },
      "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
      "ActualCommencementofDeicingTimeACZT": "harry's test",
      "ActualDeIcingDurationADIT": "harry's test",
      "ActualEndBoardingTimeAEBT": "harry's test",
      "ActualEndofDeicingTimeAEZT": "harry's test",
      "ActualEndofGroundHandlingTimeAEGT": "harry's test",
      "ActualFinalApproachTimeAFAT": "harry's test",
      "ActualGroundHandlingDurationAGHT": "harry's test",
      "ActualInBlockTimeAIBT": "harry's test",
      "ActualLandingTimeALDT": "harry's test",
      "ActualLastCallTime": "harry's test",
      "ActualOffBlockTimeAOBT": "harry's test",
      "ActualReadyforDeicingTimeARZT": "harry's test",
      "ActualReadyforDepartureTimeARDT": "harry's test",
      "ActualStartBoardingTimeASBT": "harry's test",
      "ActualStartUpApprovalTimeASAT": "harry's test",
      "ActualStartUpRequestTimeASRT": "harry's test",
      "ActualTakeOffTimeATOT": "harry's test",
      "ActualTaxiInDurationAXIT": "harry's test",
      "ActualTaxiOutDurationAXOT": "harry's test",
      "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
      "ActualTurnaroundTimeATTT": "harry's test",
      "CalculatedTakeOffTimeCTOT": "harry's test",
      "EntryintoApproachZoneTime": "harry's test",
      "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
      "EstimatedDeIcingDurationEDIT": "harry's test",
      "EstimatedEndBoardingTimeEEBT": "harry's test",
      "EstimatedEndofDeicingTimeEEZT": "harry's test",
      "EstimatedInBlockTimeEIBT": "harry's test",
      "EstimatedLandingTimeELDT": "harry's test",
      "EstimatedLastCallTime": "harry's test",
      "EstimatedOffBlockTimeEOBT": "harry's test",
      "EstimatedReadyforDeicingTimeERZT": "harry's test",
      "EstimatedStartBoardingTime": "harry's test",
      "EstimatedTakeOffTimeETOT": "harry's test",
      "EstimatedTaxiInDurationEXIT": "harry's test",
      "EstimatedTaxiOutDurationEXOT": "harry's test",
      "EstimatedTurnAroundDurationETTT": "harry's test",
      "MinimumTurnAroundTimeMTTT": "harry's test",
      "PlannedLastCallTime": "harry's test",
      "PlannedStartBoardingTime": "harry's test",
      "ScheduledInBlockTimeSIBT": "harry's test",
      "ScheduledOffBlockTimeSOBT": "harry's test",
      "ScheduledTurnAroundDurationSTTT": "harry's test",
      "TargetLandingTimeTLDT": "harry's test",
      "TargetOffBlockTimeTOBT": "harry's test",
      "TargetStartUpApprovalTimeTSAT": "harry's test",
      "TargetTakeOffTimeTTOT": "harry's test"
    }
  ],
  "PlannedDestinationLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "PlannedOriginLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "Route": [
    {
      "RouteSegment": {
        "Description": "harry's test",
        "Identifier": "harry's test",
        "RequestedFlightLevel": "harry's test",
        "RequestedFlightLevelPoint": "harry's test",
        "TrueAirspeed": "harry's test",
        "TrueAirspeedPoint": "harry's test"
      },
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "RouteInternationalDomestic": "harry's test",
      "RouteText": "harry's test",
      "StandardInstrumentDeparture": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    }
  ],
  "ScheduledAircraftMovementStatus": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "ScheduledDroneAircraftMovementIdentification": [
    {
      "Identifier": "harry's test",
      "ScheduledDateTime": "harry's test",
      "SystemIdentifier": "harry's test"
    }
  ],
  "ContactResolutionScope": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Description": "harry's test"
}
flight-plan.tsx:122
Array [ "ScheduledDroneAircraftMovement", "EstimatedDuration" ]
 
Array [ "EstimatedDuration" ]
 
Array [ "ScheduledDroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "EstimatedDuration": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "Activity": [
    {
      "ActivityType": [
        {
          "Description": "harry's test",
          "Value": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Value": "harry's test"
    }
  ],
  "DroneAircraftMovementRuleType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "DroneAircraftMovementType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "DroneAircraftTransport": [
    {
      "FutureMaximumTakeOffWeight": 1.1,
      "AircraftTransportEquipment": [
        {
          "Mode": "harry's test"
        }
      ],
      "DroneAircraftTransportType": [
        {
          "Value": "harry's test"
        }
      ],
      "DroneAircraftTransportIdentification": {
        "Registration": "harry's test"
      },
      "AircraftDescription": "harry's test",
      "Mode": "harry's test",
      "GuidanceRequired": ""
    }
  ],
  "OperationalTimes": [
    {
      "AircraftMovementMeasure": {
        "Code": "harry's test",
        "Description": "harry's test",
        "Identifier": "harry's test",
        "Name": "harry's test",
        "Title": "harry's test",
        "Value": "harry's test"
      },
      "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
      "ActualCommencementofDeicingTimeACZT": "harry's test",
      "ActualDeIcingDurationADIT": "harry's test",
      "ActualEndBoardingTimeAEBT": "harry's test",
      "ActualEndofDeicingTimeAEZT": "harry's test",
      "ActualEndofGroundHandlingTimeAEGT": "harry's test",
      "ActualFinalApproachTimeAFAT": "harry's test",
      "ActualGroundHandlingDurationAGHT": "harry's test",
      "ActualInBlockTimeAIBT": "harry's test",
      "ActualLandingTimeALDT": "harry's test",
      "ActualLastCallTime": "harry's test",
      "ActualOffBlockTimeAOBT": "harry's test",
      "ActualReadyforDeicingTimeARZT": "harry's test",
      "ActualReadyforDepartureTimeARDT": "harry's test",
      "ActualStartBoardingTimeASBT": "harry's test",
      "ActualStartUpApprovalTimeASAT": "harry's test",
      "ActualStartUpRequestTimeASRT": "harry's test",
      "ActualTakeOffTimeATOT": "harry's test",
      "ActualTaxiInDurationAXIT": "harry's test",
      "ActualTaxiOutDurationAXOT": "harry's test",
      "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
      "ActualTurnaroundTimeATTT": "harry's test",
      "CalculatedTakeOffTimeCTOT": "harry's test",
      "EntryintoApproachZoneTime": "harry's test",
      "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
      "EstimatedDeIcingDurationEDIT": "harry's test",
      "EstimatedEndBoardingTimeEEBT": "harry's test",
      "EstimatedEndofDeicingTimeEEZT": "harry's test",
      "EstimatedInBlockTimeEIBT": "harry's test",
      "EstimatedLandingTimeELDT": "harry's test",
      "EstimatedLastCallTime": "harry's test",
      "EstimatedOffBlockTimeEOBT": "harry's test",
      "EstimatedReadyforDeicingTimeERZT": "harry's test",
      "EstimatedStartBoardingTime": "harry's test",
      "EstimatedTakeOffTimeETOT": "harry's test",
      "EstimatedTaxiInDurationEXIT": "harry's test",
      "EstimatedTaxiOutDurationEXOT": "harry's test",
      "EstimatedTurnAroundDurationETTT": "harry's test",
      "MinimumTurnAroundTimeMTTT": "harry's test",
      "PlannedLastCallTime": "harry's test",
      "PlannedStartBoardingTime": "harry's test",
      "ScheduledInBlockTimeSIBT": "harry's test",
      "ScheduledOffBlockTimeSOBT": "harry's test",
      "ScheduledTurnAroundDurationSTTT": "harry's test",
      "TargetLandingTimeTLDT": "harry's test",
      "TargetOffBlockTimeTOBT": "harry's test",
      "TargetStartUpApprovalTimeTSAT": "harry's test",
      "TargetTakeOffTimeTTOT": "harry's test"
    }
  ],
  "PlannedDestinationLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "PlannedOriginLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "Route": [
    {
      "RouteSegment": {
        "Description": "harry's test",
        "Identifier": "harry's test",
        "RequestedFlightLevel": "harry's test",
        "RequestedFlightLevelPoint": "harry's test",
        "TrueAirspeed": "harry's test",
        "TrueAirspeedPoint": "harry's test"
      },
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "RouteInternationalDomestic": "harry's test",
      "RouteText": "harry's test",
      "StandardInstrumentDeparture": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    }
  ],
  "ScheduledAircraftMovementStatus": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "ScheduledDroneAircraftMovementIdentification": [
    {
      "Identifier": "harry's test",
      "ScheduledDateTime": "harry's test",
      "SystemIdentifier": "harry's test"
    }
  ],
  "ContactResolutionScope": "harry's test",
  "Description": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedDuration": "harry's test"
}
flight-plan.tsx:122
Array [ "ScheduledDroneAircraftMovement", "EstimatedTimeOfArrival" ]
 
Array [ "EstimatedTimeOfArrival" ]
 
Array [ "ScheduledDroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "EstimatedTimeOfArrival": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "Activity": [
    {
      "ActivityType": [
        {
          "Description": "harry's test",
          "Value": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Value": "harry's test"
    }
  ],
  "DroneAircraftMovementRuleType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "DroneAircraftMovementType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "DroneAircraftTransport": [
    {
      "FutureMaximumTakeOffWeight": 1.1,
      "AircraftTransportEquipment": [
        {
          "Mode": "harry's test"
        }
      ],
      "DroneAircraftTransportType": [
        {
          "Value": "harry's test"
        }
      ],
      "DroneAircraftTransportIdentification": {
        "Registration": "harry's test"
      },
      "AircraftDescription": "harry's test",
      "Mode": "harry's test",
      "GuidanceRequired": ""
    }
  ],
  "OperationalTimes": [
    {
      "AircraftMovementMeasure": {
        "Code": "harry's test",
        "Description": "harry's test",
        "Identifier": "harry's test",
        "Name": "harry's test",
        "Title": "harry's test",
        "Value": "harry's test"
      },
      "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
      "ActualCommencementofDeicingTimeACZT": "harry's test",
      "ActualDeIcingDurationADIT": "harry's test",
      "ActualEndBoardingTimeAEBT": "harry's test",
      "ActualEndofDeicingTimeAEZT": "harry's test",
      "ActualEndofGroundHandlingTimeAEGT": "harry's test",
      "ActualFinalApproachTimeAFAT": "harry's test",
      "ActualGroundHandlingDurationAGHT": "harry's test",
      "ActualInBlockTimeAIBT": "harry's test",
      "ActualLandingTimeALDT": "harry's test",
      "ActualLastCallTime": "harry's test",
      "ActualOffBlockTimeAOBT": "harry's test",
      "ActualReadyforDeicingTimeARZT": "harry's test",
      "ActualReadyforDepartureTimeARDT": "harry's test",
      "ActualStartBoardingTimeASBT": "harry's test",
      "ActualStartUpApprovalTimeASAT": "harry's test",
      "ActualStartUpRequestTimeASRT": "harry's test",
      "ActualTakeOffTimeATOT": "harry's test",
      "ActualTaxiInDurationAXIT": "harry's test",
      "ActualTaxiOutDurationAXOT": "harry's test",
      "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
      "ActualTurnaroundTimeATTT": "harry's test",
      "CalculatedTakeOffTimeCTOT": "harry's test",
      "EntryintoApproachZoneTime": "harry's test",
      "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
      "EstimatedDeIcingDurationEDIT": "harry's test",
      "EstimatedEndBoardingTimeEEBT": "harry's test",
      "EstimatedEndofDeicingTimeEEZT": "harry's test",
      "EstimatedInBlockTimeEIBT": "harry's test",
      "EstimatedLandingTimeELDT": "harry's test",
      "EstimatedLastCallTime": "harry's test",
      "EstimatedOffBlockTimeEOBT": "harry's test",
      "EstimatedReadyforDeicingTimeERZT": "harry's test",
      "EstimatedStartBoardingTime": "harry's test",
      "EstimatedTakeOffTimeETOT": "harry's test",
      "EstimatedTaxiInDurationEXIT": "harry's test",
      "EstimatedTaxiOutDurationEXOT": "harry's test",
      "EstimatedTurnAroundDurationETTT": "harry's test",
      "MinimumTurnAroundTimeMTTT": "harry's test",
      "PlannedLastCallTime": "harry's test",
      "PlannedStartBoardingTime": "harry's test",
      "ScheduledInBlockTimeSIBT": "harry's test",
      "ScheduledOffBlockTimeSOBT": "harry's test",
      "ScheduledTurnAroundDurationSTTT": "harry's test",
      "TargetLandingTimeTLDT": "harry's test",
      "TargetOffBlockTimeTOBT": "harry's test",
      "TargetStartUpApprovalTimeTSAT": "harry's test",
      "TargetTakeOffTimeTTOT": "harry's test"
    }
  ],
  "PlannedDestinationLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "PlannedOriginLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "Route": [
    {
      "RouteSegment": {
        "Description": "harry's test",
        "Identifier": "harry's test",
        "RequestedFlightLevel": "harry's test",
        "RequestedFlightLevelPoint": "harry's test",
        "TrueAirspeed": "harry's test",
        "TrueAirspeedPoint": "harry's test"
      },
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "RouteInternationalDomestic": "harry's test",
      "RouteText": "harry's test",
      "StandardInstrumentDeparture": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    }
  ],
  "ScheduledAircraftMovementStatus": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "ScheduledDroneAircraftMovementIdentification": [
    {
      "Identifier": "harry's test",
      "ScheduledDateTime": "harry's test",
      "SystemIdentifier": "harry's test"
    }
  ],
  "ContactResolutionScope": "harry's test",
  "Description": "harry's test",
  "EstimatedDuration": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "EstimatedTimeOfArrival": "harry's test"
}
flight-plan.tsx:122
Array [ "ScheduledDroneAircraftMovement", "OtherInformation" ]
 
Array [ "OtherInformation" ]
 
Array [ "ScheduledDroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "OtherInformation": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "Activity": [
    {
      "ActivityType": [
        {
          "Description": "harry's test",
          "Value": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Value": "harry's test"
    }
  ],
  "DroneAircraftMovementRuleType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "DroneAircraftMovementType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "DroneAircraftTransport": [
    {
      "FutureMaximumTakeOffWeight": 1.1,
      "AircraftTransportEquipment": [
        {
          "Mode": "harry's test"
        }
      ],
      "DroneAircraftTransportType": [
        {
          "Value": "harry's test"
        }
      ],
      "DroneAircraftTransportIdentification": {
        "Registration": "harry's test"
      },
      "AircraftDescription": "harry's test",
      "Mode": "harry's test",
      "GuidanceRequired": ""
    }
  ],
  "OperationalTimes": [
    {
      "AircraftMovementMeasure": {
        "Code": "harry's test",
        "Description": "harry's test",
        "Identifier": "harry's test",
        "Name": "harry's test",
        "Title": "harry's test",
        "Value": "harry's test"
      },
      "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
      "ActualCommencementofDeicingTimeACZT": "harry's test",
      "ActualDeIcingDurationADIT": "harry's test",
      "ActualEndBoardingTimeAEBT": "harry's test",
      "ActualEndofDeicingTimeAEZT": "harry's test",
      "ActualEndofGroundHandlingTimeAEGT": "harry's test",
      "ActualFinalApproachTimeAFAT": "harry's test",
      "ActualGroundHandlingDurationAGHT": "harry's test",
      "ActualInBlockTimeAIBT": "harry's test",
      "ActualLandingTimeALDT": "harry's test",
      "ActualLastCallTime": "harry's test",
      "ActualOffBlockTimeAOBT": "harry's test",
      "ActualReadyforDeicingTimeARZT": "harry's test",
      "ActualReadyforDepartureTimeARDT": "harry's test",
      "ActualStartBoardingTimeASBT": "harry's test",
      "ActualStartUpApprovalTimeASAT": "harry's test",
      "ActualStartUpRequestTimeASRT": "harry's test",
      "ActualTakeOffTimeATOT": "harry's test",
      "ActualTaxiInDurationAXIT": "harry's test",
      "ActualTaxiOutDurationAXOT": "harry's test",
      "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
      "ActualTurnaroundTimeATTT": "harry's test",
      "CalculatedTakeOffTimeCTOT": "harry's test",
      "EntryintoApproachZoneTime": "harry's test",
      "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
      "EstimatedDeIcingDurationEDIT": "harry's test",
      "EstimatedEndBoardingTimeEEBT": "harry's test",
      "EstimatedEndofDeicingTimeEEZT": "harry's test",
      "EstimatedInBlockTimeEIBT": "harry's test",
      "EstimatedLandingTimeELDT": "harry's test",
      "EstimatedLastCallTime": "harry's test",
      "EstimatedOffBlockTimeEOBT": "harry's test",
      "EstimatedReadyforDeicingTimeERZT": "harry's test",
      "EstimatedStartBoardingTime": "harry's test",
      "EstimatedTakeOffTimeETOT": "harry's test",
      "EstimatedTaxiInDurationEXIT": "harry's test",
      "EstimatedTaxiOutDurationEXOT": "harry's test",
      "EstimatedTurnAroundDurationETTT": "harry's test",
      "MinimumTurnAroundTimeMTTT": "harry's test",
      "PlannedLastCallTime": "harry's test",
      "PlannedStartBoardingTime": "harry's test",
      "ScheduledInBlockTimeSIBT": "harry's test",
      "ScheduledOffBlockTimeSOBT": "harry's test",
      "ScheduledTurnAroundDurationSTTT": "harry's test",
      "TargetLandingTimeTLDT": "harry's test",
      "TargetOffBlockTimeTOBT": "harry's test",
      "TargetStartUpApprovalTimeTSAT": "harry's test",
      "TargetTakeOffTimeTTOT": "harry's test"
    }
  ],
  "PlannedDestinationLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "PlannedOriginLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "Route": [
    {
      "RouteSegment": {
        "Description": "harry's test",
        "Identifier": "harry's test",
        "RequestedFlightLevel": "harry's test",
        "RequestedFlightLevelPoint": "harry's test",
        "TrueAirspeed": "harry's test",
        "TrueAirspeedPoint": "harry's test"
      },
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "RouteInternationalDomestic": "harry's test",
      "RouteText": "harry's test",
      "StandardInstrumentDeparture": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    }
  ],
  "ScheduledAircraftMovementStatus": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "ScheduledDroneAircraftMovementIdentification": [
    {
      "Identifier": "harry's test",
      "ScheduledDateTime": "harry's test",
      "SystemIdentifier": "harry's test"
    }
  ],
  "ContactResolutionScope": "harry's test",
  "Description": "harry's test",
  "EstimatedDuration": "harry's test",
  "EstimatedTimeOfArrival": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "OtherInformation": "harry's test"
}
flight-plan.tsx:122
Array [ "ScheduledDroneAircraftMovement", "Purpose" ]
 
Array [ "Purpose" ]
 
Array [ "ScheduledDroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "Purpose": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "Activity": [
    {
      "ActivityType": [
        {
          "Description": "harry's test",
          "Value": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Value": "harry's test"
    }
  ],
  "DroneAircraftMovementRuleType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "DroneAircraftMovementType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "DroneAircraftTransport": [
    {
      "FutureMaximumTakeOffWeight": 1.1,
      "AircraftTransportEquipment": [
        {
          "Mode": "harry's test"
        }
      ],
      "DroneAircraftTransportType": [
        {
          "Value": "harry's test"
        }
      ],
      "DroneAircraftTransportIdentification": {
        "Registration": "harry's test"
      },
      "AircraftDescription": "harry's test",
      "Mode": "harry's test",
      "GuidanceRequired": ""
    }
  ],
  "OperationalTimes": [
    {
      "AircraftMovementMeasure": {
        "Code": "harry's test",
        "Description": "harry's test",
        "Identifier": "harry's test",
        "Name": "harry's test",
        "Title": "harry's test",
        "Value": "harry's test"
      },
      "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
      "ActualCommencementofDeicingTimeACZT": "harry's test",
      "ActualDeIcingDurationADIT": "harry's test",
      "ActualEndBoardingTimeAEBT": "harry's test",
      "ActualEndofDeicingTimeAEZT": "harry's test",
      "ActualEndofGroundHandlingTimeAEGT": "harry's test",
      "ActualFinalApproachTimeAFAT": "harry's test",
      "ActualGroundHandlingDurationAGHT": "harry's test",
      "ActualInBlockTimeAIBT": "harry's test",
      "ActualLandingTimeALDT": "harry's test",
      "ActualLastCallTime": "harry's test",
      "ActualOffBlockTimeAOBT": "harry's test",
      "ActualReadyforDeicingTimeARZT": "harry's test",
      "ActualReadyforDepartureTimeARDT": "harry's test",
      "ActualStartBoardingTimeASBT": "harry's test",
      "ActualStartUpApprovalTimeASAT": "harry's test",
      "ActualStartUpRequestTimeASRT": "harry's test",
      "ActualTakeOffTimeATOT": "harry's test",
      "ActualTaxiInDurationAXIT": "harry's test",
      "ActualTaxiOutDurationAXOT": "harry's test",
      "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
      "ActualTurnaroundTimeATTT": "harry's test",
      "CalculatedTakeOffTimeCTOT": "harry's test",
      "EntryintoApproachZoneTime": "harry's test",
      "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
      "EstimatedDeIcingDurationEDIT": "harry's test",
      "EstimatedEndBoardingTimeEEBT": "harry's test",
      "EstimatedEndofDeicingTimeEEZT": "harry's test",
      "EstimatedInBlockTimeEIBT": "harry's test",
      "EstimatedLandingTimeELDT": "harry's test",
      "EstimatedLastCallTime": "harry's test",
      "EstimatedOffBlockTimeEOBT": "harry's test",
      "EstimatedReadyforDeicingTimeERZT": "harry's test",
      "EstimatedStartBoardingTime": "harry's test",
      "EstimatedTakeOffTimeETOT": "harry's test",
      "EstimatedTaxiInDurationEXIT": "harry's test",
      "EstimatedTaxiOutDurationEXOT": "harry's test",
      "EstimatedTurnAroundDurationETTT": "harry's test",
      "MinimumTurnAroundTimeMTTT": "harry's test",
      "PlannedLastCallTime": "harry's test",
      "PlannedStartBoardingTime": "harry's test",
      "ScheduledInBlockTimeSIBT": "harry's test",
      "ScheduledOffBlockTimeSOBT": "harry's test",
      "ScheduledTurnAroundDurationSTTT": "harry's test",
      "TargetLandingTimeTLDT": "harry's test",
      "TargetOffBlockTimeTOBT": "harry's test",
      "TargetStartUpApprovalTimeTSAT": "harry's test",
      "TargetTakeOffTimeTTOT": "harry's test"
    }
  ],
  "PlannedDestinationLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "PlannedOriginLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "Route": [
    {
      "RouteSegment": {
        "Description": "harry's test",
        "Identifier": "harry's test",
        "RequestedFlightLevel": "harry's test",
        "RequestedFlightLevelPoint": "harry's test",
        "TrueAirspeed": "harry's test",
        "TrueAirspeedPoint": "harry's test"
      },
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "RouteInternationalDomestic": "harry's test",
      "RouteText": "harry's test",
      "StandardInstrumentDeparture": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    }
  ],
  "ScheduledAircraftMovementStatus": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "ScheduledDroneAircraftMovementIdentification": [
    {
      "Identifier": "harry's test",
      "ScheduledDateTime": "harry's test",
      "SystemIdentifier": "harry's test"
    }
  ],
  "ContactResolutionScope": "harry's test",
  "Description": "harry's test",
  "EstimatedDuration": "harry's test",
  "EstimatedTimeOfArrival": "harry's test",
  "OtherInformation": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Purpose": "harry's test"
}
flight-plan.tsx:122
Array [ "ScheduledDroneAircraftMovement", "Remark" ]
 
Array [ "Remark" ]
 
Array [ "ScheduledDroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "Remark": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "Activity": [
    {
      "ActivityType": [
        {
          "Description": "harry's test",
          "Value": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Value": "harry's test"
    }
  ],
  "DroneAircraftMovementRuleType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "DroneAircraftMovementType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "DroneAircraftTransport": [
    {
      "FutureMaximumTakeOffWeight": 1.1,
      "AircraftTransportEquipment": [
        {
          "Mode": "harry's test"
        }
      ],
      "DroneAircraftTransportType": [
        {
          "Value": "harry's test"
        }
      ],
      "DroneAircraftTransportIdentification": {
        "Registration": "harry's test"
      },
      "AircraftDescription": "harry's test",
      "Mode": "harry's test",
      "GuidanceRequired": ""
    }
  ],
  "OperationalTimes": [
    {
      "AircraftMovementMeasure": {
        "Code": "harry's test",
        "Description": "harry's test",
        "Identifier": "harry's test",
        "Name": "harry's test",
        "Title": "harry's test",
        "Value": "harry's test"
      },
      "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
      "ActualCommencementofDeicingTimeACZT": "harry's test",
      "ActualDeIcingDurationADIT": "harry's test",
      "ActualEndBoardingTimeAEBT": "harry's test",
      "ActualEndofDeicingTimeAEZT": "harry's test",
      "ActualEndofGroundHandlingTimeAEGT": "harry's test",
      "ActualFinalApproachTimeAFAT": "harry's test",
      "ActualGroundHandlingDurationAGHT": "harry's test",
      "ActualInBlockTimeAIBT": "harry's test",
      "ActualLandingTimeALDT": "harry's test",
      "ActualLastCallTime": "harry's test",
      "ActualOffBlockTimeAOBT": "harry's test",
      "ActualReadyforDeicingTimeARZT": "harry's test",
      "ActualReadyforDepartureTimeARDT": "harry's test",
      "ActualStartBoardingTimeASBT": "harry's test",
      "ActualStartUpApprovalTimeASAT": "harry's test",
      "ActualStartUpRequestTimeASRT": "harry's test",
      "ActualTakeOffTimeATOT": "harry's test",
      "ActualTaxiInDurationAXIT": "harry's test",
      "ActualTaxiOutDurationAXOT": "harry's test",
      "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
      "ActualTurnaroundTimeATTT": "harry's test",
      "CalculatedTakeOffTimeCTOT": "harry's test",
      "EntryintoApproachZoneTime": "harry's test",
      "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
      "EstimatedDeIcingDurationEDIT": "harry's test",
      "EstimatedEndBoardingTimeEEBT": "harry's test",
      "EstimatedEndofDeicingTimeEEZT": "harry's test",
      "EstimatedInBlockTimeEIBT": "harry's test",
      "EstimatedLandingTimeELDT": "harry's test",
      "EstimatedLastCallTime": "harry's test",
      "EstimatedOffBlockTimeEOBT": "harry's test",
      "EstimatedReadyforDeicingTimeERZT": "harry's test",
      "EstimatedStartBoardingTime": "harry's test",
      "EstimatedTakeOffTimeETOT": "harry's test",
      "EstimatedTaxiInDurationEXIT": "harry's test",
      "EstimatedTaxiOutDurationEXOT": "harry's test",
      "EstimatedTurnAroundDurationETTT": "harry's test",
      "MinimumTurnAroundTimeMTTT": "harry's test",
      "PlannedLastCallTime": "harry's test",
      "PlannedStartBoardingTime": "harry's test",
      "ScheduledInBlockTimeSIBT": "harry's test",
      "ScheduledOffBlockTimeSOBT": "harry's test",
      "ScheduledTurnAroundDurationSTTT": "harry's test",
      "TargetLandingTimeTLDT": "harry's test",
      "TargetOffBlockTimeTOBT": "harry's test",
      "TargetStartUpApprovalTimeTSAT": "harry's test",
      "TargetTakeOffTimeTTOT": "harry's test"
    }
  ],
  "PlannedDestinationLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "PlannedOriginLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "Route": [
    {
      "RouteSegment": {
        "Description": "harry's test",
        "Identifier": "harry's test",
        "RequestedFlightLevel": "harry's test",
        "RequestedFlightLevelPoint": "harry's test",
        "TrueAirspeed": "harry's test",
        "TrueAirspeedPoint": "harry's test"
      },
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "RouteInternationalDomestic": "harry's test",
      "RouteText": "harry's test",
      "StandardInstrumentDeparture": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    }
  ],
  "ScheduledAircraftMovementStatus": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "ScheduledDroneAircraftMovementIdentification": [
    {
      "Identifier": "harry's test",
      "ScheduledDateTime": "harry's test",
      "SystemIdentifier": "harry's test"
    }
  ],
  "ContactResolutionScope": "harry's test",
  "Description": "harry's test",
  "EstimatedDuration": "harry's test",
  "EstimatedTimeOfArrival": "harry's test",
  "OtherInformation": "harry's test",
  "Purpose": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Remark": "harry's test"
}
flight-plan.tsx:122
Array [ "ScheduledDroneAircraftMovement", "SORAReference" ]
 
Array [ "SORAReference" ]
 
Array [ "ScheduledDroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "SORAReference": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "Activity": [
    {
      "ActivityType": [
        {
          "Description": "harry's test",
          "Value": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Value": "harry's test"
    }
  ],
  "DroneAircraftMovementRuleType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "DroneAircraftMovementType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "DroneAircraftTransport": [
    {
      "FutureMaximumTakeOffWeight": 1.1,
      "AircraftTransportEquipment": [
        {
          "Mode": "harry's test"
        }
      ],
      "DroneAircraftTransportType": [
        {
          "Value": "harry's test"
        }
      ],
      "DroneAircraftTransportIdentification": {
        "Registration": "harry's test"
      },
      "AircraftDescription": "harry's test",
      "Mode": "harry's test",
      "GuidanceRequired": ""
    }
  ],
  "OperationalTimes": [
    {
      "AircraftMovementMeasure": {
        "Code": "harry's test",
        "Description": "harry's test",
        "Identifier": "harry's test",
        "Name": "harry's test",
        "Title": "harry's test",
        "Value": "harry's test"
      },
      "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
      "ActualCommencementofDeicingTimeACZT": "harry's test",
      "ActualDeIcingDurationADIT": "harry's test",
      "ActualEndBoardingTimeAEBT": "harry's test",
      "ActualEndofDeicingTimeAEZT": "harry's test",
      "ActualEndofGroundHandlingTimeAEGT": "harry's test",
      "ActualFinalApproachTimeAFAT": "harry's test",
      "ActualGroundHandlingDurationAGHT": "harry's test",
      "ActualInBlockTimeAIBT": "harry's test",
      "ActualLandingTimeALDT": "harry's test",
      "ActualLastCallTime": "harry's test",
      "ActualOffBlockTimeAOBT": "harry's test",
      "ActualReadyforDeicingTimeARZT": "harry's test",
      "ActualReadyforDepartureTimeARDT": "harry's test",
      "ActualStartBoardingTimeASBT": "harry's test",
      "ActualStartUpApprovalTimeASAT": "harry's test",
      "ActualStartUpRequestTimeASRT": "harry's test",
      "ActualTakeOffTimeATOT": "harry's test",
      "ActualTaxiInDurationAXIT": "harry's test",
      "ActualTaxiOutDurationAXOT": "harry's test",
      "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
      "ActualTurnaroundTimeATTT": "harry's test",
      "CalculatedTakeOffTimeCTOT": "harry's test",
      "EntryintoApproachZoneTime": "harry's test",
      "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
      "EstimatedDeIcingDurationEDIT": "harry's test",
      "EstimatedEndBoardingTimeEEBT": "harry's test",
      "EstimatedEndofDeicingTimeEEZT": "harry's test",
      "EstimatedInBlockTimeEIBT": "harry's test",
      "EstimatedLandingTimeELDT": "harry's test",
      "EstimatedLastCallTime": "harry's test",
      "EstimatedOffBlockTimeEOBT": "harry's test",
      "EstimatedReadyforDeicingTimeERZT": "harry's test",
      "EstimatedStartBoardingTime": "harry's test",
      "EstimatedTakeOffTimeETOT": "harry's test",
      "EstimatedTaxiInDurationEXIT": "harry's test",
      "EstimatedTaxiOutDurationEXOT": "harry's test",
      "EstimatedTurnAroundDurationETTT": "harry's test",
      "MinimumTurnAroundTimeMTTT": "harry's test",
      "PlannedLastCallTime": "harry's test",
      "PlannedStartBoardingTime": "harry's test",
      "ScheduledInBlockTimeSIBT": "harry's test",
      "ScheduledOffBlockTimeSOBT": "harry's test",
      "ScheduledTurnAroundDurationSTTT": "harry's test",
      "TargetLandingTimeTLDT": "harry's test",
      "TargetOffBlockTimeTOBT": "harry's test",
      "TargetStartUpApprovalTimeTSAT": "harry's test",
      "TargetTakeOffTimeTTOT": "harry's test"
    }
  ],
  "PlannedDestinationLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "PlannedOriginLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "Route": [
    {
      "RouteSegment": {
        "Description": "harry's test",
        "Identifier": "harry's test",
        "RequestedFlightLevel": "harry's test",
        "RequestedFlightLevelPoint": "harry's test",
        "TrueAirspeed": "harry's test",
        "TrueAirspeedPoint": "harry's test"
      },
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "RouteInternationalDomestic": "harry's test",
      "RouteText": "harry's test",
      "StandardInstrumentDeparture": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    }
  ],
  "ScheduledAircraftMovementStatus": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "ScheduledDroneAircraftMovementIdentification": [
    {
      "Identifier": "harry's test",
      "ScheduledDateTime": "harry's test",
      "SystemIdentifier": "harry's test"
    }
  ],
  "ContactResolutionScope": "harry's test",
  "Description": "harry's test",
  "EstimatedDuration": "harry's test",
  "EstimatedTimeOfArrival": "harry's test",
  "OtherInformation": "harry's test",
  "Purpose": "harry's test",
  "Remark": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "SORAReference": "harry's test"
}
flight-plan.tsx:122
Array [ "ScheduledDroneAircraftMovement", "Summary" ]
 
Array [ "Summary" ]
 
Array [ "ScheduledDroneAircraftMovement" ]
flight-plan.tsx:112
updateToFlightPlan {
  "ScheduledDroneAircraftMovement": {
    "Summary": "harry's test"
  }
}
flight-plan.tsx:115
objectToChange {
  "Activity": [
    {
      "ActivityType": [
        {
          "Description": "harry's test",
          "Value": "harry's test"
        }
      ],
      "Description": "harry's test",
      "Value": "harry's test"
    }
  ],
  "DroneAircraftMovementRuleType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "DroneAircraftMovementType": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "DroneAircraftTransport": [
    {
      "FutureMaximumTakeOffWeight": 1.1,
      "AircraftTransportEquipment": [
        {
          "Mode": "harry's test"
        }
      ],
      "DroneAircraftTransportType": [
        {
          "Value": "harry's test"
        }
      ],
      "DroneAircraftTransportIdentification": {
        "Registration": "harry's test"
      },
      "AircraftDescription": "harry's test",
      "Mode": "harry's test",
      "GuidanceRequired": ""
    }
  ],
  "OperationalTimes": [
    {
      "AircraftMovementMeasure": {
        "Code": "harry's test",
        "Description": "harry's test",
        "Identifier": "harry's test",
        "Name": "harry's test",
        "Title": "harry's test",
        "Value": "harry's test"
      },
      "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
      "ActualCommencementofDeicingTimeACZT": "harry's test",
      "ActualDeIcingDurationADIT": "harry's test",
      "ActualEndBoardingTimeAEBT": "harry's test",
      "ActualEndofDeicingTimeAEZT": "harry's test",
      "ActualEndofGroundHandlingTimeAEGT": "harry's test",
      "ActualFinalApproachTimeAFAT": "harry's test",
      "ActualGroundHandlingDurationAGHT": "harry's test",
      "ActualInBlockTimeAIBT": "harry's test",
      "ActualLandingTimeALDT": "harry's test",
      "ActualLastCallTime": "harry's test",
      "ActualOffBlockTimeAOBT": "harry's test",
      "ActualReadyforDeicingTimeARZT": "harry's test",
      "ActualReadyforDepartureTimeARDT": "harry's test",
      "ActualStartBoardingTimeASBT": "harry's test",
      "ActualStartUpApprovalTimeASAT": "harry's test",
      "ActualStartUpRequestTimeASRT": "harry's test",
      "ActualTakeOffTimeATOT": "harry's test",
      "ActualTaxiInDurationAXIT": "harry's test",
      "ActualTaxiOutDurationAXOT": "harry's test",
      "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
      "ActualTurnaroundTimeATTT": "harry's test",
      "CalculatedTakeOffTimeCTOT": "harry's test",
      "EntryintoApproachZoneTime": "harry's test",
      "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
      "EstimatedDeIcingDurationEDIT": "harry's test",
      "EstimatedEndBoardingTimeEEBT": "harry's test",
      "EstimatedEndofDeicingTimeEEZT": "harry's test",
      "EstimatedInBlockTimeEIBT": "harry's test",
      "EstimatedLandingTimeELDT": "harry's test",
      "EstimatedLastCallTime": "harry's test",
      "EstimatedOffBlockTimeEOBT": "harry's test",
      "EstimatedReadyforDeicingTimeERZT": "harry's test",
      "EstimatedStartBoardingTime": "harry's test",
      "EstimatedTakeOffTimeETOT": "harry's test",
      "EstimatedTaxiInDurationEXIT": "harry's test",
      "EstimatedTaxiOutDurationEXOT": "harry's test",
      "EstimatedTurnAroundDurationETTT": "harry's test",
      "MinimumTurnAroundTimeMTTT": "harry's test",
      "PlannedLastCallTime": "harry's test",
      "PlannedStartBoardingTime": "harry's test",
      "ScheduledInBlockTimeSIBT": "harry's test",
      "ScheduledOffBlockTimeSOBT": "harry's test",
      "ScheduledTurnAroundDurationSTTT": "harry's test",
      "TargetLandingTimeTLDT": "harry's test",
      "TargetOffBlockTimeTOBT": "harry's test",
      "TargetStartUpApprovalTimeTSAT": "harry's test",
      "TargetTakeOffTimeTTOT": "harry's test"
    }
  ],
  "PlannedDestinationLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "PlannedOriginLocation": [
    {
      "GeographicLocation": {
        "SpatialReferenceDefinition": {
          "SpatialReferenceSystem": [
            {
              "SpatialReferenceSystemType": [
                {
                  "Code": "harry's test",
                  "Description": "harry's test"
                }
              ],
              "SpatialStandardsAuthorityParty": [
                {
                  "Name": "harry's test"
                }
              ],
              "Description": "harry's test",
              "Identifier": "harry's test"
            }
          ],
          "CoordX": 1.1,
          "CoordY": 1.1,
          "CoordZ": 1.1,
          "Value": "harry's test"
        },
        "Code": "harry's test",
        "Name": "harry's test"
      },
      "GeopoliticalLocation": {
        "Name": "harry's test"
      },
      "Value": "harry's test"
    }
  ],
  "Route": [
    {
      "RouteSegment": {
        "Description": "harry's test",
        "Identifier": "harry's test",
        "RequestedFlightLevel": "harry's test",
        "RequestedFlightLevelPoint": "harry's test",
        "TrueAirspeed": "harry's test",
        "TrueAirspeedPoint": "harry's test"
      },
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "RouteInternationalDomestic": "harry's test",
      "RouteText": "harry's test",
      "StandardInstrumentDeparture": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    }
  ],
  "ScheduledAircraftMovementStatus": [
    {
      "Code": "harry's test",
      "Description": "harry's test"
    }
  ],
  "ScheduledDroneAircraftMovementIdentification": [
    {
      "Identifier": "harry's test",
      "ScheduledDateTime": "harry's test",
      "SystemIdentifier": "harry's test"
    }
  ],
  "ContactResolutionScope": "harry's test",
  "Description": "harry's test",
  "EstimatedDuration": "harry's test",
  "EstimatedTimeOfArrival": "harry's test",
  "OtherInformation": "harry's test",
  "Purpose": "harry's test",
  "Remark": "harry's test",
  "SORAReference": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "Summary": "harry's test"
}
flight-plan.tsx:122
Array [ "departureAirport" ]
 
Array [ "departureAirport" ]
 
Array []
flight-plan.tsx:112
updateToFlightPlan {
  "departureAirport": "harry's test"
}
flight-plan.tsx:115
objectToChange 
{
  "operatingAirline": {
    "iataCode": "harry's test",
    "icaoCode": "harry's test",
    "name": "harry's test"
  },
  "flightNumber": {
    "airlineCode": "harry's test",
    "trackNumber": "harry's test",
    "suffix": "harry's test"
  },
  "AircraftMovement": {
    "AircraftMovementStatus": {
      "Cancelled": "harry's test",
      "Cleared": "harry's test",
      "Code": "harry's test",
      "DeicingStatus": "harry's test",
      "Deleted": "harry's test",
      "OperationalStatus": "harry's test",
      "PublicStatus": "harry's test",
      "Regulated": "harry's test"
    },
    "AircraftMovementIdentification": {
      "AircraftMovementCodeShare": {
        "Number": "harry's test",
        "ShowToPublic": ""
      },
      "AirTrafficControlCallsign": "harry's test",
      "DisplayedIdentifier": "harry's test",
      "IATAFlightNumber": "harry's test",
      "IATAOperatorIdentifier": "harry's test",
      "ICAOIdentifier": "harry's test",
      "ICAONumber": "harry's test…
flight-plan.tsx:121
objectToAdd {
  "departureAirport": "harry's test"
}
flight-plan.tsx:122
Array [ "arrivalAirport" ]
 
Array [ "arrivalAirport" ]
 
Array []
flight-plan.tsx:112
updateToFlightPlan {
  "arrivalAirport": "harry's test"
}
flight-plan.tsx:115
objectToChange 
{
  "operatingAirline": {
    "iataCode": "harry's test",
    "icaoCode": "harry's test",
    "name": "harry's test"
  },
  "flightNumber": {
    "airlineCode": "harry's test",
    "trackNumber": "harry's test",
    "suffix": "harry's test"
  },
  "AircraftMovement": {
    "AircraftMovementStatus": {
      "Cancelled": "harry's test",
      "Cleared": "harry's test",
      "Code": "harry's test",
      "DeicingStatus": "harry's test",
      "Deleted": "harry's test",
      "OperationalStatus": "harry's test",
      "PublicStatus": "harry's test",
      "Regulated": "harry's test"
    },
    "AircraftMovementIdentification": {
      "AircraftMovementCodeShare": {
        "Number": "harry's test",
        "ShowToPublic": ""
      },
      "AirTrafficControlCallsign": "harry's test",
      "DisplayedIdentifier": "harry's test",
      "IATAFlightNumber": "harry's test",
      "IATAOperatorIdentifier": "harry's test",
      "ICAOIdentifier": "harry's test",
      "ICAONumber": "harry's test…
flight-plan.tsx:121
objectToAdd {
  "arrivalAirport": "harry's test"
}
flight-plan.tsx:122
Array [ "originDate" ]
 
Array [ "originDate" ]
 
Array []
flight-plan.tsx:112
updateToFlightPlan {
  "originDate": "harry's test"
}
flight-plan.tsx:115
objectToChange 
{
  "operatingAirline": {
    "iataCode": "harry's test",
    "icaoCode": "harry's test",
    "name": "harry's test"
  },
  "flightNumber": {
    "airlineCode": "harry's test",
    "trackNumber": "harry's test",
    "suffix": "harry's test"
  },
  "AircraftMovement": {
    "AircraftMovementStatus": {
      "Cancelled": "harry's test",
      "Cleared": "harry's test",
      "Code": "harry's test",
      "DeicingStatus": "harry's test",
      "Deleted": "harry's test",
      "OperationalStatus": "harry's test",
      "PublicStatus": "harry's test",
      "Regulated": "harry's test"
    },
    "AircraftMovementIdentification": {
      "AircraftMovementCodeShare": {
        "Number": "harry's test",
        "ShowToPublic": ""
      },
      "AirTrafficControlCallsign": "harry's test",
      "DisplayedIdentifier": "harry's test",
      "IATAFlightNumber": "harry's test",
      "IATAOperatorIdentifier": "harry's test",
      "ICAOIdentifier": "harry's test",
      "ICAONumber": "harry's test…
flight-plan.tsx:121
objectToAdd {
  "originDate": "harry's test"
}
flight-plan.tsx:122
Array [ "TypeBRawMessage" ]
 
Array [ "TypeBRawMessage" ]
 
Array []
flight-plan.tsx:112
updateToFlightPlan {
  "TypeBRawMessage": "harry's test"
}
flight-plan.tsx:115
objectToChange 
{
  "operatingAirline": {
    "iataCode": "harry's test",
    "icaoCode": "harry's test",
    "name": "harry's test"
  },
  "flightNumber": {
    "airlineCode": "harry's test",
    "trackNumber": "harry's test",
    "suffix": "harry's test"
  },
  "AircraftMovement": {
    "AircraftMovementStatus": {
      "Cancelled": "harry's test",
      "Cleared": "harry's test",
      "Code": "harry's test",
      "DeicingStatus": "harry's test",
      "Deleted": "harry's test",
      "OperationalStatus": "harry's test",
      "PublicStatus": "harry's test",
      "Regulated": "harry's test"
    },
    "AircraftMovementIdentification": {
      "AircraftMovementCodeShare": {
        "Number": "harry's test",
        "ShowToPublic": ""
      },
      "AirTrafficControlCallsign": "harry's test",
      "DisplayedIdentifier": "harry's test",
      "IATAFlightNumber": "harry's test",
      "IATAOperatorIdentifier": "harry's test",
      "ICAOIdentifier": "harry's test",
      "ICAONumber": "harry's test",
      "Number": "harry's test",
      "ScheduledDateTime": "harry's test",
      "Suffix": "harry's test",
      "SystemIdentifier": "harry's test",
      "TurnRoundIdentifier": "harry's test"
    },
    "BillingInformation": {
      "RebatePassengerNumbers": 1.1,
      "RebatePassengerReasonCode": "harry's test",
      "AircraftFEGPEquipped": "",
      "AircraftPCAEquipped": ""
    },
    "ConnectionAircraftMovement": {
      "Order": 1.1,
      "TransferBagCount": 1.1,
      "TransferPassengerCount": 1.1,
      "CheckinZone": "harry's test",
      "ConnectingFlightDestination": "harry's test",
      "ConnectingFlightNumber": "harry's test",
      "EstimatedDateTime": "harry's test",
      "Gate": "harry's test",
      "OperatedDateTime": "harry's test",
      "ScheduledDateTime": "harry's test",
      "Terminal": "harry's test"
    },
    "HandlingAgentParty": {
      "CateringLoaderNumber": "harry's test",
      "Code": "harry's test",
      "HandlingCrewNumber": "harry's test",
      "Name": "harry's test",
      "PassengerHandlingTeamIdentifier": "harry's test",
      "Type": "harry's test"
    },
    "IATAIrregularityDetails": {
      "Duration": 1.1,
      "NumericCode": "harry's test"
    },
    "LinkedAircraftMovement": {
      "ICAONumber": 1.1,
      "ArrivalOrDeparture": "harry's test",
      "IATAFlightNumber": "harry's test",
      "IATAOperatorIdentifier": "harry's test",
      "ICAOIdentifier": "harry's test",
      "ScheduledDateTime": "harry's test",
      "Suffix": "harry's test",
      "SystemIdentifier": "harry's test",
      "AircraftOnGround": ""
    },
    "OperationalTimes": {
      "AircraftMovementMeasure": {
        "Code": "harry's test",
        "Description": "harry's test",
        "Identifier": "harry's test",
        "Name": "harry's test",
        "Title": "harry's test",
        "Value": "harry's test"
      },
      "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
      "ActualCommencementofDeicingTimeACZT": "harry's test",
      "ActualDeIcingDurationADIT": "harry's test",
      "ActualEndBoardingTimeAEBT": "harry's test",
      "ActualEndofDeicingTimeAEZT": "harry's test",
      "ActualEndofGroundHandlingTimeAEGT": "harry's test",
      "ActualFinalApproachTimeAFAT": "harry's test",
      "ActualGroundHandlingDurationAGHT": "harry's test",
      "ActualInBlockTimeAIBT": "harry's test",
      "ActualLandingTimeALDT": "harry's test",
      "ActualLastCallTime": "harry's test",
      "ActualOffBlockTimeAOBT": "harry's test",
      "ActualReadyforDeicingTimeARZT": "harry's test",
      "ActualReadyforDepartureTimeARDT": "harry's test",
      "ActualStartBoardingTimeASBT": "harry's test",
      "ActualStartUpApprovalTimeASAT": "harry's test",
      "ActualStartUpRequestTimeASRT": "harry's test",
      "ActualTakeOffTimeATOT": "harry's test",
      "ActualTaxiInDurationAXIT": "harry's test",
      "ActualTaxiOutDurationAXOT": "harry's test",
      "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
      "ActualTurnaroundTimeATTT": "harry's test",
      "CalculatedTakeOffTimeCTOT": "harry's test",
      "EntryintoApproachZoneTime": "harry's test",
      "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
      "EstimatedDeIcingDurationEDIT": "harry's test",
      "EstimatedEndBoardingTimeEEBT": "harry's test",
      "EstimatedEndofDeicingTimeEEZT": "harry's test",
      "EstimatedInBlockTimeEIBT": "harry's test",
      "EstimatedLandingTimeELDT": "harry's test",
      "EstimatedLastCallTime": "harry's test",
      "EstimatedOffBlockTimeEOBT": "harry's test",
      "EstimatedReadyforDeicingTimeERZT": "harry's test",
      "EstimatedStartBoardingTime": "harry's test",
      "EstimatedTakeOffTimeETOT": "harry's test",
      "EstimatedTaxiInDurationEXIT": "harry's test",
      "EstimatedTaxiOutDurationEXOT": "harry's test",
      "EstimatedTurnAroundDurationETTT": "harry's test",
      "MinimumTurnAroundTimeMTTT": "harry's test",
      "PlannedLastCallTime": "harry's test",
      "PlannedStartBoardingTime": "harry's test",
      "ScheduledInBlockTimeSIBT": "harry's test",
      "ScheduledOffBlockTimeSOBT": "harry's test",
      "ScheduledTurnAroundDurationSTTT": "harry's test",
      "TargetLandingTimeTLDT": "harry's test",
      "TargetOffBlockTimeTOBT": "harry's test",
      "TargetStartUpApprovalTimeTSAT": "harry's test",
      "TargetTakeOffTimeTTOT": "harry's test"
    },
    "ArrivalOrDeparture": "harry's test",
    "AutomaticProcessing": "harry's test",
    "BaggageReclaim": "harry's test",
    "CarrierCode": "harry's test",
    "CheckinZone": "harry's test",
    "Comments": "harry's test",
    "DeicingMode": "harry's test",
    "DeicingPadLocation": "harry's test",
    "DeicingRigEquipment": "harry's test",
    "DeicingStandLocation": "harry's test",
    "Description": "harry's test",
    "DisplayFromTime": "harry's test",
    "DisplayUntilTime": "harry's test",
    "DivertAirport": "harry's test",
    "DivertAirportFacilityCode": "harry's test",
    "DivertIndicator": "harry's test",
    "DivertReason": "harry's test",
    "DivertReasonCode": "harry's test",
    "EstimatedDateTime": "harry's test",
    "FlightClassification": "harry's test",
    "FlightNumber": "harry's test",
    "FlightOriginOrDestination": "harry's test",
    "FromStand": "harry's test",
    "Gate": "harry's test",
    "InboundOrigin": "harry's test",
    "OperatedDateTime": "harry's test",
    "OutboundDestination": "harry's test",
    "Priority": "harry's test",
    "RepeatNumber": "harry's test",
    "ScheduledDateTime": "harry's test",
    "SpecialNeedsIndicator": "harry's test",
    "Terminal": "harry's test",
    "ArrivalSecurityCheck": "",
    "DepartureSecurityCheck": "",
    "Display": "",
    "PriorityDisplay": "",
    "TechnicalStop": ""
  },
  "AircraftTransport": {
    "AircraftTransportType": {
      "WakeTurbulenceCategory": {
        "Code": "harry's test",
        "Description": "harry's test"
      },
      "IATASubtypeCode": "harry's test",
      "IATATypeCode": "harry's test",
      "ICAOTypeCode": "harry's test"
    },
    "AircraftTransportEquipment": {
      "AircraftTransportEquipmentCategory": {
        "Description": "harry's test",
        "Identifier": "harry's test"
      },
      "AircraftTransportEquipmentType": {
        "Description": "harry's test",
        "Identifier": "harry's test"
      },
      "Description": "harry's test",
      "Identifier": "harry's test",
      "Mode": "harry's test"
    },
    "AircraftTransportCabinConfiguration": {
      "Cabin": "harry's test",
      "CabinClassType": "harry's test",
      "CabinType": "harry's test",
      "Compartment": "harry's test",
      "SeatCapacity": "harry's test",
      "SeatCount": "harry's test",
      "Status": "harry's test"
    },
    "AircraftTransportIdentification": {
      "AircraftAddress": "harry's test",
      "AircraftBodyType": "harry's test",
      "AircraftVersion": "harry's test",
      "CodeRequired": "harry's test",
      "FleetNumber": "harry's test",
      "GeneralTypeCode": "harry's test",
      "GroupCode": "harry's test",
      "OtherIdentifier": "harry's test",
      "Registration": "harry's test"
    },
    "AircraftTransportLoad": {
      "PassengerPartyCarried": {
        "TotalPassengerCount": 1.1,
        "PassengerTypes": [
          {
            "PassengerType": {
              "PassengerTypeCount": 1.1,
              "PassengerType": "harry's test"
            }
          }
        ]
      },
      "BagItemCarried": {
        "BagTypeCount": 1.1,
        "BagTypeWeight": 1.1,
        "TotalCount": 1.1,
        "TotalWeight": 1.1,
        "BagTypes": [
          {
            "BagCode": "harry's test",
            "BagDescription": "harry's test"
          }
        ]
      },
      "CargoItemCarried": {
        "CargoTypeCount": 1.1,
        "CargoTypeWeight": 1.1,
        "TotalCount": 1.1,
        "TotalWeight": 1.1,
        "CargoTypes": [
          {
            "CargoCode": "harry's test",
            "CargoDescription": "harry's test"
          }
        ],
        "SpecialCargo": "harry's test"
      },
      "MailItemCarried": {
        "TotalWeight": 1.1,
        "MailTypes": [
          {
            "MailCode": "harry's test",
            "MailDescription": "harry's test"
          }
        ]
      },
      "CrewPartyCarried": {
        "CrewCount": 1.1,
        "CrewTypes": [
          {
            "CrewTypeCount": 1.1,
            "CrewType": "harry's test"
          }
        ]
      },
      "BallastWeight": "harry's test",
      "DeadLoad": "harry's test"
    },
    "AircraftTransportIdentifier": {
      "AircraftBodyType": "harry's test",
      "AircraftVersion": "harry's test",
      "CodeRequired": "harry's test",
      "FleetNumber": "harry's test",
      "GeneralTypeCode": "harry's test",
      "GroupCode": "harry's test",
      "IATASubtypeCode": "harry's test",
      "IATATypeCode": "harry's test",
      "ICAOTypeCode": "harry's test",
      "Registration": "harry's test"
    },
    "AircraftDescription": "harry's test",
    "EarliestDeliveryDateTime": "harry's test",
    "FutureMaximumTakeOffWeight": "harry's test",
    "LatestDeliveryDateTime": "harry's test",
    "Mode": "harry's test",
    "NoiseCertificationIndicator": "harry's test",
    "StandChangeIndicator": "harry's test",
    "GuidanceRequired": "",
    "VehicleRequired": ""
  },
  "AirportFacility": {
    "RunwayFacility": {
      "RunwayIdentifier": "harry's test"
    },
    "StandFacility": {
      "ArrivalStand": "harry's test",
      "ProvisionalStandNumber": "harry's test",
      "StandHoldConflictingStand": "harry's test",
      "StandLocation": "harry's test",
      "StandNumber": "harry's test",
      "StandType": "harry's test",
      "CoachingIsRequired": "",
      "StandHoldRequired": ""
    },
    "TerminalFacility": {
      "CheckinZoneFacility": {
        "CheckinEndTime": "harry's test",
        "CheckinStartTime": "harry's test",
        "CheckinStatus": "harry's test",
        "CheckinZoneDescription": "harry's test",
        "CheckinZoneIdentifier": "harry's test"
      },
      "BagItemDeliveryCarousel": {
        "ActualFirstBagTime": "harry's test",
        "ActualLastBagTime": "harry's test",
        "BaggageReclaimStatus": "harry's test",
        "CarouselNumber": "harry's test",
        "ConveyorNumber": "harry's test",
        "LegacyFIDSCheckinZone": "harry's test",
        "SecondaryCarouselNumber": "harry's test"
      },
      "GateFacility": {
        "GateFacilityIdentification": {
          "Identifier": "harry's test"
        },
        "StaffReadinessStatus": {
          "StaffReadyForGateControl": ""
        },
        "GateFacilityOperationalTimes": {
          "ActualGateCloseTime": "harry's test",
          "ActualGateOpenTime": "harry's test",
          "GatingDueDateTime": "harry's test",
          "PlannedGateOpenTime": "harry's test"
        },
        "PassengerBoardingStatus": {
          "StatusAtGate": "harry's test"
        },
        "PassengerGateInstruction": {
          "GoToPassportControl": "harry's test"
        },
        "PierFacility": {
          "Description": "harry's test",
          "Identifier": "harry's test"
        },
        "AirJetty": {
          "AirJettyHireCode": "harry's test",
          "AirJettyType": "harry's test"
        },
        "GeneralRemarks": "harry's test",
        "PreviousGate": "harry's test",
        "RemoteOperationGate": "harry's test",
        "SecondaryGateNumber": "harry's test"
      },
      "Code": "harry's test",
      "Description": "harry's test"
    },
    "IATAIdentifier": "harry's test"
  },
  "Route": {
    "RouteSegment": {
      "Description": "harry's test",
      "Identifier": "harry's test",
      "RequestedFlightLevel": "harry's test",
      "RequestedFlightLevelPoint": "harry's test",
      "TrueAirspeed": "harry's test",
      "TrueAirspeedPoint": "harry's test"
    },
    "Description": "harry's test",
    "Identifier": "harry's test",
    "RequestedFlightLevel": "harry's test",
    "RequestedFlightLevelPoint": "harry's test",
    "RouteInternationalDomestic": "harry's test",
    "RouteText": "harry's test",
    "StandardInstrumentDeparture": "harry's test",
    "TrueAirspeed": "harry's test",
    "TrueAirspeedPoint": "harry's test"
  },
  "ScheduledAircraftMovement": {
    "ScheduledAircraftMovementStatus": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "ScheduledAircraftMovementIdentification": {
      "AircraftMovementRuleType": {
        "Code": "harry's test",
        "Description": "harry's test"
      },
      "AircraftMovementType": {
        "Code": "harry's test",
        "Description": "harry's test"
      },
      "AirTrafficControlCallsign": "harry's test",
      "IATAFlightNumber": "harry's test",
      "IATAOperatorIdentifier": "harry's test",
      "ICAOIdentifier": "harry's test",
      "ICAONumber": "harry's test",
      "Identifier": "harry's test",
      "Number": "harry's test",
      "ScheduledDateTime": "harry's test",
      "Suffix": "harry's test",
      "SystemIdentifier": "harry's test",
      "TurnRoundIdentifier": "harry's test"
    },
    "AlternateAirport": "harry's test",
    "DepartureAirportICAOCode": "harry's test",
    "DestinationAirportICAOCode": "harry's test",
    "EstimatedDuration": "harry's test",
    "EstimatedTimeofArrival": "harry's test",
    "OtherInformation": "harry's test",
    "Remark": "harry's test"
  },
  "DataQuality": {
    "Completeness": "harry's test",
    "Validity": "harry's test",
    "UpdateTimestamp": "harry's test",
    "UpdatedBy": "harry's test"
  },
  "DroneAircraftMovement": {
    "DestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialReferenceSystemType": [
                  {
                    "Code": "harry's test",
                    "Description": "harry's test"
                  }
                ],
                "SpatialStandardsAuthorityParty": [
                  {
                    "Name": "harry's test"
                  }
                ],
                "Description": "harry's test",
                "Identifier": "harry's test"
              }
            ],
            "CoordX": 1.1,
            "CoordY": 1.1,
            "CoordZ": 1.1,
            "Value": "harry's test"
          },
          "Code": "harry's test",
          "Name": "harry's test"
        },
        "GeopoliticalLocation": {
          "Name": "harry's test"
        },
        "Value": "harry's test"
      }
    ],
    "DroneOperatorParty": [
      {
        "DroneOperatorPartyIdentification": {
          "Description": "harry's test",
          "Identifier": "harry's test"
        },
        "Remark": "harry's test"
      }
    ],
    "OriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialReferenceSystemType": [
                  {
                    "Code": "harry's test",
                    "Description": "harry's test"
                  }
                ],
                "SpatialStandardsAuthorityParty": [
                  {
                    "Name": "harry's test"
                  }
                ],
                "Description": "harry's test",
                "Identifier": "harry's test"
              }
            ],
            "CoordX": 1.1,
            "CoordY": 1.1,
            "CoordZ": 1.1,
            "Value": "harry's test"
          },
          "Code": "harry's test",
          "Name": "harry's test"
        },
        "GeopoliticalLocation": {
          "Name": "harry's test"
        },
        "Value": "harry's test"
      }
    ],
    "Route": [
      {
        "RouteSegment": {
          "Description": "harry's test",
          "Identifier": "harry's test",
          "RequestedFlightLevel": "harry's test",
          "RequestedFlightLevelPoint": "harry's test",
          "TrueAirspeed": "harry's test",
          "TrueAirspeedPoint": "harry's test"
        },
        "Description": "harry's test",
        "Identifier": "harry's test",
        "RequestedFlightLevel": "harry's test",
        "RequestedFlightLevelPoint": "harry's test",
        "RouteInternationalDomestic": "harry's test",
        "RouteText": "harry's test",
        "StandardInstrumentDeparture": "harry's test",
        "TrueAirspeed": "harry's test",
        "TrueAirspeedPoint": "harry's test"
      }
    ],
    "DroneAircraftMovementIdentification": {
      "DisplayedIdentifier": "harry's test",
      "Number": "harry's test",
      "ScheduledDateTime": "harry's test"
    },
    "DroneAircraftMovementStatus": {
      "Cancelled": "harry's test",
      "Cleared": "harry's test",
      "Code": "harry's test",
      "DeicingStatus": "harry's test",
      "Deleted": "harry's test",
      "OperationalStatus": "harry's test",
      "PublicStatus": "harry's test",
      "Regulated": "harry's test"
    },
    "OperationalTimes": {
      "AircraftMovementMeasure": {
        "Code": "harry's test",
        "Description": "harry's test",
        "Identifier": "harry's test",
        "Name": "harry's test",
        "Title": "harry's test",
        "Value": "harry's test"
      },
      "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
      "ActualCommencementofDeicingTimeACZT": "harry's test",
      "ActualDeIcingDurationADIT": "harry's test",
      "ActualEndBoardingTimeAEBT": "harry's test",
      "ActualEndofDeicingTimeAEZT": "harry's test",
      "ActualEndofGroundHandlingTimeAEGT": "harry's test",
      "ActualFinalApproachTimeAFAT": "harry's test",
      "ActualGroundHandlingDurationAGHT": "harry's test",
      "ActualInBlockTimeAIBT": "harry's test",
      "ActualLandingTimeALDT": "harry's test",
      "ActualLastCallTime": "harry's test",
      "ActualOffBlockTimeAOBT": "harry's test",
      "ActualReadyforDeicingTimeARZT": "harry's test",
      "ActualReadyforDepartureTimeARDT": "harry's test",
      "ActualStartBoardingTimeASBT": "harry's test",
      "ActualStartUpApprovalTimeASAT": "harry's test",
      "ActualStartUpRequestTimeASRT": "harry's test",
      "ActualTakeOffTimeATOT": "harry's test",
      "ActualTaxiInDurationAXIT": "harry's test",
      "ActualTaxiOutDurationAXOT": "harry's test",
      "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
      "ActualTurnaroundTimeATTT": "harry's test",
      "CalculatedTakeOffTimeCTOT": "harry's test",
      "EntryintoApproachZoneTime": "harry's test",
      "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
      "EstimatedDeIcingDurationEDIT": "harry's test",
      "EstimatedEndBoardingTimeEEBT": "harry's test",
      "EstimatedEndofDeicingTimeEEZT": "harry's test",
      "EstimatedInBlockTimeEIBT": "harry's test",
      "EstimatedLandingTimeELDT": "harry's test",
      "EstimatedLastCallTime": "harry's test",
      "EstimatedOffBlockTimeEOBT": "harry's test",
      "EstimatedReadyforDeicingTimeERZT": "harry's test",
      "EstimatedStartBoardingTime": "harry's test",
      "EstimatedTakeOffTimeETOT": "harry's test",
      "EstimatedTaxiInDurationEXIT": "harry's test",
      "EstimatedTaxiOutDurationEXOT": "harry's test",
      "EstimatedTurnAroundDurationETTT": "harry's test",
      "MinimumTurnAroundTimeMTTT": "harry's test",
      "PlannedLastCallTime": "harry's test",
      "PlannedStartBoardingTime": "harry's test",
      "ScheduledInBlockTimeSIBT": "harry's test",
      "ScheduledOffBlockTimeSOBT": "harry's test",
      "ScheduledTurnAroundDurationSTTT": "harry's test",
      "TargetLandingTimeTLDT": "harry's test",
      "TargetOffBlockTimeTOBT": "harry's test",
      "TargetStartUpApprovalTimeTSAT": "harry's test",
      "TargetTakeOffTimeTTOT": "harry's test"
    },
    "AircraftMovementStatus": "harry's test",
    "ArrivalOrDeparture": "harry's test",
    "Comments": "harry's test",
    "Description": "harry's test",
    "FlightOriginOrDestination": "harry's test",
    "Identifier": "harry's test",
    "OperatedDateTime": "harry's test",
    "Priority": "harry's test",
    "ScheduledDateTime": "harry's test"
  },
  "ScheduledDroneAircraftMovement": {
    "Activity": [
      {
        "ActivityType": [
          {
            "Description": "harry's test",
            "Value": "harry's test"
          }
        ],
        "Description": "harry's test",
        "Value": "harry's test"
      }
    ],
    "DroneAircraftMovementRuleType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "DroneAircraftMovementType": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "DroneAircraftTransport": [
      {
        "FutureMaximumTakeOffWeight": 1.1,
        "AircraftTransportEquipment": [
          {
            "Mode": "harry's test"
          }
        ],
        "DroneAircraftTransportType": [
          {
            "Value": "harry's test"
          }
        ],
        "DroneAircraftTransportIdentification": {
          "Registration": "harry's test"
        },
        "AircraftDescription": "harry's test",
        "Mode": "harry's test",
        "GuidanceRequired": ""
      }
    ],
    "OperationalTimes": [
      {
        "AircraftMovementMeasure": {
          "Code": "harry's test",
          "Description": "harry's test",
          "Identifier": "harry's test",
          "Name": "harry's test",
          "Title": "harry's test",
          "Value": "harry's test"
        },
        "ActualCommenceofGroundHandlingTimeACGT": "harry's test",
        "ActualCommencementofDeicingTimeACZT": "harry's test",
        "ActualDeIcingDurationADIT": "harry's test",
        "ActualEndBoardingTimeAEBT": "harry's test",
        "ActualEndofDeicingTimeAEZT": "harry's test",
        "ActualEndofGroundHandlingTimeAEGT": "harry's test",
        "ActualFinalApproachTimeAFAT": "harry's test",
        "ActualGroundHandlingDurationAGHT": "harry's test",
        "ActualInBlockTimeAIBT": "harry's test",
        "ActualLandingTimeALDT": "harry's test",
        "ActualLastCallTime": "harry's test",
        "ActualOffBlockTimeAOBT": "harry's test",
        "ActualReadyforDeicingTimeARZT": "harry's test",
        "ActualReadyforDepartureTimeARDT": "harry's test",
        "ActualStartBoardingTimeASBT": "harry's test",
        "ActualStartUpApprovalTimeASAT": "harry's test",
        "ActualStartUpRequestTimeASRT": "harry's test",
        "ActualTakeOffTimeATOT": "harry's test",
        "ActualTaxiInDurationAXIT": "harry's test",
        "ActualTaxiOutDurationAXOT": "harry's test",
        "ActualTimeOfOperationLastPortOfCallLPocATO": "harry's test",
        "ActualTurnaroundTimeATTT": "harry's test",
        "CalculatedTakeOffTimeCTOT": "harry's test",
        "EntryintoApproachZoneTime": "harry's test",
        "EstimatedCommencementofDeIcingTimeECZT": "harry's test",
        "EstimatedDeIcingDurationEDIT": "harry's test",
        "EstimatedEndBoardingTimeEEBT": "harry's test",
        "EstimatedEndofDeicingTimeEEZT": "harry's test",
        "EstimatedInBlockTimeEIBT": "harry's test",
        "EstimatedLandingTimeELDT": "harry's test",
        "EstimatedLastCallTime": "harry's test",
        "EstimatedOffBlockTimeEOBT": "harry's test",
        "EstimatedReadyforDeicingTimeERZT": "harry's test",
        "EstimatedStartBoardingTime": "harry's test",
        "EstimatedTakeOffTimeETOT": "harry's test",
        "EstimatedTaxiInDurationEXIT": "harry's test",
        "EstimatedTaxiOutDurationEXOT": "harry's test",
        "EstimatedTurnAroundDurationETTT": "harry's test",
        "MinimumTurnAroundTimeMTTT": "harry's test",
        "PlannedLastCallTime": "harry's test",
        "PlannedStartBoardingTime": "harry's test",
        "ScheduledInBlockTimeSIBT": "harry's test",
        "ScheduledOffBlockTimeSOBT": "harry's test",
        "ScheduledTurnAroundDurationSTTT": "harry's test",
        "TargetLandingTimeTLDT": "harry's test",
        "TargetOffBlockTimeTOBT": "harry's test",
        "TargetStartUpApprovalTimeTSAT": "harry's test",
        "TargetTakeOffTimeTTOT": "harry's test"
      }
    ],
    "PlannedDestinationLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialReferenceSystemType": [
                  {
                    "Code": "harry's test",
                    "Description": "harry's test"
                  }
                ],
                "SpatialStandardsAuthorityParty": [
                  {
                    "Name": "harry's test"
                  }
                ],
                "Description": "harry's test",
                "Identifier": "harry's test"
              }
            ],
            "CoordX": 1.1,
            "CoordY": 1.1,
            "CoordZ": 1.1,
            "Value": "harry's test"
          },
          "Code": "harry's test",
          "Name": "harry's test"
        },
        "GeopoliticalLocation": {
          "Name": "harry's test"
        },
        "Value": "harry's test"
      }
    ],
    "PlannedOriginLocation": [
      {
        "GeographicLocation": {
          "SpatialReferenceDefinition": {
            "SpatialReferenceSystem": [
              {
                "SpatialReferenceSystemType": [
                  {
                    "Code": "harry's test",
                    "Description": "harry's test"
                  }
                ],
                "SpatialStandardsAuthorityParty": [
                  {
                    "Name": "harry's test"
                  }
                ],
                "Description": "harry's test",
                "Identifier": "harry's test"
              }
            ],
            "CoordX": 1.1,
            "CoordY": 1.1,
            "CoordZ": 1.1,
            "Value": "harry's test"
          },
          "Code": "harry's test",
          "Name": "harry's test"
        },
        "GeopoliticalLocation": {
          "Name": "harry's test"
        },
        "Value": "harry's test"
      }
    ],
    "Route": [
      {
        "RouteSegment": {
          "Description": "harry's test",
          "Identifier": "harry's test",
          "RequestedFlightLevel": "harry's test",
          "RequestedFlightLevelPoint": "harry's test",
          "TrueAirspeed": "harry's test",
          "TrueAirspeedPoint": "harry's test"
        },
        "Description": "harry's test",
        "Identifier": "harry's test",
        "RequestedFlightLevel": "harry's test",
        "RequestedFlightLevelPoint": "harry's test",
        "RouteInternationalDomestic": "harry's test",
        "RouteText": "harry's test",
        "StandardInstrumentDeparture": "harry's test",
        "TrueAirspeed": "harry's test",
        "TrueAirspeedPoint": "harry's test"
      }
    ],
    "ScheduledAircraftMovementStatus": [
      {
        "Code": "harry's test",
        "Description": "harry's test"
      }
    ],
    "ScheduledDroneAircraftMovementIdentification": [
      {
        "Identifier": "harry's test",
        "ScheduledDateTime": "harry's test",
        "SystemIdentifier": "harry's test"
      }
    ],
    "ContactResolutionScope": "harry's test",
    "Description": "harry's test",
    "EstimatedDuration": "harry's test",
    "EstimatedTimeOfArrival": "harry's test",
    "OtherInformation": "harry's test",
    "Purpose": "harry's test",
    "Remark": "harry's test",
    "SORAReference": "harry's test",
    "Summary": "harry's test"
  },
  "departureAirport": "harry's test",
  "arrivalAirport": "harry's test",
  "originDate": "harry's test"
}
flight-plan.tsx:121
objectToAdd {
  "TypeBRawMessage": "harry's test"
}
flight-plan.tsx:122
